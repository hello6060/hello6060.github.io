<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>博客平台迁移</title>
    <link href="/2021/02/25/%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0%E8%BF%81%E7%A7%BB/"/>
    <url>/2021/02/25/%E5%8D%9A%E5%AE%A2%E5%B9%B3%E5%8F%B0%E8%BF%81%E7%A7%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="博客平台迁移掉"><a href="#博客平台迁移掉" class="headerlink" title="博客平台迁移掉"></a>博客平台迁移掉</h1><p>白嫖的阿里云服务器终究还是到期了，屋漏偏逢连夜雨，备案的域名也到期。</p><p>续租好贵</p><p>还是把平台搬到github pages上了</p><p>图床很头疼，买了域名，但是没有主机备案不了，七牛云也就不行了的🤔</p><p>。。。。</p><p>先这样凑合吧</p><p><img src="https://i.loli.net/2021/02/25/2O1vDr4BPzSdyQK.png"></p>]]></content>
    
    
    <categories>
      
      <category>博客</category>
      
    </categories>
    
    
    <tags>
      
      <tag>博客</tag>
      
      <tag>blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我又又又修好了这个古董</title>
    <link href="/2021/02/25/%E6%88%91%E5%8F%88%E5%8F%88%E5%8F%88%E4%BF%AE%E5%A5%BD%E4%BA%86%E8%BF%99%E4%B8%AA%E5%8F%A4%E8%91%A3/"/>
    <url>/2021/02/25/%E6%88%91%E5%8F%88%E5%8F%88%E5%8F%88%E4%BF%AE%E5%A5%BD%E4%BA%86%E8%BF%99%E4%B8%AA%E5%8F%A4%E8%91%A3/</url>
    
    <content type="html"><![CDATA[<h1 id="我又又又修好了这个古董"><a href="#我又又又修好了这个古董" class="headerlink" title="我又又又修好了这个古董"></a>我又又又修好了这个古董</h1><p>B😂🤠</p><p><img src="https://i.loli.net/2021/02/25/1TaoOi6HGYDRXdg.png"></p><p><img src="https://i.loli.net/2021/02/25/4ylD7rPFIeXvWhd.png"></p><p>可惜屏幕给我翘坏了，有一条蓝线😩</p><p><img src="https://i.loli.net/2021/02/25/VS5BP9aCXkhIvdE.png"></p>]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人</tag>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>《穷爸爸和富爸爸》读书笔记</title>
    <link href="/2021/02/20/%E3%80%8A%E7%A9%B7%E7%88%B8%E7%88%B8%E5%92%8C%E5%AF%8C%E7%88%B8%E7%88%B8%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/02/20/%E3%80%8A%E7%A9%B7%E7%88%B8%E7%88%B8%E5%92%8C%E5%AF%8C%E7%88%B8%E7%88%B8%E3%80%8B%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="《穷爸爸和富爸爸》读书笔记"><a href="#《穷爸爸和富爸爸》读书笔记" class="headerlink" title="《穷爸爸和富爸爸》读书笔记"></a>《穷爸爸和富爸爸》读书笔记</h1><p>整本书围绕6个主题展开</p><ul><li>第一课 富人不为钱工作</li><li>第二课 为什么要教授财务知识</li><li>第三课 关注自己的事业</li><li>第四课 税收的历史和公司的力量</li><li>第五课 富人的投资</li><li>第六课 学会不为钱工作</li></ul><h3 id="第一课-不为钱工作，让钱为你工作"><a href="#第一课-不为钱工作，让钱为你工作" class="headerlink" title="第一课 不为钱工作，让钱为你工作"></a>第一课 不为钱工作，让钱为你工作</h3><p>愤怒和热爱可以激发激情——一个学习的关键因素。</p><p>人们让恐惧和贪婪控制了自己的人生。</p><p>一个好工作不能解决钱的问题，大部分人掉入这个陷阱中</p><blockquote><p>富爸爸说，“我只希望你们有机会避开由恐惧和欲望组成的陷阱，按照你们喜欢的方式利用恐惧和欲望，而不要让它们控制你们。这就是我想教你们的。我对教你们挣大钱不感兴趣，那解决不了问题。如果你们不先控制恐惧和欲望，即使你们获得高薪，也只不过是金钱的奴隶而已。”</p></blockquote><p>做理财和投资时候不要情绪化，怕没钱，保持理智，学会支配钱，而不是害怕它</p><p>富人也痛苦，是因为他们的欲望随着财富的增加而增加</p><p>工作只是面对长期问题的一种暂时的解决办法。</p><p>富人创造钱，通过他们的脑子，想象的力量，创立一条发财之路</p><h3 id="第二章-为什么要学习提高自己的财商"><a href="#第二章-为什么要学习提高自己的财商" class="headerlink" title="第二章 为什么要学习提高自己的财商"></a>第二章 为什么要学习提高自己的财商</h3><p>你的认知决定你的财富</p><blockquote><p>我想有太多人过多地关注钱，而不是关注他们最大的财富——所受的教育。如果人们能灵活一些，保持开放的头脑不断学习，他们将在时代的变化中一天天地富有起来。如果人们认为钱能解决一切问题，恐怕他们的日子就不会太好过。只有知识才能解决问题并创造财富，那些不是靠财务知识挣来的钱也不会长久。</p></blockquote><p>在生活中你挣了多少钱并不重要，重要的是你留下了多少钱，以及能够留住多久。</p><p>除了学习技能知识，还要多学习财务知识</p><blockquote><p>21世纪的文盲不是那些不能读和写的人，而是那些不能学习、忘记、再学习的人。”</p></blockquote><p>傻瓜财务原则：你必须明白资产和负债的区别，并且购买资产。</p><blockquote><p>资产是能把钱放进我口袋里的东西。负债是把钱从我口袋里取走的东西。</p></blockquote><p style="text-align:center">现金流</p><p>比金钱更加重要的是一个好团队，个人的力量有限，学会管理一个团队，让更多的人为你工作赚钱</p><p>通过你的资产项为你偿还房贷</p><blockquote><p>我并不是说就一定不能买房子。我的意思是要理解资产和负债的区别。当我想要换一所大一点的房子时，我会先买入一些资产，让它们创造能够支付这所房子的现金流。</p></blockquote><p>为什么富人越富</p><p>中产阶级的危机–不断增加的欲望需求</p><blockquote><p>中产阶级发现自己总是在财务问题上挣扎。他们最主要的收入就是工资，而当工资增加的时候，税收也就增加了，更重要的是他们的支出也和收入同步增加，接着是新一轮的“老鼠赛跑”。他们把房子作为最主要的资产，而没有把钱投在那些能带来收入的资产上。</p></blockquote><p>所谓的冒险只是你没有说明你没有掌握足够的财务知识</p><p>投入资产的钱越多，拥有的资产就越多，从现金流中收获的就越大，这种在投资不断重复，方可致富</p><ul><li>富人买入资产。</li><li>穷人只有支出。</li><li>中产阶级购买自以为是资产的负债</li></ul><h3 id="第三课：关注自己的事业"><a href="#第三课：关注自己的事业" class="headerlink" title="第三课：关注自己的事业"></a>第三课：关注自己的事业</h3><p>区分职业和事业，专注于自己的事业</p><p>对成年人而言，把支出保持在低水平、减少借款并勤劳地工作会帮你打下一个稳固的资产基础。</p><p><strong>什么是资产呢</strong></p><ul><li>不需我到场就可以正常运作的业务。我拥有它们，但由别人经营和管理。如果我必须在那儿工作，那它就不是我的事业而是我的职业了。</li><li>股票</li><li>债券</li><li>能够产生收入的房地产</li><li>票据（借据）</li><li>版税，如音乐、手稿、专利</li><li>其他任何有价值、可产生收入或有增值潜力并且有很好销路的东西</li></ul><p>开始关注署于自己的事业，同时继续做自己的职业，买入资产而不是负债</p><p>富人往往最后享受，他们享受的钱来自于资产收益，而穷人很容易受欲望的驱使，为了享受甚至产生负债</p><blockquote><p>富人与穷人一个重要的区别就是：富人最后才买奢侈品，而穷人和中产阶级会先买下诸如大房子、珠宝、皮衣、宝石、游艇等奢侈品，因为他们想让自己看上去很富有。</p></blockquote><p>我对书中事业的定义：除了自己职业工作外，需要花费时间和精力的事，它可以给我产生另外的资产项。关注自己的事业。不要耗费一生为别人事业工作。</p><blockquote><p>关注自己的事业并不意味着要开一个公司，虽然有些人会这样。你的事业的重心应该是你的资产项，而不是你的收入项。</p></blockquote><h3 id="第四课：税收和公司的作用"><a href="#第四课：税收和公司的作用" class="headerlink" title="第四课：税收和公司的作用"></a>第四课：税收和公司的作用</h3><p>纳税的主要群体从富人转移到了中产阶级和穷人头上</p><blockquote><p>　　富人永远不会缴税。我们越来越频繁地看到政府利用税法刺激企业主和投资者创造更多的工作机会和住房。这些刺激政策降低了富人的税收。所以，政府只能从中产阶级那里获得税收。</p></blockquote><p>创办公司的好处</p><p>知识就是力量，而且钱越多，就越需要知识管理它，使它继续增加。没有知识，即使赚到了钱，钱马上就会离开你。</p><blockquote><p>但对我而言，关注我自己的事业、努力增加资产，却使我成为一名更好的雇员，因为我现在有了目标。我得起早贪黑勤奋工作，好攒钱开始房地产投资。</p></blockquote><blockquote><p>在不到3年的时间里，我在自己的小房地产公司挣到的钱比在施乐公司挣到的还多。而且我在自己的公司，也是我自己的资产项中挣到的钱，是完全为我所用的，这不像我上门推销施乐复印机时所挣的钱，富爸爸的话越来越管用了。不久我用自己公司的收入买了我的第一辆保时捷汽车，施乐的同事认为我是用工资买的，可事实上，我是把工资投资于资产项，再用资产项为我生产出来的钱购买我想要的东西。</p></blockquote><p><strong>财商的构成</strong></p><ul><li><p>了解市场</p><blockquote><p>要求了解受感情驱动的市场的“技术面”。市场的另一个因素是“基本面”，或者说是一项投资的经济意义。</p></blockquote></li><li><p>投资</p><blockquote><p>投资涉及策略和方案，这要右脑来做，是属于创造的部分。</p></blockquote></li><li><p>会计</p><blockquote><p>你管理的钱越多，就越要精确，否则这幢大厦就会倒塌。</p></blockquote></li><li><p>法律</p><blockquote><p>了解减税优惠政策和公司法的人会比雇员和小业主更快致富。</p></blockquote></li><li><p>减税优惠</p><blockquote><p>在夏威夷召开的董事会就是你的假期，买车以及随之而来的车险和修理费、健身俱乐部的会员费都是企业支出。</p></blockquote></li><li><p>在诉讼中得到保护</p><blockquote><p>将里的资产藏起来，不然债主看见。</p></blockquote></li></ul><p>如果对创办公司有兴趣的话</p><blockquote><p>加勒特·萨顿的《如何创办自己的公司》一书就对私营公司所具有的能力提供了很好的看法。</p></blockquote><h3 id="第五课：富人的投资"><a href="#第五课：富人的投资" class="headerlink" title="第五课：富人的投资"></a>第五课：富人的投资</h3><p>不仅仅关注学校的技术类知识，更加要关注个人的成长</p><blockquote><p>有许多东西比好成绩更为重要，人们称之为“魄力”“勇气”“毅力”“胆量”“气势”“精明”“勇敢”“坚强”“才华横溢”，等等。无论它们的名称是什么，它们都比学校的成绩更能从根本上决定人们的未来。</p></blockquote><p>富人使用自己高超的<strong>财商</strong>，<strong>创造性</strong>的思维，<strong>并经过精心的筹划再去冒险</strong></p><p>金钱和机遇是可以自己创造的</p><blockquote><p>可大部分人却只知道一种方法：努力工作、储蓄和借贷。那么，为什么你想提高自己的理财能力呢？因为你想成为能够自己创造机遇的人。</p></blockquote><p>“钱“不是资产，当通货膨胀时候，钱会变成负债，我们的头脑是资产，把有限的钱的数量不断扩大</p><p>如果你清楚自己在做什么，就不是在赌博；如果你把钱投进一笔交易然后只是祈祷，才是在赌博。</p><p>富爸爸用稳定，变化缓慢的房地产做资产项的基础，通过购买将要上市的小公司的股份，快速获得金钱，这也是资产项目中收益快但风险高的部分，但对于了解背后原理的人，这没有风险。</p><p>房产不一定很贵</p><blockquote><p>在我到过的每一个城市，我都听到有人说他们买不到便宜的房地产，但这并不符合我的经验。即便是在纽约和东京或者这些城市的郊区，也会有一些质量不错、价格也便宜的房产被大多数人忽略。</p></blockquote><blockquote><p>大部分人从来赢不了是因为他们太害怕失去</p><p>如果你看看人类学习的过程，就会明白我们其实就是在犯错误的过程中学到知识的。我们从跌倒中学会了走路，如果我们从不跌倒，也就永远学不会走路。</p></blockquote><p>富爸爸欣赏的电脑装配工式投资者：</p><ol><li>寻找其他人都忽视的机会</li><li>资金不一定要来自于自己或者银行贷款而来</li><li>雇佣比你聪明的人</li></ol><h3 id="第六课-学会不为钱工作"><a href="#第六课-学会不为钱工作" class="headerlink" title="第六课 学会不为钱工作"></a>第六课 学会不为钱工作</h3><p>不要高估自己的能力，不放过任何的一次学习的机会，学会从不同的方面提升自己，在知识领域1+1&gt;2，常学习那些未曾设想的知识领域</p><p>如何学习知识</p><p>学习一些新知识不一定要有大成就，用大力气去做</p><blockquote><p>“对许多知识，你只需知道一点就够了。”这是富爸爸给我的建议。</p></blockquote><p>学习管理自己的团队，掌握领导的能力很重要</p><blockquote><p>经营一家公司最困难的就是对人员进行管理。</p></blockquote><p><strong>选择一名好的老师</strong>（已经做了你想做的事情的人）</p><blockquote><p>我从富爸爸那里学到的东西变得愈加清晰，那就是选择老师的重要性。要选择那些真正做过你想做的事情的人当自己的老师。</p></blockquote><p>选择一家有好的员工培养体系的公司有时比工资高低更加的重要</p><blockquote><p>如果想学习销售技能，最好进一家网络营销公司，也被称为多级营销公司。这类公司多半能够提供良好的培训项目，帮助人们克服因失败造成的沮丧和恐惧心理，这种心理往往是导致人们不成功的主要原因。从长远来看，教育比金钱更有价值。</p></blockquote><p>依附于公司的生活不可靠，打工只是比破产好一点</p><p>学习的技能最好有广泛的用处，否则你通过这项技能赚到钱的机遇会很少</p><blockquote><p>富爸爸建议我和迈克去“培养”自己。许多企业也是这么做的，他们在商学院里挑选一个年轻聪明的学生，并开始“培养”他，希望有朝一日他能领导这家公司。因此，这些聪明的年轻人并不去专项钻研某一个部门的业务，而是从一个部门跳到另一个部门，从而学到整个企业各个系统的知识。富人们也常常这样“培养”自己的或是别人的孩子，通过这种方法，孩子们能对如何经营一家企业有一个整体的认识，并可以了解不同部门的相互关系。</p></blockquote><p>销售=收入，提高自己的交际能力</p><blockquote><p>富爸爸顾问布莱尔·辛格是我们的销售团队专家，他已经把“销售=收入”这个理念植入我的脑海30年。您的销售能力——沟通和自我优势定位——直接影响成功与否。</p></blockquote><blockquote><p>精通专业技能既是优势也是弱点。我有许多朋友，他们非常有天赋，但不善于与其他人交流，结果他们的收入少得可怜。我建议他们用一年时间来学销售，即使挣不到什么钱，可他们处理人际关系的能力会大大提高，这种能力是无价的。</p></blockquote><h3 id="克服困难"><a href="#克服困难" class="headerlink" title="克服困难"></a>克服困难</h3><p>当失去金钱时感到恐惧是件正常的事情，但不要逃避这种恐惧，更不要停止投资行为，从中吸取教训，再下次投资时候变得更加的精明</p><blockquote><p>“人人都想上天堂，却没有人想死。”</p><p>失败会激励胜利者，击垮失败者。</p></blockquote><p><strong>不要过分的使用平衡，安全的投资对应的收益也是少的可怜</strong></p><blockquote><p>如果你的资金很少而又想致富，你必须首先集中于一点，而不是追求平衡。那些成功的投资者，在最初肯定不是追求平衡的，追求平衡的人只会在原地踏步。要进步，你必须先做到不平衡，并注意怎样才能使自己不断进步。</p></blockquote><blockquote><p>学校不允许我们犯错，并惩罚犯错的学生。在现实世界中，如果承认错误，并总结经验教训，那么犯错是无价的。适当恐惧是好事，但我们不应该生活在对犯错的严重恐惧中。犯错是好事，前提是我们能在每一次失败中吸取教训。</p></blockquote><p>远离那些怨天尤人的小鸡们</p><p>忙碌的人常常是最懒惰的人</p><blockquote><p>如果他们不忙着工作或是与孩子在一起，就会忙着看电视、钓鱼、打高尔夫球和购物。总之，他们内心很清楚自己是在逃避一些很重要的事情。这是懒惰最普遍的表现形式，一种通过忙碌掩饰下的懒惰。</p></blockquote><p>克服懒惰的方法就是适量的“贪婪”</p><p>把“我可付不起”变成“我怎样才能付得起？”</p><p><strong>学会先支付自己</strong></p><blockquote><p>我喜欢富爸爸的这句话。“所以，如果我也学会先支付给自己，就会在财务上更‘强壮’，噢，应该是在精神上和财务上都更加‘强壮’。”富爸爸点了点头。</p></blockquote><p>不要自负，保持学习的心态</p><blockquote><p>在金钱、财务和投资领域，有许多人完全不知道自己在谈论什么。财经领域的大部分人只不过像二手车推销员似的一心想兜售产品而已。如果你知道自己在某一问题上有所欠缺，你就应该找一位本领域的专家或是一本相关的书，马上开始教育自己。</p></blockquote><h3 id="开始行动吧【十条准则】"><a href="#开始行动吧【十条准则】" class="headerlink" title="开始行动吧【十条准则】"></a>开始行动吧【十条准则】</h3><p>发现你为什么想要的财富自由的强大的精神动力</p><blockquote><p>如果促使你前进的动力不够强大，那么前行道路上的严酷现实就会使你退缩。我曾失败过很多次，但就是这种深层的精神动力使我爬起来继续前进。我想在40岁时就实现财务自由，但是一直到47岁，在我经历了许多磨炼之后才真正实现了目标。</p></blockquote><p>每天面临选择时候，选择将时间资产和学习投入到使我变成富人的那一边，我的选择很重要</p><blockquote><p>在投资方面，大部分人选择的是直接去投资，而不是首先投资于学习如何投资。</p></blockquote><p>慎重的选择朋友，培养好的关系网，这会对自己很有帮助</p><p>聪明的投资者总是站在会找到新的浪头，而不是追赶大家都知道的浪</p><blockquote><p>胆小的投资者总是亦步亦趋地跟在众人后面，当欲望驱使他们终于冒险投资时，精明的投资者早就已经获利退出了。明智的投资者往往会购买一项不被大众看好的投资，他们懂得利润在购买时就已确定，而不是在出售时获得的，他们会耐心地等待投资的增值。</p></blockquote><p>内线交易也是一种策略</p><blockquote><p>你越早得到信息，获利的机会就越大，风险也会越小，这就是朋友的作用。这也是一种财商。</p></blockquote><p>首先支付自己很重要，将资金为我所用，不被银行和市场推着走，这是一种自律，是一种胆量</p><p> <strong>先支付自己可以赚到更多的钱</strong></p><blockquote><p>曾经出于种种原因，我的现金流远低于应付账单的数额，但我仍然首先支付给自己。我的会计师和簿记员惊恐地尖叫：“他们会找你讨债的，国税局会把你投入监狱”“你这样做是在毁掉自己的信用”“他们会切断电源”，我不为所动，继续首先支付自己。</p><p>【这种自律是一种胆量】</p><p>这本书的真正目的是要告诉你：有胆量不随大流才能致富。你也许并不软弱，但一旦涉及金钱，往往会变得怯懦。</p><p>我和我妻子都信用良好，我们不会陷入债务危机，或动用储蓄、卖出股票来偿付消费带来的债务，因为这样做在理财上实在太不明智了。</p></blockquote><p>首先支付自己的两个原则是1. 不要背上数额巨大的债务 2. 资金短缺时，让压力去发挥作用，不要伤害你的的资本，压力带来新办法，带来更多的钱</p><blockquote><p>穷人有一些不好的习惯，其中一个普遍的坏习惯就是随便动用储蓄。富人知道储蓄只能用于创造更多的收入，而不是用来支付账单。</p></blockquote><p>任用可靠的人才，并给他们丰厚的薪水。这可以节约你宝贵的时间，同时赚到更多的钱</p><blockquote><p>明智的投资者不只看到投资回报率，而且还能看到，一旦收回投资，就能额外得到的资产。这也是财商。</p></blockquote><p>多想想我现在所处的状况，富人会怎么做，将自己代入到富人的视角里</p><p>先给予后取回报，不管在金钱上还是情感上都是如此的</p><blockquote><p>我发现，越真诚地教那些想学习的人，我就从中学到越多。如果你想学习有关金钱的知识，那就要先告诉别人你赚钱的方法，然后，新的思想和绝妙的灵感就会喷涌而出。</p></blockquote><p>将新学到的知识投靠到实际行动中去</p><blockquote><p>以上这些只是我过去曾经做过的事情中的一小部分，我将继续发现投资机会。最重要的是“做过”和“去做”。在书中我曾多次提到，在你得到财富的回报以前必须先行动。那么现在就行动吧！</p></blockquote><h3 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h3><p>有三种收入方法</p><ul><li>劳动收入</li><li>投资组合收入</li><li>被动收入</li></ul><blockquote><p>富爸爸常说：“变富有的关键是拥有尽快将劳动性收入转换成被动收入或投资组合收入的能力。”</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>理财</category>
      
      <category>读书</category>
      
    </categories>
    
    
    <tags>
      
      <tag>理财</tag>
      
      <tag>读书</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Python写一个简单的交互式SSH客户端</title>
    <link href="/2020/11/01/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%A4%E4%BA%92%E5%BC%8FSSH%E5%AE%A2%E6%88%B7%E7%AB%AF/"/>
    <url>/2020/11/01/%E7%94%A8Python%E5%86%99%E4%B8%80%E4%B8%AA%E7%AE%80%E5%8D%95%E7%9A%84%E4%BA%A4%E4%BA%92%E5%BC%8FSSH%E5%AE%A2%E6%88%B7%E7%AB%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="用Python写一个简单的交互式SSH客户端"><a href="#用Python写一个简单的交互式SSH客户端" class="headerlink" title="用Python写一个简单的交互式SSH客户端"></a>用Python写一个简单的交互式SSH客户端</h1><p>在学习了python自动脚本后,  就想写一个简单的shell</p><p>使用的是paramiko包</p><p class="note note-info">简介</p><blockquote><p>ssh是一个协议，OpenSSH是其中一个开源实现，paramiko是Python的一个库，实现了SSHv2协议(底层使用cryptography)。</p><p>有了Paramiko以后，我们就可以在Python代码中直接使用SSH协议对远程服务器执行操作，而不是通过ssh命令对远程服务器进行操作。</p><p>paramiko包含两个核心组件：SSHClient和SFTPClient。</p></blockquote><p>在自动脚本中命令间是隔离的, 但我想要程序能做到交互的功能, 所以要保持住ssh的状态, 之前的exec_command函数无法使用了</p><p>这里我使用了invoke_shell函数(区别在于invoke_shell使用SSH shell通道,而exec_command使用SSH exec通道)</p><p class="note note-primary">代码</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> paramiko, time<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">send</span>(<span class="hljs-params">cmd, channel</span>):</span>    cmd += <span class="hljs-string">&#x27;\n&#x27;</span>    result = <span class="hljs-string">&#x27;&#x27;</span>    channel.send(cmd)    <span class="hljs-comment"># 有些命令执行需要较长时间, 这里使用循环做回显等待</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        time.sleep(<span class="hljs-number">0.2</span>)        <span class="hljs-comment"># recv会将我们输入的cmd带回来, 将其切割掉</span>        res = channel.recv(<span class="hljs-number">65535</span>)[len(cmd):]        res = res.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)        result += res        print(res,end=<span class="hljs-string">&quot;&quot;</span>)    <span class="hljs-comment"># 判断通道是否已经空闲</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> channel.recv_ready():            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">return</span> result<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    ssh = paramiko.SSHClient()    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())  <span class="hljs-comment"># 忽略主机key</span>    ssh.connect(<span class="hljs-string">&#x27;10.10.10.200&#x27;</span>, port=<span class="hljs-number">22</span>, username=<span class="hljs-string">&#x27;root&#x27;</span>, password=<span class="hljs-string">&#x27;000000&#x27;</span>, compress=<span class="hljs-literal">True</span>)    channel = ssh.invoke_shell()    send(<span class="hljs-string">&quot;\n&quot;</span>, channel)    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        cmd = input(<span class="hljs-string">&quot;&quot;</span>)        send(cmd,channel)</code></pre><p class="note note-success">运行</p><p><img src="http://img.ljh666.xyz/img/20201101164441.png"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Python</tag>
      
      <tag>shell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LNMP搭建与个人博客的部署</title>
    <link href="/2020/09/21/LNMP%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%83%A8%E7%BD%B2/"/>
    <url>/2020/09/21/LNMP%E6%90%AD%E5%BB%BA%E4%B8%8E%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="LNMP搭建与个人博客的部署"><a href="#LNMP搭建与个人博客的部署" class="headerlink" title="LNMP搭建与个人博客的部署"></a>LNMP搭建与个人博客的部署</h1><p class="note note-primary">primary</p><h2 id="环境规划"><a href="#环境规划" class="headerlink" title="环境规划"></a>环境规划</h2><table><thead><tr><th align="center">IP</th><th align="center">主机名</th><th align="center">节点</th></tr></thead><tbody><tr><td align="center">192.168.100.100</td><td align="center">master</td><td align="center">LNMP平台</td></tr></tbody></table><h2 id="配置基础环境"><a href="#配置基础环境" class="headerlink" title="配置基础环境"></a>配置基础环境</h2><h3 id="关闭防火墙和SElinux"><a href="#关闭防火墙和SElinux" class="headerlink" title="关闭防火墙和SElinux"></a>关闭防火墙和SElinux</h3><pre><code class="hljs gauss">systemctl <span class="hljs-keyword">stop</span> firewalldsystemctl <span class="hljs-keyword">disable</span> firewalld</code></pre><pre><code class="hljs angelscript">setenforce <span class="hljs-number">0</span></code></pre><h3 id="配置IP地址"><a href="#配置IP地址" class="headerlink" title="配置IP地址"></a>配置IP地址</h3><pre><code class="hljs shell">cd /etc/sysconfig/network-scripts/ ## 进入网卡配置文件夹</code></pre><pre><code class="hljs shell">vi ifcfg-eno16777736  ## 编辑网卡文件</code></pre><pre><code class="hljs shell">TYPE=EthernetBOOTPROTO=static  ## 修改为静态IP地址DEFROUTE=yesPEERDNS=yesPEERROUTES=yesIPV4_FAILURE_FATAL=noIPV6INIT=yesIPV6_AUTOCONF=yesIPV6_DEFROUTE=yesIPV6_PEERDNS=yesIPV6_PEERROUTES=yesIPV6_FAILURE_FATAL=noNAME=eno16777736UUID=751ec73f-6cff-486d-93cf-1ddf3d088180DEVICE=eno16777736ONBOOT=yesIPADDR=192.168.100.100    ## 配置IPNETWORK=255.255.255.0     ## 配置网络掩码</code></pre><p>wq保存退出</p><pre><code class="hljs routeros">systemctl restart<span class="hljs-built_in"> network </span>## 重启网络服务</code></pre><p>在宿主机验证网络配置是否正确</p><pre><code class="hljs angelscript">ping <span class="hljs-number">192.168</span><span class="hljs-number">.100</span><span class="hljs-number">.100</span></code></pre><p>无法ping通:</p><ul><li>检查宿主机仅主机模式网卡是否开启<img src="http://img.ljh666.xyz/img/20200930195133.png"></li><li>检查vmware是否连接仅主机模式网卡<img src="http://img.ljh666.xyz/img/20200930195055.png"></li></ul><p>使用CRT连接虚拟机, 进行后续操作</p><p><img src="http://img.ljh666.xyz/img/20200930195232.png"></p><p><img src="http://img.ljh666.xyz/img/20200930195344.png"></p><h3 id="配置YUM源"><a href="#配置YUM源" class="headerlink" title="配置YUM源"></a>配置YUM源</h3><p>备份官方yum配置文件</p><pre><code class="hljs shell">mkdir /root/backup    ## 创建一个用于存放备份文件的文件夹cd /etc/yum.repos.d/  ## 进入yum配置文件存放文件夹mv ./* /root/backup   ## 备份</code></pre><p>配置本地yum源(等同离线版应用商店)</p><pre><code class="hljs shell">vi local.repo ## 必须以.repo结尾</code></pre><pre><code class="hljs ini"><span class="hljs-section">[local]</span><span class="hljs-attr">name</span>=local<span class="hljs-attr">baseurl</span>=file:///media/cdrom<span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span><span class="hljs-section">[lnmp]</span><span class="hljs-attr">name</span>=lnmp<span class="hljs-attr">baseurl</span>=file:///root/lnmp<span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><span class="hljs-attr">enabled</span>=<span class="hljs-number">1</span></code></pre><p>挂载镜像文件(/media/cdrom)</p><p>可以看到镜像文件CentOS-7-x86_64-DVD-1511.iso和lnmp都在root的家目录下</p><pre><code class="hljs shell">[root@localhost ~]# lsanaconda-ks.cfg               Docker.tar.gz  wordpress-4.7.3-zh_CN.zipCentOS-7-x86_64-DVD-1511.iso  K8S.tar.gz     xiandiancirros-0.3.4-x86_64-disk.img  lnmp</code></pre><p>挂载</p><pre><code class="hljs shell">[root@localhost ~]# mkdir /media/cdrom/  ## 创建用于挂载的文件夹[root@localhost ~]# mount /root/CentOS-7-x86_64-DVD-1511.iso /media/cdrom/mount: /dev/loop1 is write-protected, mounting read-only</code></pre><p>(其他lnmp本身就是本地的文件夹, 所以无挂载可言)</p><p>检查yum源配置</p><pre><code class="hljs shell">yum list</code></pre><p>若只打印出许多rpm软件包的名字则配置正确</p><pre><code class="hljs shell">[root@localhost ~]# yum repolistLoaded plugins: fastestmirrorRepodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fastLoading mirror speeds from cached hostfilerepo id                               repo name                           status!lnmp                                 lnmp                                  178!local                                local                               3,723</code></pre><p>至此基础配置<strong>完成</strong>, 再做一次<strong>快照</strong>保存当前的状态</p><h2 id=""><a href="#" class="headerlink" title=""></a></h2><p>接下来开始LNMP平台的搭建</p><h2 id="安装mariadb"><a href="#安装mariadb" class="headerlink" title="安装mariadb"></a>安装mariadb</h2><blockquote><p>mariadb是mysql的分支</p></blockquote><pre><code class="hljs sql">yum -y <span class="hljs-keyword">install</span> mariadb mariadb-<span class="hljs-keyword">server</span></code></pre><p>安装过程可能有点慢</p><ul><li>mariadb 数据库的客户端程序(通过这个程序可以输入sql语句)</li><li>mariadb-server 数据库服务程序</li></ul><p>启动mariadb服务程序</p><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> mariadb</code></pre><p>初始化mariadb</p><pre><code class="hljs ebnf"><span class="hljs-attribute">mysql_secure_installation</span></code></pre><blockquote><p>交换界面操作:</p><p>直接回车</p><p>输入y +回车</p><p>输入root(mariadb的root用户)密码000000</p><p>再次输入密码</p><p>输入y +回车</p><p>输入n+回车</p><p>输入y +回车</p><p>输入y +回车</p></blockquote><p>登录mariadb</p><pre><code class="hljs shell">mysql -uroot -p000000  ## 注意空格的位置</code></pre><pre><code class="hljs routeros">[root@localhost ~]# mysql -uroot -p000000  Welcome <span class="hljs-keyword">to</span> the MariaDB monitor.  Commands end with ; <span class="hljs-keyword">or</span> \g.Your MariaDB<span class="hljs-built_in"> connection </span>id is 2Server version: 5.5.44-MariaDB MariaDB ServerCopyright (c) 2000, 2015, Oracle, MariaDB Corporation Ab <span class="hljs-keyword">and</span> others.Type <span class="hljs-string">&#x27;help;&#x27;</span> <span class="hljs-keyword">or</span> <span class="hljs-string">&#x27;\h&#x27;</span> <span class="hljs-keyword">for</span> help.<span class="hljs-built_in"> Type </span><span class="hljs-string">&#x27;\c&#x27;</span> <span class="hljs-keyword">to</span> clear the current input statement.MariaDB [(none)]&gt;</code></pre><p>使用<code>Ctrl+C</code>或者输入<code>quit</code>退出交换界面</p><h2 id="安装php"><a href="#安装php" class="headerlink" title="安装php"></a>安装php</h2><p>需要安装的软件包</p><ul><li>php</li><li>php-fpm(php与nginx通信用)</li><li>php-mysql(php与maraidb通信用)</li></ul><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> php php-fpm php-mysql</code></pre><p>编辑php配置文件</p><pre><code class="hljs awk">vi <span class="hljs-regexp">/etc/</span>php-fpm.d/www.conf</code></pre><p>末行模式输入set nu可以显示行号</p><pre><code class="hljs shell">38 ; RPM: apache Choosed to be able to access some dir as httpd39 user = nginx  # 修改用户为nginx40 ; RPM: Keep a group allowed to write in log dir.41 group = nginx  # 修改用户组为nginx</code></pre><p>输入wq保存退出</p><p>启动php-fpm</p><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> php-fpm</code></pre><h2 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h2><blockquote><p>nginx等同于Apache | IIS</p></blockquote><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> nginx</code></pre><h3 id="配置nginx"><a href="#配置nginx" class="headerlink" title="配置nginx"></a>配置nginx</h3><p>指定网站根目录</p><pre><code class="hljs shell">mkdir /www ## 创建网站根目录文件夹chown nginx:nginx -R /www  ## 更改根目录文件夹的宿主为nginx用户</code></pre><p>编辑配置文件</p><pre><code class="hljs gradle">vi <span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/conf.d/</span><span class="hljs-keyword">default</span>.conf</code></pre><pre><code class="hljs shell"> 8     location / &#123; 9         root   /www;    ## 修改根目录10         index  index.html index.htm index.php;  ## 添加index.php文件为默认页面11     &#125;</code></pre><pre><code class="hljs shell">30     location ~ \.php$ &#123;         ## 取消30到36行前面的注释&quot;#&quot;31         root           html;32         fastcgi_pass   127.0.0.1:9000;33         fastcgi_index  index.php;34         fastcgi_param  SCRIPT_FILENAME  /www$fastcgi_script_name;   ## 修改此行35         include        fastcgi_params;36     &#125;</code></pre><p>启动nginx</p><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> nginx</code></pre><h2 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h2><p>进入网站根目录</p><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> <span class="hljs-string">/www</span></code></pre><p>创建测试文件</p><pre><code class="hljs vim"><span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;?php phpinfo();&quot;</span> &gt; <span class="hljs-built_in">index</span>.php</code></pre><p>使用浏览器输入IP地址访问</p><p><img src="http://img.ljh666.xyz/img/PJWLFXU3%5BJSDEA6VI%5DMMF6B.png"></p><p>出现上面的页面就说明php与nginx均正确安装</p><h2 id="部署个人博客系统"><a href="#部署个人博客系统" class="headerlink" title="部署个人博客系统"></a>部署个人博客系统</h2><p>*下载wordpress安装包</p><p>wordpress安装包在/root目录下</p><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><p>下载解压软件</p><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> unzip</code></pre><p>解压</p><pre><code class="hljs awk">unzip <span class="hljs-regexp">/root/</span>wordpress-<span class="hljs-number">4.7</span>.<span class="hljs-number">3</span>-zh_CN.zip -d <span class="hljs-regexp">/root/</span></code></pre><p>将wordpress目录中的所有文件复制到nginx网站根目录下</p><pre><code class="hljs shell">/usr/bin/cp -rf /root/wordpress/* /www/  ## 覆盖且递归的复制文件</code></pre><p>查看复制的文件</p><pre><code class="hljs shell">[root@localhost www]# lltotal 184-rw-r--r--.  1 root root   418 Aug 14 01:03 index.php-rw-r--r--.  1 root root 19935 Aug 14 01:03 license.txt-rw-r--r--.  1 root root  6956 Aug 14 01:03 readme.html-rw-r--r--.  1 root root  5447 Aug 14 01:03 wp-activate.phpdrwxr-xr-x.  9 root root  4096 Aug 14 01:03 wp-admin-rw-r--r--.  1 root root   364 Aug 14 01:03 wp-blog-header.php-rw-r--r--.  1 root root  1627 Aug 14 01:03 wp-comments-post.php-rw-r--r--.  1 root root  2930 Aug 14 01:03 wp-config-sample.phpdrwxr-xr-x.  5 root root    65 Aug 14 01:03 wp-content-rw-r--r--.  1 root root  3286 Aug 14 01:03 wp-cron.phpdrwxr-xr-x. 18 root root  8192 Aug 14 01:04 wp-includes-rw-r--r--.  1 root root  2422 Aug 14 01:04 wp-links-opml.php-rw-r--r--.  1 root root  3301 Aug 14 01:04 wp-load.php-rw-r--r--.  1 root root 33939 Aug 14 01:04 wp-login.php-rw-r--r--.  1 root root  8048 Aug 14 01:04 wp-mail.php-rw-r--r--.  1 root root 16250 Aug 14 01:04 wp-settings.php-rw-r--r--.  1 root root 29896 Aug 14 01:04 wp-signup.php-rw-r--r--.  1 root root  4513 Aug 14 01:04 wp-trackback.php-rw-r--r--.  1 root root  3065 Aug 14 01:04 xmlrpc.php</code></pre><p>可以看到权限不足</p><p>更改文件宿主(实际生产环境中需要针对不同情况给权限)</p><pre><code class="hljs shell">chown -R nginx:nginx /www  ## 递归修改根目录下的文件宿主</code></pre><p>再次查看文件</p><pre><code class="hljs shell">[root@localhost www]# lltotal 184-rw-r--r--.  1 nginx nginx   418 Aug 14 01:03 index.php-rw-r--r--.  1 nginx nginx 19935 Aug 14 01:03 license.txt-rw-r--r--.  1 nginx nginx  6956 Aug 14 01:03 readme.html-rw-r--r--.  1 nginx nginx  5447 Aug 14 01:03 wp-activate.phpdrwxr-xr-x.  9 nginx nginx  4096 Aug 14 01:03 wp-admin-rw-r--r--.  1 nginx nginx   364 Aug 14 01:03 wp-blog-header.php-rw-r--r--.  1 nginx nginx  1627 Aug 14 01:03 wp-comments-post.php-rw-r--r--.  1 nginx nginx  2930 Aug 14 01:03 wp-config-sample.phpdrwxr-xr-x.  5 nginx nginx    65 Aug 14 01:03 wp-content-rw-r--r--.  1 nginx nginx  3286 Aug 14 01:03 wp-cron.phpdrwxr-xr-x. 18 nginx nginx  8192 Aug 14 01:04 wp-includes-rw-r--r--.  1 nginx nginx  2422 Aug 14 01:04 wp-links-opml.php-rw-r--r--.  1 nginx nginx  3301 Aug 14 01:04 wp-load.php-rw-r--r--.  1 nginx nginx 33939 Aug 14 01:04 wp-login.php-rw-r--r--.  1 nginx nginx  8048 Aug 14 01:04 wp-mail.php-rw-r--r--.  1 nginx nginx 16250 Aug 14 01:04 wp-settings.php-rw-r--r--.  1 nginx nginx 29896 Aug 14 01:04 wp-signup.php-rw-r--r--.  1 nginx nginx  4513 Aug 14 01:04 wp-trackback.php-rw-r--r--.  1 nginx nginx  3065 Aug 14 01:04 xmlrpc.php</code></pre><h3 id="配置数据库"><a href="#配置数据库" class="headerlink" title="配置数据库"></a>配置数据库</h3><p>创建一个给wordpress使用的数据库用户</p><p>再次登录数据库</p><pre><code class="hljs shell">[root@localhost ~]# mysql -uroot -p000000Welcome to the MariaDB monitor.  Commands end with ; or \g.Your MariaDB connection id is 3Server version: 5.5.44-MariaDB MariaDB ServerCopyright (c) 2000, 2015, Oracle, MariaDB Corporation Ab and others.Type &#x27;help;&#x27; or &#x27;\h&#x27; for help. Type &#x27;\c&#x27; to clear the current input statement.MariaDB [(none)]&gt;</code></pre><p>创建用户wp_root</p><pre><code class="hljs sql">MariaDB [(none)]&gt; grant all privileges on *.* to &#x27;wp_root&#x27;@&#x27;%&#x27; identified by &#x27;000000&#x27;;Query OK, 0 rows affected (0.00 sec)</code></pre><p>创建给wordpress使用的数据库</p><p>创建wp_db库</p><pre><code class="hljs pgsql">MariaDB [(<span class="hljs-keyword">none</span>)]&gt; <span class="hljs-keyword">create</span> <span class="hljs-keyword">database</span> wp_db;Query OK, <span class="hljs-number">1</span> <span class="hljs-keyword">row</span> affected (<span class="hljs-number">0.00</span> sec)</code></pre><p>退出</p><pre><code class="hljs sql">MariaDB [(none)]&gt; quitBye</code></pre><h3 id="配置wordpress"><a href="#配置wordpress" class="headerlink" title="配置wordpress"></a>配置wordpress</h3><p>访问</p><p>使用浏览器输入IP地址192.168.100.100访问</p><p><img src="http://img.ljh666.xyz/img/20200930220250.png"></p><p><img src="http://img.ljh666.xyz/img/20200930220340.png"></p><p>提交后看到如下提示</p><p><img src="http://img.ljh666.xyz/img/20200930220754.png"></p><p>按照提示创建文件</p><pre><code class="hljs awk">vi <span class="hljs-regexp">/www/</span>wp-config.php</code></pre><p>将提示内容复制到文件中(进入编辑模式后再复制)</p><p><img src="http://img.ljh666.xyz/img/20200930224325.png"></p><p><img src="http://img.ljh666.xyz/img/20200930224438.png"></p><p>登录后即可看到wordpress的后台</p><blockquote><p>wordpress的后台地址是http:/IP地址/wp-admin/</p><p>wordpress的前台地址是http:/IP地址/</p></blockquote><p><img src="http://img.ljh666.xyz/img/image-20200930224625611.png"></p><h2 id="使用wordpress"><a href="#使用wordpress" class="headerlink" title="使用wordpress"></a>使用wordpress</h2><p>编写一篇文章并发布</p><p><img src="http://img.ljh666.xyz/img/20200930225022.png"></p><p>浏览器访问前台页面</p><p><img src="http://img.ljh666.xyz/img/20200930225135.png"></p><p>文章发布成功,  wordpress还有其他强大的功能, 自行探索</p><p>至此使用LNMP平台部署wordpress个人博客已经完成</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p>如果访问nginx提示被拒绝, 可以查看Linux的防火墙是否关闭</p></blockquote><blockquote><p>Linux中, 一切皆文件<br>大部分配置文件的修改都不会被直接应用, 需指定系统重新加载配置文件才被应用(如:重启服务)</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.wpdaxue.com/wordpress-file-read-and-write-permission.html">WordPress文件读写权限建议</a></p><h2 id="附"><a href="#附" class="headerlink" title="附"></a>附</h2><p><a href="http://www.ljh666.xyz/2020/07/30/%E5%9C%A8Centos%E4%B8%8A%E5%AE%89%E8%A3%85HEXO%E7%9A%84%E6%95%99%E7%A8%8B/">部署基于Hexo的个人博客</a></p><p><a class="btn" href="" title="已完结">end</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>云计算初级</tag>
      
      <tag>LNMP</tag>
      
      <tag>博客</tag>
      
      <tag>wordpress</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>视频测试</title>
    <link href="/2020/08/23/%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/"/>
    <url>/2020/08/23/%E8%A7%86%E9%A2%91%E6%B5%8B%E8%AF%95/</url>
    
    <content type="html"><![CDATA[<h1 id="Minecraft-Wet-Hands-Acapella"><a href="#Minecraft-Wet-Hands-Acapella" class="headerlink" title="Minecraft - Wet Hands Acapella"></a>Minecraft - Wet Hands Acapella</h1><video width="100%" controls autoplay ><source src="http://img.ljh666.xyz/Minecraft%20-%20Wet%20Hands%20Acapella.mp4"></video><div id="dplayer0" class="dplayer hexo-tag-dplayer-mark" style="margin-bottom: 20px;"></div><script>(function(){var player = new DPlayer({"container":document.getElementById("dplayer0"),"video":{"url":"http://img.ljh666.xyz/Minecraft%20-%20Wet%20Hands%20Acapella.mp4"}});window.dplayers||(window.dplayers=[]);window.dplayers.push(player);})()</script><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">controls</span> <span class="hljs-attr">autoplay</span> &gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">source</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;http://img.ljh666.xyz/Minecraft%20-%20Wet%20Hands%20Acapella.mp4&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">video</span>&gt;</span></code></pre><pre><code class="hljs perl">&#123;% dplayer <span class="hljs-string">&quot;url=http://img.ljh666.xyz/Minecraft%20-%20Wet%20Hands%20Acapella.mp4&quot;</span> %&#125;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>视频</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Docker容器编排[Docker compose]</title>
    <link href="/2020/08/21/Docker%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%5BDocker%20compose%5D/"/>
    <url>/2020/08/21/Docker%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%5BDocker%20compose%5D/</url>
    
    <content type="html"><![CDATA[<h1 id="Docker容器编排-Docker-compose"><a href="#Docker容器编排-Docker-compose" class="headerlink" title="Docker容器编排[Docker compose]"></a>Docker容器编排[Docker compose]</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>Docker-Compose是一个容器编排的工具，适用于所有环境：生产、开发、测试以及CI工作流程</p><p><img src="http://img.ljh666.xyz/img/20200820231726.png"></p><p><img src="http://img.ljh666.xyz/img/20200820231754.png"></p><h2 id="安装Docker-compose"><a href="#安装Docker-compose" class="headerlink" title="安装Docker-compose"></a>安装Docker-compose</h2><blockquote><p>工作流程要求: </p><p>①构建一个基于Python3.4的镜像。<br>②把当前目录添加到镜像中的/code路径下。<br>③把工作路径设置成/code。<br>④安装Python依赖。<br>⑤设置容器的默认命令为pythonapp.py。</p></blockquote><pre><code class="hljs awk">wget https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/docker/</span>compose<span class="hljs-regexp">/releases/</span>download<span class="hljs-regexp">/1.26.2/</span>docker-compose-Linux-x86_64</code></pre><p>添加到系统任意一个bin文件夹(PATH常量中的任意)</p><pre><code class="hljs awk">mv docker-compose-Linux-x86_64 <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose</code></pre><p>给权限</p><pre><code class="hljs awk">chmod +x <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/bin/</span>docker-compose</code></pre><h2 id="使用compose"><a href="#使用compose" class="headerlink" title="使用compose"></a>使用compose</h2><p>创建实验文件目录</p><h3 id="编写实验文件"><a href="#编写实验文件" class="headerlink" title="编写实验文件"></a>编写实验文件</h3><pre><code class="hljs dos"><span class="hljs-built_in">mkdir</span> composetest<span class="hljs-built_in">cd</span> !$</code></pre><p>编写实验用python文件app.py</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> redis<span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flaskapp = Flask(__name__)cache = redis.Redis(host=<span class="hljs-string">&#x27;redis&#x27;</span>,port=<span class="hljs-number">6379</span>)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_hit_count</span>():</span>     retries=<span class="hljs-number">5</span>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:        <span class="hljs-keyword">try</span>:            <span class="hljs-keyword">return</span> cache.incr(<span class="hljs-string">&#x27;hits&#x27;</span>)        <span class="hljs-keyword">except</span> redis.exceptions.ConnectionError <span class="hljs-keyword">as</span>  exc:            <span class="hljs-keyword">if</span> retries == <span class="hljs-number">0</span>:                <span class="hljs-keyword">raise</span> exc            retries -= <span class="hljs-number">1</span>            time.sleep(<span class="hljs-number">0.5</span>)<span class="hljs-meta">@app.route(&#x27;/&#x27;)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello</span>():</span>    count = get_hit_count()    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;HelloWorld!I have been seen &#123;&#125; times.\n&#x27;</span>.format(count)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>,debug=<span class="hljs-literal">True</span>)</code></pre><p>在这个例子中，Redis就是应用网络中Redis容器的主机名。端口使用的Redis默认端口6379。</p><p>创建requirements.txt文件</p><pre><code class="hljs crmsh">[root@<span class="hljs-keyword">master</span> <span class="hljs-title">composetest</span>]<span class="hljs-comment"># vim requirements.txt</span>flaskredis</code></pre><p>创建Dockfile文件</p><p>在这一步中，需要编写一个Dockerfile来构建一个Docker镜像。这个镜像包含Python应用的所有依赖，也包含Python其本身。</p><pre><code class="hljs dockerfile">[root@master composetest]<span class="hljs-comment"># vim Dockerfile</span><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.4</span>-alpine<span class="hljs-keyword">ADD</span><span class="bash"> . /code</span><span class="hljs-keyword">WORKDIR</span><span class="bash"> /code</span><span class="hljs-keyword">RUN</span><span class="bash"> pip install -r requirements.txt --default-timeout=100</span><span class="hljs-keyword">CMD</span><span class="bash"> [<span class="hljs-string">&quot;python&quot;</span>,<span class="hljs-string">&quot;app.py&quot;</span>]</span></code></pre><blockquote><p>–default-timeout=100加大下载延迟, 防止报错</p></blockquote><p>创建docker-compose.yml文件, 定义服务</p><pre><code class="hljs dts">[root@master composetest]<span class="hljs-meta"># vim docker-compose.yml</span><span class="hljs-symbol">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-symbol">services:</span><span class="hljs-symbol">        web:</span><span class="hljs-symbol">                build:</span> .<span class="hljs-symbol">                ports:</span>                 - <span class="hljs-string">&quot;5000:5000&quot;</span><span class="hljs-symbol">        redis:</span><span class="hljs-symbol">                image:</span> <span class="hljs-string">&quot;redis:alpine&quot;</span></code></pre><blockquote><p>这个Compose文件中定义了两个服务Web与Redis。</p><p>Web服务使用当前目录Dockerfile构建出来的镜像，并且将容器上暴露的5000端口转发到主机的5000端口，使用FlaskWeb服务器的默认端口5000。</p><p>Redis服务使用从DockerHub注册表中拉取的公有镜像。</p></blockquote><h3 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h3><pre><code class="hljs tcl">[root@master composetest]# docker-compose up                           WARNING: The Docker Engine you&#x27;re using is running in swarm mode.Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.To deploy your application across the swarm, use `docker stack deploy`.Building webStep <span class="hljs-number">1</span>/<span class="hljs-number">5</span> : FROM python:<span class="hljs-number">3.4</span>-alpine ---&gt; c06adcf62f6eStep <span class="hljs-number">2</span>/<span class="hljs-number">5</span> : ADD . /code ---&gt; <span class="hljs-number">89</span>c5e466ba6cRemoving intermediate container <span class="hljs-number">70</span>b69b9389aaStep <span class="hljs-number">3</span>/<span class="hljs-number">5</span> : WORKDIR /code ---&gt; <span class="hljs-number">30266305</span>bc88Removing intermediate container <span class="hljs-number">0b0</span>da116d8a4Step <span class="hljs-number">4</span>/<span class="hljs-number">5</span> : RUN pip install -r requirements.txt --default-timeout=<span class="hljs-number">1000</span> ---&gt; Running in c6f549841948DEPRECATION: Python <span class="hljs-number">3.4</span> support has been deprecated. pip <span class="hljs-number">19.1</span> will be the last one supporting it. Please upgrade your Python as Python <span class="hljs-number">3.4</span> won&#x27;t be maintained <span class="hljs-keyword">after</span> March <span class="hljs-number">2019</span> (cf PEP <span class="hljs-number">429</span>).Collecting flask (from -r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/d8/<span class="hljs-number">94</span>/<span class="hljs-number">7350820</span>ae209ccdba073f83220cea1c376f2621254d1e0e82609c9a65e58/Flask<span class="hljs-number">-1.0</span><span class="hljs-number">.4</span>-py2.py3-none-any.whl (<span class="hljs-number">92</span>kB)Collecting redis (from -r requirements.txt (line <span class="hljs-number">2</span>))  Downloading https://files.pythonhosted.org/packages/<span class="hljs-number">32</span>/ae/<span class="hljs-number">28613</span>a62eea0d53d3db3147f8715f90da07667e99baeedf1010eb400f8c0/redis<span class="hljs-number">-3.3</span><span class="hljs-number">.11</span>-py2.py3-none-any.whl (<span class="hljs-number">66</span>kB)Collecting itsdangerous&gt;=<span class="hljs-number">0.24</span> (from flask-&gt;-r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/<span class="hljs-number">76</span>/ae/<span class="hljs-number">44</span>b03b253d6fade317f32c24d100b3b35c2239807046a4c953c7b89fa49e/itsdangerous<span class="hljs-number">-1.1</span><span class="hljs-number">.0</span>-py2.py3-none-any.whlCollecting Werkzeug&gt;=<span class="hljs-number">0.14</span> (from flask-&gt;-r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/c2/e4/a859d2fe516f466642fa5c6054fd9646271f9da26b0cac0d2f37fc858c8f/Werkzeug<span class="hljs-number">-0.16</span><span class="hljs-number">.1</span>-py2.py3-none-any.whl (<span class="hljs-number">327</span>kB)Collecting Jinja2&gt;=<span class="hljs-number">2.10</span> (from flask-&gt;-r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/<span class="hljs-number">65</span>/e0/eb35e762802015cab1ccee04e8a277b03f1d8e53da3ec3106882ec42558b/Jinja2<span class="hljs-number">-2.10</span><span class="hljs-number">.3</span>-py2.py3-none-any.whl (<span class="hljs-number">125</span>kB)Collecting click&gt;=<span class="hljs-number">5.1</span> (from flask-&gt;-r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/fa/<span class="hljs-number">37</span>/<span class="hljs-number">45185</span>cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click<span class="hljs-number">-7.0</span>-py2.py3-none-any.whl (<span class="hljs-number">81</span>kB)Collecting MarkupSafe&gt;=<span class="hljs-number">0.23</span> (from Jinja2&gt;=<span class="hljs-number">2.10</span>-&gt;flask-&gt;-r requirements.txt (line <span class="hljs-number">1</span>))  Downloading https://files.pythonhosted.org/packages/b9/<span class="hljs-number">2</span>e/<span class="hljs-number">64</span>db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe<span class="hljs-number">-1.1</span><span class="hljs-number">.1</span>.tar.gzBuilding wheels <span class="hljs-keyword">for</span> collected packages: MarkupSafe  Building wheel <span class="hljs-keyword">for</span> MarkupSafe (setup.py): started  Building wheel <span class="hljs-keyword">for</span> MarkupSafe (setup.py): finished with status &#x27;done&#x27;  Stored in directory: /root/.cache/pip/wheels/f2/aa/<span class="hljs-number">04</span>/<span class="hljs-number">0</span>edf07a1b8a5f5f1aed7580fffb69ce8972edc16a505916a77Successfully built MarkupSafeInstalling collected packages: itsdangerous, Werkzeug, MarkupSafe, Jinja2, click, flask, redisSuccessfully installed Jinja2<span class="hljs-number">-2.10</span><span class="hljs-number">.3</span> MarkupSafe<span class="hljs-number">-1.1</span><span class="hljs-number">.1</span> Werkzeug<span class="hljs-number">-0.16</span><span class="hljs-number">.1</span> click<span class="hljs-number">-7.0</span> flask<span class="hljs-number">-1.0</span><span class="hljs-number">.4</span> itsdangerous<span class="hljs-number">-1.1</span><span class="hljs-number">.0</span> redis<span class="hljs-number">-3.3</span><span class="hljs-number">.11</span>You are using pip version <span class="hljs-number">19.0</span><span class="hljs-number">.3</span>, however version <span class="hljs-number">19.1</span><span class="hljs-number">.1</span> is available.You should consider upgrading via the &#x27;pip install --upgrade pip&#x27; command. ---&gt; b38789157f62Removing intermediate container c6f549841948Step <span class="hljs-number">5</span>/<span class="hljs-number">5</span> : CMD python app.py ---&gt; Running in <span class="hljs-number">0e5103</span>df7977 ---&gt; e1d437e52801Removing intermediate container <span class="hljs-number">0e5103</span>df7977Successfully built e1d437e52801WARNING: Image <span class="hljs-keyword">for</span> service web was built because it did not already exist. To rebuild this image you must use `docker-compose build` or `docker-compose up --build`.Pulling redis (redis:alpine)...Trying to pull repository docker.io/library/redis ... alpine: Pulling from docker.io/library/redisdf20fa9351a1: Pull complete<span class="hljs-number">9</span>b8c029ceab5: Pull completee983a1eb737a: Pull complete<span class="hljs-number">660</span>ad543c5fc: Pull complete<span class="hljs-number">823</span>cbe4f5025: Pull completee3dd0c30e1c8: Pull completeDigest: sha256:<span class="hljs-number">6972</span>ee00fd35854dd2925904e23cb047faa004df27c62cba842248c7db6bd99dStatus: Downloaded newer image <span class="hljs-keyword">for</span> docker.io/redis:alpineCreating test_redis_1 ... doneCreating test_web_1   ... doneAttaching to test_redis_1, test_web_1redis_1  | <span class="hljs-number">1</span>:C <span class="hljs-number">20</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">16</span>:<span class="hljs-number">46</span>:<span class="hljs-number">45.289</span> # oO0OoO0OoO0Oo Redis is starting oO0OoO0OoO0Ooredis_1  | <span class="hljs-number">1</span>:C <span class="hljs-number">20</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">16</span>:<span class="hljs-number">46</span>:<span class="hljs-number">45.289</span> # Redis version=<span class="hljs-number">6.0</span><span class="hljs-number">.6</span>, bits=<span class="hljs-number">64</span>, commit=<span class="hljs-number">00000000</span>, modified=<span class="hljs-number">0</span>, <span class="hljs-keyword">pid</span>=<span class="hljs-number">1</span>, just startedredis_1  | <span class="hljs-number">1</span>:C <span class="hljs-number">20</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">16</span>:<span class="hljs-number">46</span>:<span class="hljs-number">45.289</span> # Warning: no config <span class="hljs-keyword">file</span> specified, using the default config. In order to specify a config <span class="hljs-keyword">file</span> use redis-server /path/to/redis.confredis_1  | <span class="hljs-number">1</span>:M <span class="hljs-number">20</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">16</span>:<span class="hljs-number">46</span>:<span class="hljs-number">45.290</span> * Running mode=standalone, port=<span class="hljs-number">6379.</span>redis_1  | <span class="hljs-number">1</span>:M <span class="hljs-number">20</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">16</span>:<span class="hljs-number">46</span>:<span class="hljs-number">45.290</span> # WARNING: The TCP backlog setting of <span class="hljs-number">511</span> cannot be enforced because /<span class="hljs-keyword">proc</span>/sys/net/core/somaxconn<span class="hljs-title"> is</span> set<span class="hljs-title"> to</span> the<span class="hljs-title"> lower</span> value<span class="hljs-title"> of</span> 128.redis_1  | 1:M 20<span class="hljs-title"> Aug</span> 2020 16:46:45.290 #<span class="hljs-title"> Server</span> initializedredis_1  | 1:M 20<span class="hljs-title"> Aug</span> 2020 16:46:45.290 #<span class="hljs-title"> WARNING</span> overcommit_memory<span class="hljs-title"> is</span> set<span class="hljs-title"> to</span> 0!<span class="hljs-title"> Background</span> save<span class="hljs-title"> may</span> fail<span class="hljs-title"> under</span> low<span class="hljs-title"> memory</span> condition.<span class="hljs-title"> To</span> fix<span class="hljs-title"> this</span> issue<span class="hljs-title"> add</span> &#x27;vm.overcommit_memory = 1&#x27;<span class="hljs-title"> to</span> /etc/sysctl.conf<span class="hljs-title"> and</span> then<span class="hljs-title"> reboot</span> or<span class="hljs-title"> run</span> the<span class="hljs-title"> command</span> &#x27;sysctl<span class="hljs-title"> vm.overcommit_memory=1&#x27;</span> for<span class="hljs-title"> this</span> to<span class="hljs-title"> take</span> effect.redis_1  | 1:M 20<span class="hljs-title"> Aug</span> 2020 16:46:45.290 #<span class="hljs-title"> WARNING</span> you<span class="hljs-title"> have</span> Transparent<span class="hljs-title"> Huge</span> Pages (THP)<span class="hljs-title"> support</span> enabled<span class="hljs-title"> in</span> your<span class="hljs-title"> kernel.</span> This<span class="hljs-title"> will</span> create<span class="hljs-title"> latency</span> and<span class="hljs-title"> memory</span> usage<span class="hljs-title"> issues</span> with<span class="hljs-title"> Redis.</span> To<span class="hljs-title"> fix</span> this<span class="hljs-title"> issue</span> run<span class="hljs-title"> the</span> command &#x27;echo<span class="hljs-title"> never</span> &gt; /sys/kernel/mm/transparent_hugepage/enabled&#x27;<span class="hljs-title"> as</span> root,<span class="hljs-title"> and</span> add<span class="hljs-title"> it</span> to<span class="hljs-title"> your</span> /etc/rc.local<span class="hljs-title"> in</span> order<span class="hljs-title"> to</span> retain<span class="hljs-title"> the</span> setting<span class="hljs-title"> after</span> a<span class="hljs-title"> reboot.</span> Redis<span class="hljs-title"> must</span> be<span class="hljs-title"> restarted</span> after<span class="hljs-title"> THP</span> is<span class="hljs-title"> disabled.</span><span class="hljs-title">redis_1</span>  | 1:M 20<span class="hljs-title"> Aug</span> 2020 16:46:45.291 *<span class="hljs-title"> Ready</span> to<span class="hljs-title"> accept</span> connectionsweb_1    |  *<span class="hljs-title"> Serving</span> Flask<span class="hljs-title"> app</span> &quot;app&quot; (lazy<span class="hljs-title"> loading)</span><span class="hljs-title">web_1</span>    |  *<span class="hljs-title"> Environment:</span> productionweb_1    |<span class="hljs-title">    WARNING:</span> This<span class="hljs-title"> is</span> a<span class="hljs-title"> development</span> server.<span class="hljs-title"> Do</span> not<span class="hljs-title"> use</span> it<span class="hljs-title"> in</span> a<span class="hljs-title"> production</span> deployment.web_1    |<span class="hljs-title">    Use</span> a<span class="hljs-title"> production</span> WSGI<span class="hljs-title"> server</span> instead.web_1    |  *<span class="hljs-title"> Debug</span> mode:<span class="hljs-title"> on</span><span class="hljs-title">web_1</span>    |  *<span class="hljs-title"> Running</span> on<span class="hljs-title"> http://0.0.0.0:5000/</span> (Press<span class="hljs-title"> CTRL+C</span> to<span class="hljs-title"> quit)</span><span class="hljs-title">web_1</span>    |  *<span class="hljs-title"> Restarting</span> with<span class="hljs-title"> stat</span><span class="hljs-title">web_1</span>    |  *<span class="hljs-title"> Debugger</span> is<span class="hljs-title"> active!</span><span class="hljs-title">web_1</span>    |  *<span class="hljs-title"> Debugger</span> PIN: 290-279-909</code></pre><p>如果要后台运行的话</p><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up -d</span></code></pre><p><img src="http://img.ljh666.xyz/img/20200821005135.png"></p><p>刷新浏览器数值会增加</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>master ~]# docker image lsREPOSITORY          TAG                 IMAGE ID            CREATED             SIZEtest_web            latest              e1d437e52801        <span class="hljs-number">6</span> minutes ago       <span class="hljs-number">84.5</span> MB&lt;none&gt;              &lt;none&gt;              <span class="hljs-number">11</span>d309d27c40        <span class="hljs-number">15</span> minutes ago      <span class="hljs-number">72.9</span> MBdocker.io/redis     alpine              c7b388ce3d39        <span class="hljs-number">4</span> weeks ago         <span class="hljs-number">32.1</span> MBdocker.io/python    <span class="hljs-number">3.4</span>-alpine          c06adcf62f6e        <span class="hljs-number">17</span> months ago       <span class="hljs-number">72.9</span> MB</code></pre><p>停止服务</p><p>可以在项目路径下使用docker-composedown命令停止服务，也可以在终端上按Ctrl+C键停止当前启动着的应用。</p><h3 id="将数据持久化"><a href="#将数据持久化" class="headerlink" title="将数据持久化"></a>将数据持久化</h3><p>编辑docker-compose.yml文件, 让容器目录映射到宿主机目录</p><pre><code class="hljs dts">[root@master test]<span class="hljs-meta"># vim docker-compose.yml </span><span class="hljs-symbol">version:</span> <span class="hljs-string">&#x27;3&#x27;</span><span class="hljs-symbol">services:</span><span class="hljs-symbol">        web:</span><span class="hljs-symbol">                build:</span> .<span class="hljs-symbol">                ports:</span>                 - <span class="hljs-string">&quot;5000:5000&quot;</span><span class="hljs-symbol">                volumes:</span>                 - .:/code<span class="hljs-symbol">        redis:</span><span class="hljs-symbol">                image:</span> <span class="hljs-string">&quot;redis:alpine&quot;</span></code></pre><p>新的volumes键将当前路径（项目路径）与容器中的/code路径挂载到一起，允许用户及时修改代码而不用重新构建镜像。</p><p>重建服务</p><pre><code class="hljs ebnf"><span class="hljs-attribute">docker-compose up</span></code></pre><p><img src="http://img.ljh666.xyz/img/20200821005855.png"></p><p>可以看到上次开启服务的记录保留着</p><p>因为应用程序的代码通过volume挂载到容器中，你可以更改其代码并立即查看更改，而不必重新生成镜像。</p><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> app.<span class="hljs-keyword">py</span><span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;Hello Worlddddddddddddddd! I have been seen &#123;&#125; times.\n&#x27;</span>.format(<span class="hljs-built_in">count</span>)</code></pre><p>直接刷新网页</p><p><img src="http://img.ljh666.xyz/img/20200821010117.png"></p><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>Docker</tag>
      
      <tag>Docker-Compose</tag>
      
      <tag>容器编排</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置国内的yum源</title>
    <link href="/2020/08/20/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85yum%E6%BA%90/"/>
    <url>/2020/08/20/%E9%85%8D%E7%BD%AE%E5%9B%BD%E5%86%85yum%E6%BA%90/</url>
    
    <content type="html"><![CDATA[<h1 id="配置国内的yum源"><a href="#配置国内的yum源" class="headerlink" title="配置国内的yum源"></a>配置国内的yum源</h1><h2 id="网易源"><a href="#网易源" class="headerlink" title="网易源"></a>网易源</h2><p>安装163的base源</p><pre><code class="hljs awk">wget http:<span class="hljs-regexp">//mi</span>rrors.<span class="hljs-number">163</span>.com<span class="hljs-regexp">/.help/</span>CentOS7-Base-<span class="hljs-number">163</span>.repo</code></pre><p>网易没有epel源</p><h2 id="阿里源"><a href="#阿里源" class="headerlink" title="阿里源"></a>阿里源</h2><p>查看网页</p><ul><li><a href="https://developer.aliyun.com/mirror/epel?spm=a2c6h.13651102.0.0.3e221b11KHdS03">https://developer.aliyun.com/mirror/epel?spm=a2c6h.13651102.0.0.3e221b11KHdS03</a></li><li><a href="https://developer.aliyun.com/mirror/">https://developer.aliyun.com/mirror/</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>yum源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装Docker</title>
    <link href="/2020/08/18/%E5%AE%89%E8%A3%85Docker/"/>
    <url>/2020/08/18/%E5%AE%89%E8%A3%85Docker/</url>
    
    <content type="html"><![CDATA[<h1 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h1><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="清空防火墙规则"><a href="#清空防火墙规则" class="headerlink" title="清空防火墙规则"></a>清空防火墙规则</h3><pre><code class="hljs properties"><span class="hljs-attr">iptables</span> <span class="hljs-string">-F</span><span class="hljs-attr">iptables</span> <span class="hljs-string">-X</span><span class="hljs-attr">iptables</span> <span class="hljs-string">-Z</span><span class="hljs-attr">/usr/sbin/iptables-save</span></code></pre><h3 id="永久关闭SELinux"><a href="#永久关闭SELinux" class="headerlink" title="永久关闭SELinux"></a>永久关闭SELinux</h3><pre><code class="hljs routeros">sed -i <span class="hljs-string">&#x27;s/SELINUX=enforcing/SELINUX=disabled/g&#x27;</span> /etc/selinux/configreboot                 ## 重启生效</code></pre><h3 id="关闭Swap交换区-提高docker性能"><a href="#关闭Swap交换区-提高docker性能" class="headerlink" title="关闭Swap交换区(提高docker性能)"></a>关闭Swap交换区(提高docker性能)</h3><pre><code class="hljs latex">swapoff -ased -i &quot;s/<span class="hljs-tag">\<span class="hljs-name">/</span></span>dev<span class="hljs-tag">\<span class="hljs-name">/</span></span>mapper<span class="hljs-tag">\<span class="hljs-name">/</span></span>centos-swap/<span class="hljs-tag">\<span class="hljs-name">#</span></span><span class="hljs-tag">\<span class="hljs-name">/</span></span>dev/mapper<span class="hljs-tag">\<span class="hljs-name">/</span></span>centos-swap/g&quot; /etc/fstab</code></pre><p>查看swap交换区为零</p><pre><code class="hljs properties"><span class="hljs-attr">free</span> <span class="hljs-string">-m</span><span class="hljs-attr">或者</span><span class="hljs-attr">top</span><span class="hljs-attr">或者</span><span class="hljs-attr">df</span> <span class="hljs-string">-h</span><span class="hljs-attr">或者</span><span class="hljs-attr">fdisk</span> <span class="hljs-string">-l</span></code></pre><h3 id="开启路由转发"><a href="#开启路由转发" class="headerlink" title="开启路由转发"></a>开启路由转发</h3><pre><code class="hljs routeros">cat &gt;&gt;/etc/sysctl.conf&lt;&lt;EOFnet.ipv4.<span class="hljs-attribute">ip_forward</span>=1net.bridge.<span class="hljs-attribute">bridge-nf-call-ip6tables</span>=1net.bridge.<span class="hljs-attribute">bridge-nf-call-iptables</span>=1EOF</code></pre><pre><code class="hljs clean">modprobe br_netfilter ##自动处理可载入模块br_netfilter</code></pre><h3 id="配置阿里的docker源"><a href="#配置阿里的docker源" class="headerlink" title="配置阿里的docker源"></a>配置阿里的docker源</h3><pre><code class="hljs awk">yum-config-manager --add-repo https:<span class="hljs-regexp">//mi</span>rrors.aliyun.com<span class="hljs-regexp">/docker-ce/</span>linux<span class="hljs-regexp">/centos/</span>docker-ce.repo</code></pre><h2 id="安装Docker-1"><a href="#安装Docker-1" class="headerlink" title="安装Docker"></a>安装Docker</h2><p>查看可用软件包</p><pre><code class="hljs vim">yum <span class="hljs-keyword">list</span> docker-<span class="hljs-keyword">ce</span> --showduplicates | <span class="hljs-keyword">sort</span> -r</code></pre><p>安装</p><pre><code class="hljs clean">yum -y install docker-ce  ##默认yum安装最新版本</code></pre><h2 id="启动Docker"><a href="#启动Docker" class="headerlink" title="启动Docker"></a>启动Docker</h2><pre><code class="hljs properties"><span class="hljs-attr">systemctl</span> <span class="hljs-string">daemon-reload</span><span class="hljs-attr">systemctl</span> <span class="hljs-string">restart docker</span><span class="hljs-attr">systemctl</span> <span class="hljs-string">enable docker</span><span class="hljs-attr">docker</span> <span class="hljs-string">info</span></code></pre><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><h2 id="配置docker软件仓库"><a href="#配置docker软件仓库" class="headerlink" title="配置docker软件仓库"></a>配置docker软件仓库</h2><p>添加国内docker软件仓库</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@node2</span> ~]<span class="hljs-meta"># vim /etc/docker/daemon.json</span>&#123;        <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>]&#125;</code></pre><p>添加国内阿里docker软件仓库</p><p>添加阿里的docker仓库需要注册</p><p><img src="http://img.ljh666.xyz/img/20200818220037.png"></p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@node2</span> ~]<span class="hljs-meta"># vim /etc/docker/daemon.json</span>&#123;        <span class="hljs-string">&quot;registry-mirrors&quot;</span>: [<span class="hljs-string">&quot;http://hub-mirror.c.163.com&quot;</span>,<span class="hljs-string">&quot;https://gjao6nys.mirror.aliyuncs.com&quot;</span>]&#125;</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>openssl生成CA证书</title>
    <link href="/2020/08/18/%E7%94%9F%E6%88%90CA%E8%AF%81%E4%B9%A6/"/>
    <url>/2020/08/18/%E7%94%9F%E6%88%90CA%E8%AF%81%E4%B9%A6/</url>
    
    <content type="html"><![CDATA[<h1 id="生成CA证书"><a href="#生成CA证书" class="headerlink" title="生成CA证书"></a>生成CA证书</h1><h2 id="申请证书"><a href="#申请证书" class="headerlink" title="申请证书"></a>申请证书</h2><p>SSL常用于身份验证、数据加密等应用中，要使用SSL，我们密码有自己的证书。数字证书一般要向专业的认证公司(如VeriSign)申请，并且都是收费的，某些情况下，我们只是想使用加密的数据通信，而不在乎认证，这时就可以自己制作一个证书，自己制作一个证书，有两种方式，一种是Self Signed,另一种是自己制作一个CA，然后由这个CA,来发布我们需要的证书。下面分别介绍这两个方法。</p><p>这里只记录其中一个方法</p><pre><code class="hljs stata">生成自己的<span class="hljs-keyword">CA</span> (Certificate Authority)<span class="hljs-keyword">CA</span>是证书的发布者，<span class="hljs-keyword">CA</span>可以发布其他人的证书，把<span class="hljs-keyword">CA</span>的证书加入系统信任的根证书后，由<span class="hljs-keyword">CA</span>发布的证书也被系统所信任，所以，<span class="hljs-keyword">CA</span>的key是必须小心保护的，一般都要加密保护，并且限制为root权限读写。＃生成<span class="hljs-keyword">CA</span>的key#openssl genrsa -des3 -<span class="hljs-keyword">out</span> <span class="hljs-keyword">ca</span>.key 4096#生成<span class="hljs-keyword">CA</span>的证书#openssl req -new -x509 -days 365 -key <span class="hljs-keyword">ca</span>.key -<span class="hljs-keyword">out</span> <span class="hljs-keyword">ca</span>.crt#生成我们的key和CSR这两步与上面Self Signed中是一样的#openssl genrsa -des3 -<span class="hljs-keyword">out</span> myserver.key 4096#openssl req -new -key myserver.key -<span class="hljs-keyword">out</span> myserver.csr#使用<span class="hljs-keyword">ca</span>的证书和key，生成我们的证书#这里的set_serial指明了证书的序号，如果证书过期了(365天后)，#或者证书key泄漏了，需要重新发证的时候，就要加1#openssl x509 -req -days 365 -<span class="hljs-keyword">in</span> myserver.csr -<span class="hljs-keyword">CA</span> <span class="hljs-keyword">ca</span>.crt -CAkey <span class="hljs-keyword">ca</span>.key -set_serial 01 -<span class="hljs-keyword">out</span> myserver.crt</code></pre><p>查看证书</p><pre><code class="hljs vala"><span class="hljs-meta">#查看KEY信息</span><span class="hljs-meta">#openssl rsa -noout -text -in myserver.key</span><span class="hljs-meta">#查看CSR信息</span><span class="hljs-meta">#openssl req -noout -text -in myserver.csr</span><span class="hljs-meta">#查看证书信息</span><span class="hljs-meta">#openssl x509 -noout -text -in ca.crt</span><span class="hljs-meta">#验证证书</span><span class="hljs-meta">#会提示self signed</span><span class="hljs-meta">#openssl verify selfsign.crt</span><span class="hljs-meta">#因为myserver.crt是幅ca.crt发布的，所以会验证成功</span><span class="hljs-meta">#openssl verify -CAfile ca.crt myserver.crt</span>去掉key的密码保护<span class="hljs-meta">#有时候每次都要输入密码太繁琐了,可以把Key的保护密码去掉</span><span class="hljs-meta">#openssl rsa -in myserver.key -out server.key.insecure</span></code></pre><h2 id="key、csr、crt-区别"><a href="#key、csr、crt-区别" class="headerlink" title="key、csr、crt 区别"></a>key、csr、crt 区别</h2><p>key通常指私钥<br>CSR 是Certificate Signing Request的缩写，即证书签名申请，这不是证书，这是要求CA给证书签名的一种正是申请，该申请包含申请证书的实体的公钥及该实体店某些信息。该数据将成为证书的一部分。CSR始终使用它携带的公钥所对应的私钥进行签名。<br>CRT 即 certificate的缩写，即证书<br>TLS：传输层安全协议 Transport Layer Security的缩写<br>SSL：安全套接字层 Secure Socket Layer的缩写<br>X.509 是一种证书格式.对X.509证书来说，认证者总是CA或由CA指定的人，一份X.509证书是一些标准字段的集合，这些字段包含有关用户或设备及其相应公钥的信息。</p><p>X.509的证书文件，一般以.crt结尾，根据该文件的内容编码格式，可以分为以下二种格式：</p><p>PEM - Privacy Enhanced Mail,打开看文本格式,以”—–BEGIN…”开头, “—–END…”结尾,内容是BASE64编码</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>docker</tag>
      
      <tag>命令解析</tag>
      
      <tag>openssl</tag>
      
      <tag>密钥</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>分布式存储的三种类型</title>
    <link href="/2020/08/16/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%9A%84%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B/"/>
    <url>/2020/08/16/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%9A%84%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="分布式存储的三种类型"><a href="#分布式存储的三种类型" class="headerlink" title="分布式存储的三种类型"></a>分布式存储的三种类型</h1><h2 id="查阅文献："><a href="#查阅文献：" class="headerlink" title="查阅文献："></a>查阅文献：</h2><p><a href="https://link.jianshu.com/?t=http://www.infoq.com/cn/articles/virtual-forum-three-basic-issues-about-distributed-storage">有关分布式存储的三个基本问题</a></p><p><a href="https://link.jianshu.com/?t=http://www.testlab.com.cn/Index/article/id/1082.html">文件系统vs对象存储——选型和趋势</a></p><p><a href="https://link.jianshu.com/?t=https://www.zhihu.com/question/21536660">块存储、文件存储、对象存储这三者的本质差别是什么</a></p><h2 id="三种存储方式的比较与介绍"><a href="#三种存储方式的比较与介绍" class="headerlink" title="三种存储方式的比较与介绍:"></a>三种存储方式的比较与介绍:</h2><p>分布式存储的应用场景相对于其存储接口，现在流行分为三种:</p><p>对象存储: 也就是通常意义的键值存储，其接口就是简单的GET、PUT、DEL和其他扩展，如七牛、又拍、Swift、S3</p><p>块存储: 这种接口通常以QEMU Driver或者Kernel Module的方式存在，这种接口需要实现Linux的Block Device的接口或者QEMU提供的Block Driver接口，如Sheepdog，AWS的EBS，青云的云硬盘和阿里云的盘古系统，还有Ceph的RBD（RBD是Ceph面向块存储的接口）</p><p>文件存储: 通常意义是支持POSIX接口，它跟传统的文件系统如Ext4是一个类型的，但区别在于分布式存储提供了并行化的能力，如Ceph的CephFS(CephFS是Ceph面向文件存储的接口)，但是有时候又会把GFS，HDFS这种非POSIX接口的类文件存储接口归入此类。</p><p>作者：<em>Hook</em><br>链接：<a href="https://www.jianshu.com/p/907b25e79c3d">https://www.jianshu.com/p/907b25e79c3d</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>私有云</tag>
      
      <tag>openstack</tag>
      
      <tag>分布式存储</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>构建ceph分布式存储系统</title>
    <link href="/2020/08/16/%E6%9E%84%E5%BB%BAceph%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/"/>
    <url>/2020/08/16/%E6%9E%84%E5%BB%BAceph%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%B3%BB%E7%BB%9F/</url>
    
    <content type="html"><![CDATA[<h1 id="构建ceph分布式存储系统"><a href="#构建ceph分布式存储系统" class="headerlink" title="构建ceph分布式存储系统"></a>构建ceph分布式存储系统</h1><h2 id="查阅文献"><a href="#查阅文献" class="headerlink" title="查阅文献"></a>查阅文献</h2><p><a href="http://www.ljh666.xyz/2020/08/16/%E5%88%86%E5%B8%83%E5%BC%8F%E5%AD%98%E5%82%A8%E7%9A%84%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B/">分布式存储的三种类型</a></p><p><a href="https://blog.51cto.com/haoyou168/83021">linux系统下的磁盘分区</a></p><p><a href="http://docs.ceph.org.cn/rbd/rados-rbd-cmds/">块设备命令rbd</a></p><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><blockquote><p>Ceph与Swift另外一种最大的不同还在于客户端访问对象存储系统方式。 在Swift中，客户端必须联到Swift网关，这样有出现单点故障的可能。 为了解决这一问题，许多Swift环境为Swift网关实现了高可用性。</p><p>Ceph的存储节点上运行着OSD，Ceph通过OSD能获得存储拓扑图，能通过OSD收集到二进制对象最后找到原始数据，别的部分都是访问运行在客户端上的对象的主要组件，Ceph访问存储的方式不只有单个入口，所以与Swift相比更加灵活。</p></blockquote><blockquote><p>Swift是由Rackspace开发的用来为云计算提供可扩展存储的项目。它是为云而开发的，云原生的，所以它主要的访问方法RESTful API。应用程序绕开操作系统直接去Swif对接。这样做的好处是在云环境中使用时非常方便，但在访问云外的Swift存储时就比较麻烦了。</p></blockquote><h2 id="补充知识"><a href="#补充知识" class="headerlink" title="补充知识"></a>补充知识</h2><ul><li>fdisk只能用于MBR分区，gdisk,parted可以用于GPT分区。</li><li>fdisk大多数运维工作人员已经习惯这个交互模式。</li><li>parted命令在创建删除分区使用命令比较方便，但是功能不是太完善，没有备份还原命令。</li><li>gdisk在分区上命令和fdisk风格一样， 使用方便，学习难度低且功能强大，推荐使用。</li></ul><h2 id="环境介绍"><a href="#环境介绍" class="headerlink" title="环境介绍"></a>环境介绍</h2><table><thead><tr><th align="center">IP地址</th><th>主机名</th><th>节点</th></tr></thead><tbody><tr><td align="center">10.10.10.11</td><td>node1</td><td>Monitor/OSD</td></tr><tr><td align="center">10.10.10.12</td><td>node2</td><td>OSD</td></tr><tr><td align="center">10.10.10.13</td><td>node3</td><td>OSD/ceph-client</td></tr></tbody></table><p>配置网易的yum源(或者用国内的提供的ceph官方源)</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>三个节点都添加一块20G硬盘</p><p>修改主机名</p><pre><code class="hljs dsconfig"><span class="hljs-string">hostnamectl </span><span class="hljs-built_in">set-hostname</span> <span class="hljs-string">node1 </span><span class="hljs-comment">##三台都要设置</span></code></pre><p>配置yum源(此实验使用本地的两个镜像源)</p><pre><code class="hljs ini"><span class="hljs-section">[root@node1 images]</span><span class="hljs-comment"># vim /etc/yum.repos.d/local.repo </span><span class="hljs-section">[xiandian]</span><span class="hljs-attr">name</span>=xiandian<span class="hljs-attr">baseurl</span>=file:///media/cdrom/iaas-repo/<span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><span class="hljs-attr">enable</span>=<span class="hljs-number">1</span></code></pre><pre><code class="hljs ini"><span class="hljs-section">[root@node2 images]</span><span class="hljs-comment"># vim /etc/yum.repos.d/local.repo</span><span class="hljs-section">[xiandian]</span><span class="hljs-attr">name</span>=xiandian<span class="hljs-attr">baseurl</span>=ftp://node1/<span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><span class="hljs-attr">enable</span>=<span class="hljs-number">1</span></code></pre><pre><code class="hljs ini"><span class="hljs-section">[root@node3 images]</span><span class="hljs-comment"># vim /etc/yum.repos.d/local.repo</span><span class="hljs-section">[xiandian]</span><span class="hljs-attr">name</span>=xiandian<span class="hljs-attr">baseurl</span>=ftp://node1/<span class="hljs-attr">gpgcheck</span>=<span class="hljs-number">0</span><span class="hljs-attr">enable</span>=<span class="hljs-number">1</span></code></pre><p>修改/etc/hosts文件, 添加解析</p><pre><code class="hljs accesslog">#ceph<span class="hljs-number">10.10.10.11</span> node1<span class="hljs-number">10.10.10.12</span> node2<span class="hljs-number">10.10.10.13</span> node3</code></pre><h2 id="安装ceph"><a href="#安装ceph" class="headerlink" title="安装ceph"></a>安装ceph</h2><p>要部署Ceph集群，需要使用ceph-deploy工具在3台虚拟机上安装和配置Ceph。ceph-deploy是Ceph软件定义存储系统的一部分，用来方便地配置和管理Ceph存储集群。</p><p>在node1节点安装ceph-deploy, 通过node1部署其他节点的ceph</p><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> ceph-deploy</code></pre><p>创建用来存放ceph-deploy产生文件的目录</p><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/etc/</span>cephcd <span class="hljs-regexp">/etc/</span>ceph</code></pre><p>初始化生成ceph集群</p><pre><code class="hljs actionscript">ceph-deploy <span class="hljs-keyword">new</span> node1</code></pre><blockquote><p>其中node1为主机名 </p></blockquote><pre><code class="hljs css"><span class="hljs-selector-attr">[root@node1 ceph]</span># <span class="hljs-selector-tag">ls</span><span class="hljs-selector-tag">ceph</span><span class="hljs-selector-class">.conf</span>  <span class="hljs-selector-tag">ceph</span><span class="hljs-selector-class">.log</span>  <span class="hljs-selector-tag">ceph</span><span class="hljs-selector-class">.mon</span><span class="hljs-selector-class">.keyring</span></code></pre><p>使用ceph-deploy工具在所有节点上安装ceph二进制软件包</p><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy install node<span class="hljs-number">1</span> node<span class="hljs-number">2</span> node<span class="hljs-number">3</span></code></pre><p>但这里报错了, 原因是找不到ceph-release的安装包</p><p>使用网易的ceph源重新安装ceph-deploy(目前源为163源加网易ceph源)</p><p>在各节点查看是否安装成功</p><pre><code class="hljs ebnf"><span class="hljs-attribute">ceph -v</span></code></pre><p>在node1节点创建一个monitor</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@node1</span> ceph]<span class="hljs-meta"># ceph-deploy --overwrite-conf mon create-initial</span></code></pre><blockquote><p>–overwrite-conf</p><p>覆盖远程主机上的现有conf文件（如果存在）。</p></blockquote><p>Monitor创建成功后，检查集群的状态，这个时候Ceph集群并不处于健康状态。</p><pre><code class="hljs ebnf"><span class="hljs-attribute">ceph -s</span></code></pre><h2 id="创建OSD"><a href="#创建OSD" class="headerlink" title="创建OSD"></a>创建OSD</h2><p>列出ceph-node1上所有的可用磁盘。(不看也没事, 用lsblk也一样)</p><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy disk list node<span class="hljs-number">1</span></code></pre><p>创建共享磁盘，3个节点都要执行。首先对系统上的空闲硬盘进行分区、格式化、挂载的操作。</p><p>使用parted工具，对/dev/sdd进行分区，首先使用mklabel命令改变该盘的卷标为gpt，然后使用mkpart命令，将所有的空间都分给/dev/sdd</p><p><strong>操作例子:</strong></p><pre><code class="hljs routeros">[root@node1 ceph]# parted /dev/sddGNU Parted 3.1使用 /dev/sddWelcome <span class="hljs-keyword">to</span> GNU Parted!<span class="hljs-built_in"> Type </span><span class="hljs-string">&#x27;help&#x27;</span> <span class="hljs-keyword">to</span> view a list of commands.(parted) p                                                                Model: VMware, VMware Virtual S (scsi)Disk /dev/sdd: 21.5GBSector size (logical/physical): 512B/512BPartition Table: unkownDisk Flags: Number  Start  End  Size <span class="hljs-built_in"> Type </span> File<span class="hljs-built_in"> system </span> 标志(parted) mklabel   ####创建分区标志新的磁盘标签类型？ gpt                                                    警告: The existing disk label on /dev/sdd will be destroyed <span class="hljs-keyword">and</span> all data on this disk willbe lost. <span class="hljs-keyword">Do</span> you want <span class="hljs-keyword">to</span> continue?是/<span class="hljs-literal">Yes</span>/否/<span class="hljs-literal">No</span>? <span class="hljs-literal">yes</span>                                                         (parted) p                                                                Model: VMware, VMware Virtual S (scsi)Disk /dev/sdd: 21.5GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start  End  Size  File<span class="hljs-built_in"> system </span> Name  标志(parted) mkpart          ####创建分区                                                 分区名称？  []?                                                           文件系统类型？  [ext2]?                                                   起始点？ 0%                                                               结束点？ 100%                                                             (parted) p                                                                Model: VMware, VMware Virtual S (scsi)Disk /dev/sdd: 21.5GBSector size (logical/physical): 512B/512BPartition Table: gptDisk Flags: Number  Start   End     Size    File<span class="hljs-built_in"> system </span> Name  标志 1      1049kB  21.5GB  21.5GB(parted) q                                                                信息: You may need <span class="hljs-keyword">to</span> update /etc/fstab.</code></pre><p>可以使用lsblk命令，查看分区情况：</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node1 ceph]# lsblk                                                  NAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda               <span class="hljs-number">8</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>  <span class="hljs-number">100</span>G  <span class="hljs-number">0</span> disk ├─sda1            <span class="hljs-number">8</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>    <span class="hljs-number">1</span>G  <span class="hljs-number">0</span> part /boot└─sda2            <span class="hljs-number">8</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>   <span class="hljs-number">99</span>G  <span class="hljs-number">0</span> part   ├─centos-root <span class="hljs-number">253</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>   <span class="hljs-number">50</span>G  <span class="hljs-number">0</span> lvm  /  ├─centos-swap <span class="hljs-number">253</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>    <span class="hljs-number">2</span>G  <span class="hljs-number">0</span> lvm  [SWAP]  └─centos-home <span class="hljs-number">253</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>   <span class="hljs-number">47</span>G  <span class="hljs-number">0</span> lvm  /homesdb               <span class="hljs-number">8</span>:<span class="hljs-number">16</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> disk ├─sdb1            <span class="hljs-number">8</span>:<span class="hljs-number">17</span>   <span class="hljs-number">0</span>    <span class="hljs-number">5</span>G  <span class="hljs-number">0</span> part ├─sdb2            <span class="hljs-number">8</span>:<span class="hljs-number">18</span>   <span class="hljs-number">0</span>    <span class="hljs-number">5</span>G  <span class="hljs-number">0</span> part └─sdb3            <span class="hljs-number">8</span>:<span class="hljs-number">19</span>   <span class="hljs-number">0</span>    <span class="hljs-number">5</span>G  <span class="hljs-number">0</span> part sdc               <span class="hljs-number">8</span>:<span class="hljs-number">32</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> disk sdd               <span class="hljs-number">8</span>:<span class="hljs-number">48</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> disk └─sdd1  ##创建的分区<span class="hljs-number">8</span>:<span class="hljs-number">49</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> part sr0              <span class="hljs-number">11</span>:<span class="hljs-number">0</span>    <span class="hljs-number">1</span> <span class="hljs-number">10.3</span>G  <span class="hljs-number">0</span> rom  /mnt/cdromloop0             <span class="hljs-number">7</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>  <span class="hljs-number">2.7</span>G  <span class="hljs-number">0</span> loop /media/cdrom</code></pre><p>接下来使用命令对分区进行格式化，创建一个目录叫/opt/osd1，挂载分区到目录，最后</p><p> 将该目录的权限提升到777。</p><pre><code class="hljs routeros">[root@node1 ceph]# mkfs.xfs /dev/sdd1<span class="hljs-attribute">meta-data</span>=/dev/sdd1              <span class="hljs-attribute">isize</span>=512    <span class="hljs-attribute">agcount</span>=4, <span class="hljs-attribute">agsize</span>=1310592 blks         =                       <span class="hljs-attribute">sectsz</span>=512   <span class="hljs-attribute">attr</span>=2, <span class="hljs-attribute">projid32bit</span>=1         =                       <span class="hljs-attribute">crc</span>=1        <span class="hljs-attribute">finobt</span>=0, <span class="hljs-attribute">sparse</span>=0data     =                       <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=5242368, <span class="hljs-attribute">imaxpct</span>=25         =                       <span class="hljs-attribute">sunit</span>=0      <span class="hljs-attribute">swidth</span>=0 blksnaming   =version 2              <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">ascii-ci</span>=0 <span class="hljs-attribute">ftype</span>=1log      =internal log           <span class="hljs-attribute">bsize</span>=4096   <span class="hljs-attribute">blocks</span>=2560, <span class="hljs-attribute">version</span>=2         =                       <span class="hljs-attribute">sectsz</span>=512   <span class="hljs-attribute">sunit</span>=0 blks, <span class="hljs-attribute">lazy-count</span>=1realtime =none                   <span class="hljs-attribute">extsz</span>=4096   <span class="hljs-attribute">blocks</span>=0, <span class="hljs-attribute">rtextents</span>=0</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node1 ceph]# mkdir /opt/osd1[<span class="hljs-symbol">root@</span>node1 ceph]# mount /dev/sdd1 /opt/osd1[<span class="hljs-symbol">root@</span>node1 ceph]# df -h文件系统                 容量  已用  可用 已用% 挂载点devtmpfs                 <span class="hljs-number">898</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">898</span>M    <span class="hljs-number">0</span>% /devtmpfs                    <span class="hljs-number">910</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">910</span>M    <span class="hljs-number">0</span>% /dev/shmtmpfs                    <span class="hljs-number">910</span>M  <span class="hljs-number">9.8</span>M  <span class="hljs-number">900</span>M    <span class="hljs-number">2</span>% /runtmpfs                    <span class="hljs-number">910</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">910</span>M    <span class="hljs-number">0</span>% /sys/fs/cgroup/dev/mapper/centos-root   <span class="hljs-number">50</span>G  <span class="hljs-number">5.3</span>G   <span class="hljs-number">45</span>G   <span class="hljs-number">11</span>% //dev/sr0                  <span class="hljs-number">11</span>G   <span class="hljs-number">11</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">100</span>% /mnt/cdrom/dev/loop0               <span class="hljs-number">2.7</span>G  <span class="hljs-number">2.7</span>G     <span class="hljs-number">0</span>  <span class="hljs-number">100</span>% /media/cdrom/dev/mapper/centos-home   <span class="hljs-number">47</span>G   <span class="hljs-number">33</span>M   <span class="hljs-number">47</span>G    <span class="hljs-number">1</span>% /home/dev/sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">150</span>M  <span class="hljs-number">865</span>M   <span class="hljs-number">15</span>% /bootoverlay                   <span class="hljs-number">50</span>G  <span class="hljs-number">5.3</span>G   <span class="hljs-number">45</span>G   <span class="hljs-number">11</span>% /var/lib/docker/overlay2/<span class="hljs-number">09</span>ad5cd00825e0cfd09690b6b5d64034055924b3ab1a83be414f67f748cd08ac/mergedshm                       <span class="hljs-number">64</span>M     <span class="hljs-number">0</span>   <span class="hljs-number">64</span>M    <span class="hljs-number">0</span>% /var/lib/docker/containers/<span class="hljs-number">994</span>a0e297cae8d2b517a13d69b9d8c19265cee622d49211f231ea9286526b523/shmtmpfs                    <span class="hljs-number">182</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">182</span>M    <span class="hljs-number">0</span>% /run/user/<span class="hljs-number">0</span>/dev/sdd1                 <span class="hljs-number">20</span>G   <span class="hljs-number">33</span>M   <span class="hljs-number">20</span>G    <span class="hljs-number">1</span>% /opt/osd1[<span class="hljs-symbol">root@</span>node1 ceph]# chmod <span class="hljs-number">777</span> /opt/osd1</code></pre><p><strong>另外两个节点做相同操作</strong></p><h2 id="激活OSD"><a href="#激活OSD" class="headerlink" title="激活OSD"></a>激活OSD</h2><h3 id="初始化上面创建的osd"><a href="#初始化上面创建的osd" class="headerlink" title="初始化上面创建的osd"></a>初始化上面创建的osd</h3><p>在node1节点运行命令</p><pre><code class="hljs typescript">[root<span class="hljs-meta">@node1</span> ceph]# ceph-deploy osd prepare node1:<span class="hljs-regexp">/opt/</span>osd1 node2:<span class="hljs-regexp">/opt/</span>osd1 node3:<span class="hljs-regexp">/opt/</span>osd1</code></pre><h3 id="激活OSD节点"><a href="#激活OSD节点" class="headerlink" title="激活OSD节点"></a>激活OSD节点</h3><pre><code class="hljs typescript">[root<span class="hljs-meta">@node1</span> ceph]# ceph-deploy osd activate node1:<span class="hljs-regexp">/opt/</span>osd1  node2:<span class="hljs-regexp">/opt/</span>osd1  node3:<span class="hljs-regexp">/opt/</span>osd1</code></pre><h2 id="检查ceph集群状态"><a href="#检查ceph集群状态" class="headerlink" title="检查ceph集群状态"></a>检查ceph集群状态</h2><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node1 ceph]# ceph -s    cluster <span class="hljs-number">13</span>d859cc-a311<span class="hljs-number">-4152</span><span class="hljs-number">-9</span>ba1-a2542b7a2773     health HEALTH_OK   ####显示状态为正常     monmap e1: <span class="hljs-number">1</span> mons at &#123;node1=<span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span>&#125;            election epoch <span class="hljs-number">1</span>, quorum <span class="hljs-number">0</span> node1     osdmap e13: <span class="hljs-number">3</span> osds: <span class="hljs-number">3</span> up, <span class="hljs-number">3</span> <span class="hljs-keyword">in</span>      pgmap v24: <span class="hljs-number">64</span> pgs, <span class="hljs-number">1</span> pools, <span class="hljs-number">0</span> bytes data, <span class="hljs-number">0</span> objects            <span class="hljs-number">15533</span> MB used, <span class="hljs-number">45870</span> MB / <span class="hljs-number">61404</span> MB avail                  <span class="hljs-number">64</span> active+clean</code></pre><p>开放权限给其他节点，进行<strong>灾备处理</strong>。</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node1 ceph]# ceph-deploy admin node&#123;<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>&#125;</code></pre><h2 id="Ceph集群运维"><a href="#Ceph集群运维" class="headerlink" title="Ceph集群运维"></a>Ceph集群运维</h2><p>检查ceph安装状态</p><p>观察集群的健康状况</p><p>检查ceph monitor仲裁状态</p><p>导出ceph monitor 信息</p><p>检查集群使用状态</p><p>检查ceph monitor; osd和PG(配置组)状态</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node1 ceph]# ceph mon state1: <span class="hljs-number">1</span> mons at &#123;node1=<span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span>:<span class="hljs-number">6789</span>/<span class="hljs-number">0</span>&#125;, election epoch <span class="hljs-number">1</span>, quorum <span class="hljs-number">0</span> node1[<span class="hljs-symbol">root@</span>node1 ceph]# ceph osd stat     osdmap e13: <span class="hljs-number">3</span> osds: <span class="hljs-number">3</span> up, <span class="hljs-number">3</span> <span class="hljs-keyword">in</span>[<span class="hljs-symbol">root@</span>node1 ceph]# ceph pg statv24: <span class="hljs-number">64</span> pgs: <span class="hljs-number">64</span> active+clean; <span class="hljs-number">0</span> bytes data, <span class="hljs-number">15533</span> MB used, <span class="hljs-number">45870</span> MB / <span class="hljs-number">61404</span> MB avail</code></pre><p>列表PG</p><p>列表ceph存储池</p><p>检查osd的crush</p><p>列表群的认证秘钥</p><h2 id="Ceph集群的使用"><a href="#Ceph集群的使用" class="headerlink" title="Ceph集群的使用"></a>Ceph集群的使用</h2><p><code>rbd</code> 命令可用于创建、罗列、内省和删除块设备映像，也可克隆映像、创建快照、回滚快照、查看快照等等。 <code>rbd</code> 命令用法详情见 <a href="http://docs.ceph.org.cn/man/8/rbd/">RBD – 管理 RADOS 块设备映像</a>。</p><p>由于提供的主机有限, 这里利用node3作为ceph-client</p><p>ceph-client做相同的准备工作(如果是一个新主机的话, 这里不用重复做了)</p><p>在ceph-node1上，用  ceph-deploy工具把Ceph 配置文件和  ceph.client.admin.keyring拷贝到ceph-client。ceph-deploy工具会把密钥环复制到/etc/ceph目录，要确保此密钥环文件有读权限（如sudo chmod +r /etc/ceph/ceph.client.admin.keyring）。&lt;—–(所以这里不用执行下面这些命令了)</p><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy install node<span class="hljs-number">3</span></code></pre><pre><code class="hljs apache"><span class="hljs-attribute">ceph</span>-deploy admin node<span class="hljs-number">3</span></code></pre><p>ceph客户端的使用</p><p>在ceph-client节点创建块设备, <strong>名字叫foo</strong></p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node3 ~]# rbd create foo --size <span class="hljs-number">1028</span> -m <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span> -k /etc/ceph/ceph.client.admin.keyring</code></pre><blockquote><p>-m: monitor</p><p>-k: keyring </p></blockquote><p>映射</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node3 ~]# rbd map foo --name client.admin -m <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span> -k /etc/ceph/ceph.client.admin.keyring /dev/rbd0</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node3 ~]# lsblkNAME            MAJ:MIN RM  SIZE RO TYPE MOUNTPOINTsda               <span class="hljs-number">8</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>  <span class="hljs-number">100</span>G  <span class="hljs-number">0</span> disk ├─sda1            <span class="hljs-number">8</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>    <span class="hljs-number">1</span>G  <span class="hljs-number">0</span> part /boot└─sda2            <span class="hljs-number">8</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>   <span class="hljs-number">99</span>G  <span class="hljs-number">0</span> part   ├─centos-root <span class="hljs-number">253</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>   <span class="hljs-number">50</span>G  <span class="hljs-number">0</span> lvm  /  ├─centos-swap <span class="hljs-number">253</span>:<span class="hljs-number">1</span>    <span class="hljs-number">0</span>    <span class="hljs-number">2</span>G  <span class="hljs-number">0</span> lvm  [SWAP]  └─centos-home <span class="hljs-number">253</span>:<span class="hljs-number">2</span>    <span class="hljs-number">0</span>   <span class="hljs-number">47</span>G  <span class="hljs-number">0</span> lvm  /homesdb               <span class="hljs-number">8</span>:<span class="hljs-number">16</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> disk sdc               <span class="hljs-number">8</span>:<span class="hljs-number">32</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> disk └─sdc1            <span class="hljs-number">8</span>:<span class="hljs-number">33</span>   <span class="hljs-number">0</span>   <span class="hljs-number">20</span>G  <span class="hljs-number">0</span> part /opt/osd1sr0              <span class="hljs-number">11</span>:<span class="hljs-number">0</span>    <span class="hljs-number">1</span> <span class="hljs-number">10.3</span>G  <span class="hljs-number">0</span> rom  /mnt/cdromrbd0  ##映射成功   <span class="hljs-number">252</span>:<span class="hljs-number">0</span>    <span class="hljs-number">0</span>    <span class="hljs-number">1</span>G  <span class="hljs-number">0</span> disk</code></pre><p>格式化&amp;挂载</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>node3 ~]# mount /dev/rbd0 /mnt[<span class="hljs-symbol">root@</span>node3 ~]# df -h文件系统                 容量  已用  可用 已用% 挂载点devtmpfs                 <span class="hljs-number">898</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">898</span>M    <span class="hljs-number">0</span>% /devtmpfs                    <span class="hljs-number">910</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">910</span>M    <span class="hljs-number">0</span>% /dev/shmtmpfs                    <span class="hljs-number">910</span>M  <span class="hljs-number">9.6</span>M  <span class="hljs-number">901</span>M    <span class="hljs-number">2</span>% /runtmpfs                    <span class="hljs-number">910</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">910</span>M    <span class="hljs-number">0</span>% /sys/fs/cgroup/dev/mapper/centos-root   <span class="hljs-number">50</span>G  <span class="hljs-number">1.8</span>G   <span class="hljs-number">49</span>G    <span class="hljs-number">4</span>% //dev/sda1               <span class="hljs-number">1014</span>M  <span class="hljs-number">150</span>M  <span class="hljs-number">865</span>M   <span class="hljs-number">15</span>% /boot/dev/mapper/centos-home   <span class="hljs-number">47</span>G   <span class="hljs-number">33</span>M   <span class="hljs-number">47</span>G    <span class="hljs-number">1</span>% /hometmpfs                    <span class="hljs-number">182</span>M     <span class="hljs-number">0</span>  <span class="hljs-number">182</span>M    <span class="hljs-number">0</span>% /run/user/<span class="hljs-number">0</span>/dev/sdc1                 <span class="hljs-number">20</span>G  <span class="hljs-number">5.1</span>G   <span class="hljs-number">15</span>G   <span class="hljs-number">26</span>% /opt/osd1/dev/rbd0               <span class="hljs-number">1018</span>M   <span class="hljs-number">33</span>M  <span class="hljs-number">986</span>M    <span class="hljs-number">4</span>% /mnt   ## 挂载成功</code></pre><p>创建块设备的顺序是，在ceph-client节点上使用rbd create命令创建一个块设备image，然后用rbd map命令把image映射为块设备，最后对映射出来的/dev/rbd0格式化并挂载。就可以当成普通了块设备使用了。</p><p>调整ceph块设备映像的大小</p><pre><code class="hljs nginx"><span class="hljs-attribute">rdb</span> <span class="hljs-literal">info</span> foo</code></pre><pre><code class="hljs gradle">rdb resize --<span class="hljs-keyword">size</span> <span class="hljs-number">2048</span> fooresizefs <span class="hljs-regexp">/dev/</span>rdb0</code></pre><pre><code class="hljs ebnf"><span class="hljs-attribute">df -h</span></code></pre><p>卸载块设备, 删除块设备</p><pre><code class="hljs properties"><span class="hljs-attr">umount</span> <span class="hljs-string">/mnt</span><span class="hljs-attr">rbd</span> <span class="hljs-string">rm foo</span></code></pre><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><h2 id="错误记录"><a href="#错误记录" class="headerlink" title="错误记录"></a>错误记录</h2><p>操作: 初始化生成ceph集群</p><p>错误:</p><pre><code class="hljs markdown">[root@xserver1 ceph]# ceph-deploy new node1[<span class="hljs-string">ceph_deploy.conf</span>][<span class="hljs-symbol">DEBUG </span>] found configuration file at: /root/.cephdeploy.conf[<span class="hljs-string">ceph_deploy.cli</span>][<span class="hljs-symbol">INFO  </span>] Invoked (1.5.25): /usr/bin/ceph-deploy new node1[<span class="hljs-string">ceph_deploy.new</span>][<span class="hljs-symbol">DEBUG </span>] Creating new cluster named ceph[<span class="hljs-string">ceph_deploy.new</span>][<span class="hljs-symbol">INFO  </span>] making sure passwordless SSH succeeds[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>] Traceback (most recent call last):[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]   File &quot;/usr/lib/python2.7/site-packages/ceph<span class="hljs-emphasis">_deploy/util/decorators.py&quot;, line 69, in newfunc</span><span class="hljs-emphasis">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]     return f(*a, <span class="hljs-strong">**kw)</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]   File &quot;/usr/lib/python2.7/site-packages/ceph<span class="hljs-emphasis">_deploy/cli.py&quot;, line 162, in _</span>main</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]     return args.func(args)</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]   File &quot;/usr/lib/python2.7/site-packages/ceph<span class="hljs-emphasis">_deploy/new.py&quot;, line 141, in new</span></span></span><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]     ssh_</span>copy<span class="hljs-emphasis">_keys(host, args.username)</span></span></span><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]   File &quot;/usr/lib/python2.7/site-packages/ceph_</span>deploy/new.py&quot;, line 35, in ssh<span class="hljs-emphasis">_copy_</span>keys</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]     if ssh.can<span class="hljs-emphasis">_connect_</span>passwordless(hostname):</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]   File &quot;/usr/lib/python2.7/site-packages/ceph<span class="hljs-emphasis">_deploy/util/ssh.py&quot;, line 15, in can_</span>connect<span class="hljs-emphasis">_passwordless</span></span></span><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>]     if not remoto.connection.needs_</span>ssh(hostname):</span></span><span class="hljs-emphasis"><span class="hljs-strong">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>] AttributeError: &#x27;module&#x27; object has no attribute &#x27;needs<span class="hljs-emphasis">_ssh&#x27;</span></span></span><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">[<span class="hljs-string">ceph_deploy</span>][<span class="hljs-symbol">ERROR </span>] </span></span></span></code></pre><p>解决:</p><p>升级python的remote库</p><pre><code class="hljs sql">pip <span class="hljs-keyword">install</span> <span class="hljs-comment">--upgrade remoto</span></code></pre><p>查阅的文章:</p><ul><li><p><a href="https://pypi.org/project/remoto/">https://pypi.org/project/remoto/</a></p></li><li><p><a href="https://bugzilla.redhat.com/show_bug.cgi?id=1662496">https://bugzilla.redhat.com/show_bug.cgi?id=1662496</a></p></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
      <tag>私有云</tag>
      
      <tag>openstack</tag>
      
      <tag>分布式存储</tag>
      
      <tag>Ceph</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ZooKeeper集群部署</title>
    <link href="/2020/08/06/ZooKeeper%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/"/>
    <url>/2020/08/06/ZooKeeper%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="ZooKeeper集群部署"><a href="#ZooKeeper集群部署" class="headerlink" title="ZooKeeper集群部署"></a>ZooKeeper集群部署</h1><h2 id="规划节点"><a href="#规划节点" class="headerlink" title="规划节点"></a>规划节点</h2><table><thead><tr><th align="center">IP</th><th align="center">主机名</th><th align="center">节点</th></tr></thead><tbody><tr><td align="center">10.10.10.101</td><td align="center">ZooKeeper1</td><td align="center">集群节点</td></tr><tr><td align="center">10.10.10.11</td><td align="center">ZooKeeper2</td><td align="center">集群节点</td></tr><tr><td align="center">10.10.10.12</td><td align="center">ZooKeeper3</td><td align="center">集群节点</td></tr></tbody></table><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://www.cnblogs.com/warking/p/7565526.html">zoo.cfg详解</a></p><h2 id="安装JDK环境"><a href="#安装JDK环境" class="headerlink" title="安装JDK环境"></a>安装JDK环境</h2><p>在三个节点都安装JDK</p><p><a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">官网下载地址</a></p><p>这里使用yum安装</p><p>查看可用安装包</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>mycat ~]# yum list | grep java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk.x86_64                 <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      @updates java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-devel.x86_64           <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      @updates java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-headless.x86_64        <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      @updates java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk.i686                   <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-accessibility.i686     <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-accessibility.x86_64   <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-demo.i686              <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-demo.x86_64            <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-devel.i686             <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-headless.i686          <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-javadoc.noarch         <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-javadoc-zip.noarch     <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-src.i686               <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates  java<span class="hljs-number">-1.8</span><span class="hljs-number">.0</span>-openjdk-src.x86_64             <span class="hljs-number">1</span>:<span class="hljs-number">1.8</span><span class="hljs-number">.0</span><span class="hljs-number">.252</span>.b09<span class="hljs-number">-2.</span>el7_8      updates</code></pre><pre><code class="hljs apache"><span class="hljs-attribute">yum</span> -y install java-<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-openjdk.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span> java-<span class="hljs-number">1</span>.<span class="hljs-number">8</span>.<span class="hljs-number">0</span>-openjdk-devel.x<span class="hljs-number">86</span>_<span class="hljs-number">64</span></code></pre><h2 id="安装ZooKeeper"><a href="#安装ZooKeeper" class="headerlink" title="安装ZooKeeper"></a>安装ZooKeeper</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p><a href="https://zookeeper.apache.org/releases.html">官网下载地址</a></p><p>编写下载的shell脚本(复制粘贴, 偷个懒😂)</p><pre><code class="hljs vim"><span class="hljs-keyword">vim</span> download.<span class="hljs-keyword">sh</span></code></pre><pre><code class="hljs apache"><span class="hljs-attribute">mkdir</span> -p /root/data/zookeeper<span class="hljs-attribute">cd</span> /root/data/zookeeper<span class="hljs-attribute">wget</span> https://downloads.apache.org/zookeeper/zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">14</span>/zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">14</span>.tar.gz<span class="hljs-attribute">tar</span> -xvf zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">14</span>.tar.gz</code></pre><p>使用source命令可用不需要执行权限</p><pre><code class="hljs vim"><span class="hljs-keyword">source</span> download.<span class="hljs-keyword">sh</span></code></pre><p>三个节点都下载好zookeeper</p><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="编辑配置文件zoo-conf"><a href="#编辑配置文件zoo-conf" class="headerlink" title="编辑配置文件zoo.conf"></a>编辑配置文件zoo.conf</h4><p>使用模板文件做配置(三个节点的该文件配置都相同)</p><pre><code class="hljs apache"><span class="hljs-attribute">mv</span> zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">14</span>/conf/zoo_sample.cfg zookeeper-<span class="hljs-number">3</span>.<span class="hljs-number">4</span>.<span class="hljs-number">14</span>/conf/zoo.cfg</code></pre><pre><code class="hljs ini"><span class="hljs-section">[root@mycat zookeeper-3.4.14]</span><span class="hljs-comment"># vim ./conf/zoo.cfg</span><span class="hljs-attr">server.2</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.1</span><span class="hljs-comment"># The number of milliseconds of each tick</span><span class="hljs-attr">tickTime</span>=<span class="hljs-number">2000</span><span class="hljs-comment"># The number of ticks that the initial </span><span class="hljs-comment"># synchronization phase can take</span><span class="hljs-attr">initLimit</span>=<span class="hljs-number">10</span><span class="hljs-comment"># The number of ticks that can pass between </span><span class="hljs-comment"># sending a request and getting an acknowledgement</span><span class="hljs-attr">syncLimit</span>=<span class="hljs-number">5</span><span class="hljs-comment"># the directory where the snapshot is stored.</span><span class="hljs-comment"># do not use /tmp for storage, /tmp here is just </span><span class="hljs-comment"># example sakes.</span><span class="hljs-attr">dataDir</span>=/tmp/zookeeper<span class="hljs-comment"># the port at which the clients will connect</span><span class="hljs-attr">clientPort</span>=<span class="hljs-number">2181</span><span class="hljs-comment"># the maximum number of client connections.</span><span class="hljs-comment"># increase this if you need to handle more clients</span><span class="hljs-comment">#maxClientCnxns=60</span><span class="hljs-comment">#</span><span class="hljs-comment"># Be sure to read the maintenance section of the </span><span class="hljs-comment"># administrator guide before turning on autopurge.</span><span class="hljs-comment">#</span><span class="hljs-comment"># http://zookeeper.apache.org/doc/current/zookeeperAdmin.html#sc_maintenance</span><span class="hljs-comment">#</span><span class="hljs-comment"># The number of snapshots to retain in dataDir</span><span class="hljs-comment">#autopurge.snapRetainCount=3</span><span class="hljs-comment"># Purge task interval in hours</span><span class="hljs-comment"># Set to &quot;0&quot; to disable auto purge feature</span><span class="hljs-comment">#autopurge.purgeInterval=1</span><span class="hljs-attr">server.1</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.11</span>:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><span class="hljs-attr">server.2</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.12</span>:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span><span class="hljs-attr">server.3</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.101</span>:<span class="hljs-number">2888</span>:<span class="hljs-number">3888</span></code></pre><p>说明</p><ul><li>initLimit：ZooKeeper集群模式下包含多个zk进程，其中一个进程为leader，余下的进程为follower。当follower最初与leader建立连接时，它们之间会传输相当多的数据，尤其是follower的数据落后leader很多。initLimit配置follower与leader之间建立连接后进行同步的最长时间。</li><li>syncLimit：配置follower和leader之间发送消息，请求和应答的最大时间长度。</li><li>tickTime：tickTime则是上述两个超时配置的基本单位，例如对于initLimit，其配置值为5，说明其超时时间为2000ms*5=10秒。</li><li>server.id=host:port1:port2：其中id为一个数字，表示zk进程的id，这个id也是dataDir目录下myid文件的内容。host是该zk进程所在的IP地址，port1表示follower和leader交换消息所使用的端口，port2表示选举leader所使用的端口。</li><li>dataDir：其配置的含义跟单机模式下的含义类似，不同的是集群模式下还有一个myid文件。myid文件的内容只有一行，且内容只能为1-255之间的数字，这个数字亦即上面介绍server.id中的id，表示zk进程的id。</li><li>clientPort：这个端口就是<strong>客户端连接</strong> Zookeeper 服务器的端口，Zookeeper 会<strong>监听</strong>这个端口，<strong>接受客户端的访问</strong>请求。</li></ul><h4 id="创建myid文件"><a href="#创建myid文件" class="headerlink" title="创建myid文件"></a>创建myid文件</h4><p>ZooKeeper是根据该文件来决定ZooKeeper集群各个机器的身份分配。</p><blockquote><p> 主机10.10.10.11</p></blockquote><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/tmp/</span>zookeepervim <span class="hljs-regexp">/tmp/</span>zookeeper/myid</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>mycat zookeeper<span class="hljs-number">-3.4</span><span class="hljs-number">.14</span>]# cat /tmp/zookeeper/myid <span class="hljs-number">1</span></code></pre><blockquote><p>主机10.10.10.12</p></blockquote><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/tmp/</span>zookeepervim <span class="hljs-regexp">/tmp/</span>zookeeper/myid</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>mycat zookeeper<span class="hljs-number">-3.4</span><span class="hljs-number">.14</span>]# cat /tmp/zookeeper/myid <span class="hljs-number">2</span></code></pre><blockquote><p>主机10.10.10.101</p></blockquote><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/tmp/</span>zookeepervim <span class="hljs-regexp">/tmp/</span>zookeeper/myid</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>mycat zookeeper<span class="hljs-number">-3.4</span><span class="hljs-number">.14</span>]# cat /tmp/zookeeper/myid <span class="hljs-number">3</span></code></pre><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><p>进入zookeeper-3.4.14/bin目录</p><pre><code class="hljs routeros">[root@mycat bin]# ./zkServer.sh startZooKeeper JMX enabled by defaultUsing config: /root/data/mall/zookeeper-3.4.14/bin/<span class="hljs-built_in">..</span>/conf/zoo.cfgStarting zookeeper <span class="hljs-built_in">..</span>. STARTED</code></pre><p>*<strong>三个节点到启动成功</strong></p><h3 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h3><p>三个节点状态</p><blockquote><p>10.10.10.12节点</p></blockquote><pre><code class="hljs routeros">[root@mycat bin]# ./zkServer.sh statusZooKeeper JMX enabled by defaultUsing config: /root/data/mall/zookeeper-3.4.14/bin/<span class="hljs-built_in">..</span>/conf/zoo.cfgMode: leader</code></pre><blockquote><p>10.10.10.101节点</p></blockquote><pre><code class="hljs routeros">[root@db2 zookeeper-3.4.14]# bin/zkServer.sh statusZooKeeper JMX enabled by defaultUsing config: /root/zookeeper-3.4.14/bin/<span class="hljs-built_in">..</span>/conf/zoo.cfgMode: follower</code></pre><blockquote><p>10.10.10.11节点</p></blockquote><pre><code class="hljs routeros">[root@xserver1 zookeeper-3.4.14]# bin/zkServer.sh statusZooKeeper JMX enabled by defaultUsing config: /root/zookeeper-3.4.14/bin/<span class="hljs-built_in">..</span>/conf/zoo.cfgMode: follwer</code></pre><h2 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h2><p>记录其中遇到的一个网络问题:</p><p>问题描述: 虚拟机能对域名进行解析, 但不能联网<br>表现状态为使用ping <a href="http://www.baidu.com/">www.baidu.com</a> 后, 可以解析出IP地址, 但后续动作没有, 一直卡着</p><p>解决方法为:  重新添加一次NAT模式的网卡, 重启网络 (还删掉了一张用来做其他实验的仅主机模式的网卡及其网卡配置文件, 不知道是不是它造成的)</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用KVM部署虚拟机</title>
    <link href="/2020/08/04/%E7%94%A8KVM%E9%83%A8%E7%BD%B2%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <url>/2020/08/04/%E7%94%A8KVM%E9%83%A8%E7%BD%B2%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
    
    <content type="html"><![CDATA[<h1 id="用KVM部署虚拟机"><a href="#用KVM部署虚拟机" class="headerlink" title="用KVM部署虚拟机"></a>用KVM部署虚拟机</h1><h2 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h2><blockquote><p>KVM（Kernel-basedVirtualMachine）是一个开源软件，基于内核的虚拟化技术，实际是嵌入系统的一个虚拟化模块，通过优化内核来使用虚拟技术，该内核模块使得Linux变成了一个Hypervisor，虚拟机使用Linux自身的调度器进行管理。但是，KVM本身不执行任何硬件模拟，需要客户空间程序通过/dev/kvm接口设置一个客户机虚拟服务器的地址空间，向它提供模拟的I/O，并将它的视频显示映射回宿主的显示屏。目前这个应用程序是QEMU。</p></blockquote><blockquote><p>${var:+string} 规则和${var:-string},${var:=string}的完全相反 即只有当var不是空的时候才替换成string,若var为空时则不替换或者说是替换成变量var的值,即空值</p></blockquote><blockquote><p>Libvirt 是一组软件的汇集，提供了管理虚拟机和其它虚拟化功能（如：存储和网络接口等）的便利途径。这些软件包括：一个长期稳定的 C 语言 API、一个守护进程（libvirtd）和一个命令行工具（virsh）</p></blockquote><blockquote><p>KVM内核模块本身只能提供CPU和内存的虚拟化，所以它必须结合QEMU才能构成一个完成的虚拟化技术，这就是下面要说的qemu-kvm。</p></blockquote><blockquote><p>libvirt是目前使用最为广泛的对KVM虚拟机进行管理的工具和API。Libvirtd是一个daemon进程，可以被本地的virsh调用，也可以被远程的virsh调用，Libvirtd调用qemu-kvm操作虚拟机。</p><p>virsh virt-manager virt-viewer virt-install other-tools是libvirt用户态的工具</p></blockquote><h2 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h2><p><a href="https://blog.51cto.com/changfei/1672147">qemu-kvm-libvirtd三者关系</a></p><p><a href="https://www.cnblogs.com/fang9045315/p/8966107.html">QEMU/KVM网络模式(二)——NAT-创建qemu-ifup-nat脚本</a></p><p><a href="https://handerfly.github.io/shell/2019/04/03/shell%E7%BC%96%E7%A8%8B%E5%86%92%E5%8F%B7%E5%8A%A0-%E7%AD%89%E5%8F%B7-%E5%8A%A0%E5%8F%B7-%E5%87%8F%E5%8F%B7-%E9%97%AE%E5%8F%B7/">*shell 编程：冒号 后面跟 等号，加号，减号，问号的意义</a></p><p><a href="https://wiki.archlinux.org/index.php/Libvirt_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)">libvirt 介绍(简体中文)</a></p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>配置yum源</li><li>安装镜像(这里使用CentOS-7-x86_64-DVD-1511.iso镜像)</li><li>关闭防火墙, 清空规则</li></ul><h2 id="配置部署环境"><a href="#配置部署环境" class="headerlink" title="配置部署环境"></a>配置部署环境</h2><p>开启CPU虚拟化</p><p><img src="http://img.ljh666.xyz/img/20200804145837.png"></p><p>检查系统是否支持虚拟化：<br>Intel CPU：cat /proc/cpuinfo |grep –color vmx<br>AMD CPU：cat /proc/cpuinfo |grep –color smv</p><p><img src="http://img.ljh666.xyz/img/20200804145932.png"></p><h2 id="安装工具"><a href="#安装工具" class="headerlink" title="安装工具"></a>安装工具</h2><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> libvirt qemu-kvm virt-<span class="hljs-keyword">install</span> openssl</code></pre><p>查看kvm安装</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost ~]# lsmod | grep kvm kvm_intel             <span class="hljs-number">162153</span>  <span class="hljs-number">0</span> kvm                   <span class="hljs-number">525259</span>  <span class="hljs-number">1</span> kvm_intel</code></pre><h2 id="虚拟机环境"><a href="#虚拟机环境" class="headerlink" title="虚拟机环境"></a>虚拟机环境</h2><p>启用libvirtd</p><pre><code class="hljs pgsql">systemctl <span class="hljs-keyword">start</span> libvirtdsystemctl <span class="hljs-keyword">enable</span> libvirtd</code></pre><p>配置网络环境</p><p><a href="https://blog.csdn.net/gsl371/article/details/78662258">KVM的四种网络模式</a></p><p>NAT模式:</p><p><img src="http://img.ljh666.xyz/img/20200804151151.png"></p><p>DNS和DHCP<br>IP地址可以通过DHCP分配给客户机。为此，可以将地址池分配给虚拟网络交换机。Libvirt使用这个dnsmasq程序。dnsmasq的一个实例是由libvirt为每个需要它的虚拟网络交换机自动配置和启动的。</p><p><img src="http://img.ljh666.xyz/img/20200804151312.png"></p><p>桥接模式:</p><p><img src="http://img.ljh666.xyz/img/20200804151417.png"></p><p>KVM默认启动虚拟机时候默认使用NAT模式, 这里我使用的是桥接模式</p><h3 id="开始配置网桥"><a href="#开始配置网桥" class="headerlink" title="开始配置网桥"></a>开始配置网桥</h3><p>说明: 创建br0网桥并配置静态IP地址(但vmware中网卡模式为NAT时, 还可以通过dhcp获取到地址, 这里用的是仅主机模式且关闭了dhcp模式, 只能配置静态ip地址),  将原来主机的eno16777736文件指向br0网桥, 否则主机没有IP地址了. 利用上面的网桥, 就可以通过指向br0网桥, 从而使用宿主机的ip地址访问到kvm创建出来的虚拟机</p><p>备份网卡配置文件</p><pre><code class="hljs gradle">[root@localhost ~]# cd <span class="hljs-regexp">/etc/</span>sysconfig<span class="hljs-regexp">/network-scripts/</span>[root@localhost network-scripts]# cp ifcfg-eno16777736 <span class="hljs-regexp">/root/</span>bak/</code></pre><p>创建br0网桥</p><pre><code class="hljs apache"><span class="hljs-attribute">cp</span> ifcfg-eno<span class="hljs-number">16777736</span> ifcfg-br<span class="hljs-number">0</span></code></pre><pre><code class="hljs ini"><span class="hljs-section">[root@localhost network-scripts]</span><span class="hljs-comment"># vim ifcfg-br0     </span><span class="hljs-attr">BOOTPROTO</span>=static<span class="hljs-attr">DEVICE</span>=br0<span class="hljs-attr">TYPE</span>=Bridge<span class="hljs-attr">IPADDR</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.101</span><span class="hljs-attr">NETMASK</span>=<span class="hljs-number">255.255</span>.<span class="hljs-number">255.0</span></code></pre><p>配置原网卡配置文件eno16777736</p><pre><code class="hljs ini"><span class="hljs-section">[root@localhost network-scripts]</span><span class="hljs-comment"># vim ifcfg-eno16777736 </span><span class="hljs-attr">TYPE</span>=Ethernet<span class="hljs-attr">NAME</span>=eno16777736<span class="hljs-attr">DEVICE</span>=eno16777736<span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span><span class="hljs-attr">NM_CONTROTO</span>=none<span class="hljs-attr">BRIDGE</span>=<span class="hljs-string">&quot;br0&quot;</span></code></pre><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart network</span></code></pre><p>检查</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost network-scripts]# ifconfig                                                br0: flags=<span class="hljs-number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="hljs-number">1500</span>        inet <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.101</span>  netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span>  broadcast <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.255</span>        inet6 fe80::<span class="hljs-number">20</span>c:<span class="hljs-number">29f</span>f:fe9d:<span class="hljs-number">7</span>ebc  prefixlen <span class="hljs-number">64</span>  scopeid <span class="hljs-number">0x20</span>&lt;link&gt;        ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">9</span>d:<span class="hljs-number">7</span>e:bc  txqueuelen <span class="hljs-number">0</span>  (Ethernet)        RX packets <span class="hljs-number">10567</span>  bytes <span class="hljs-number">2241944</span> (<span class="hljs-number">2.1</span> MiB)        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span>        TX packets <span class="hljs-number">3821</span>  bytes <span class="hljs-number">597679</span> (<span class="hljs-number">583.6</span> KiB)        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span>eno16777736: flags=<span class="hljs-number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="hljs-number">1500</span>        ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">9</span>d:<span class="hljs-number">7</span>e:bc  txqueuelen <span class="hljs-number">1000</span>  (Ethernet)        RX packets <span class="hljs-number">16076</span>  bytes <span class="hljs-number">2807230</span> (<span class="hljs-number">2.6</span> MiB)        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">14</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span>        TX packets <span class="hljs-number">3850</span>  bytes <span class="hljs-number">632393</span> (<span class="hljs-number">617.5</span> KiB)        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span>eno33554960: flags=<span class="hljs-number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="hljs-number">1500</span>        inet <span class="hljs-number">100.100</span><span class="hljs-number">.100</span><span class="hljs-number">.121</span>  netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span>  broadcast <span class="hljs-number">100.100</span><span class="hljs-number">.100</span><span class="hljs-number">.255</span>        inet6 fe80::<span class="hljs-number">20</span>c:<span class="hljs-number">29f</span>f:fe9d:<span class="hljs-number">7</span>ec6  prefixlen <span class="hljs-number">64</span>  scopeid <span class="hljs-number">0x20</span>&lt;link&gt;        ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">9</span>d:<span class="hljs-number">7</span>e:c6  txqueuelen <span class="hljs-number">1000</span>  (Ethernet)        RX packets <span class="hljs-number">2993</span>  bytes <span class="hljs-number">3933002</span> (<span class="hljs-number">3.7</span> MiB)        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span>        TX packets <span class="hljs-number">935</span>  bytes <span class="hljs-number">65604</span> (<span class="hljs-number">64.0</span> KiB)        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span>lo: flags=<span class="hljs-number">73</span>&lt;UP,LOOPBACK,RUNNING&gt;  mtu <span class="hljs-number">65536</span>        inet <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>  netmask <span class="hljs-number">255.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>        inet6 ::<span class="hljs-number">1</span>  prefixlen <span class="hljs-number">128</span>  scopeid <span class="hljs-number">0x10</span>&lt;host&gt;        loop  txqueuelen <span class="hljs-number">0</span>  (Local Loopback)        RX packets <span class="hljs-number">87</span>  bytes <span class="hljs-number">9792</span> (<span class="hljs-number">9.5</span> KiB)        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span>        TX packets <span class="hljs-number">87</span>  bytes <span class="hljs-number">9792</span> (<span class="hljs-number">9.5</span> KiB)        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span>virbr0: flags=<span class="hljs-number">4099</span>&lt;UP,BROADCAST,MULTICAST&gt;  mtu <span class="hljs-number">1500</span>        inet <span class="hljs-number">192.168</span><span class="hljs-number">.122</span><span class="hljs-number">.1</span>  netmask <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span>  broadcast <span class="hljs-number">192.168</span><span class="hljs-number">.122</span><span class="hljs-number">.255</span>        ether <span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>:<span class="hljs-number">00</span>  txqueuelen <span class="hljs-number">0</span>  (Ethernet)        RX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)        RX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span>  overruns <span class="hljs-number">0</span>  frame <span class="hljs-number">0</span>        TX packets <span class="hljs-number">0</span>  bytes <span class="hljs-number">0</span> (<span class="hljs-number">0.0</span> B)        TX errors <span class="hljs-number">0</span>  dropped <span class="hljs-number">0</span> overruns <span class="hljs-number">0</span>  carrier <span class="hljs-number">0</span>  collisions <span class="hljs-number">0</span></code></pre><p>其中virbr0就是默认创建的虚拟机使用的网桥, 这和本实验无关, 用不到</p><h3 id="准备虚拟机资源"><a href="#准备虚拟机资源" class="headerlink" title="准备虚拟机资源"></a>准备虚拟机资源</h3><p>创建存放kvm虚拟机的文件夹</p><pre><code class="hljs awk">mkdir <span class="hljs-regexp">/opt/</span>kvmData</code></pre><p>上传用于安装的镜像</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost opt]# lsCentOS<span class="hljs-number">-7</span>-x86_64-DVD<span class="hljs-number">-1511.</span>iso  kvmData</code></pre><h2 id="创建-安装虚拟机"><a href="#创建-安装虚拟机" class="headerlink" title="创建|安装虚拟机"></a>创建|安装虚拟机</h2><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><pre><code class="hljs apache"><span class="hljs-attribute">virt</span>-install -n kvmVirt-<span class="hljs-number">1</span> -r <span class="hljs-number">1024</span> --disk /opt/kvmData/kvmVirtData-<span class="hljs-number">1</span>.img,format=qcow<span class="hljs-number">2</span>,size=<span class="hljs-number">20</span> --network bridge=br<span class="hljs-number">0</span> --os-type=linux  --cdrom /opt/CentOS-<span class="hljs-number">7</span>-x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>-DVD-<span class="hljs-number">1511</span>.iso --vnc --vncport=<span class="hljs-number">5910</span> --vnclisten=<span class="hljs-number">0.0.0.0</span> --check <span class="hljs-literal">all</span>=<span class="hljs-literal">off</span></code></pre><pre><code class="hljs clean">--name Centos                    ###虚拟机名字--virt-type kvm                  ###虚拟机类型--ram <span class="hljs-number">1024</span>                       ###虚拟机内存--cdrom=/opt/CentOS<span class="hljs-number">-7.1</span>.iso      ###镜像地址--disk path=/kvmdir/test.img     ###虚拟机安装位置--network=default                ###默认网络配置--graphics vnc,listen=<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>    ###监听所有IP--vcpus <span class="hljs-number">5</span>                        ###可以使用cpu个数--vcpus <span class="hljs-number">5</span>,maxcpus=<span class="hljs-number">10</span>             ###可以使用<span class="hljs-number">5</span>颗cpu，最大支持<span class="hljs-number">10</span>颗cpu</code></pre><h3 id="连接虚拟机"><a href="#连接虚拟机" class="headerlink" title="连接虚拟机"></a>连接虚拟机</h3><p>安装VNC Viewer</p><p>通过VNC Viewer连接虚拟机</p><p><img src="http://img.ljh666.xyz/img/20200804155821.png"></p><p>连接成功</p><p><img src="http://img.ljh666.xyz/img/image-20200804155932078.png"></p><p>后面的安装略</p><h2 id="虚拟机管理"><a href="#虚拟机管理" class="headerlink" title="虚拟机管理"></a>虚拟机管理</h2><p>查看虚拟机</p><pre><code class="hljs asciidoc">[root@localhost ~]# virsh list<span class="hljs-code"> Id    Name                           State</span>----------------------------------------------------<span class="hljs-code"> 6     kvmVirt-1                      running</span></code></pre><p>删除虚拟机</p><pre><code class="hljs asciidoc">[root@localhost ~]# virsh destroy kvmVirt-1Domain kvmVirt-1 destroyed[root@localhost ~]# virsh undefine kvmVirt-1Domain kvmVirt-1 has been undefined[root@localhost ~]# virsh list<span class="hljs-code"> Id    Name                           State</span>----------------------------------------------------</code></pre><p>至此, KVM的部署与虚拟机的配置已完成</p><p>干杯~🍻</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>配置主从DNS服务器</title>
    <link href="/2020/08/02/%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8EDNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2020/08/02/%E9%85%8D%E7%BD%AE%E4%B8%BB%E4%BB%8EDNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="配置主从DNS服务器"><a href="#配置主从DNS服务器" class="headerlink" title="配置主从DNS服务器"></a>配置主从DNS服务器</h1><h2 id="安装主DNS"><a href="#安装主DNS" class="headerlink" title="安装主DNS"></a>安装主DNS</h2><p>参考  <a href="%5Bhttp://www.ljh666.xyz/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/%5D(http://www.ljh666.xyz/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/)">搭建DNS服务器</a></p><p>其中区域配置文件的/etc/named.rfc1912.zones改为</p><pre><code class="hljs routeros">zone <span class="hljs-string">&quot;ljh.com&quot;</span> <span class="hljs-keyword">IN</span> &#123;       <span class="hljs-built_in"> type </span>master;        file <span class="hljs-string">&quot;named.localhost&quot;</span>;        allow-update &#123; 10.10.10.11; &#125;;    # 添加从服务器的地址, 两边有空格&#125;;zone <span class="hljs-string">&quot;10.10.10.in-addr.arpa&quot;</span> <span class="hljs-keyword">IN</span> &#123;       <span class="hljs-built_in"> type </span>master;        file <span class="hljs-string">&quot;named.loopback&quot;</span>;        allow-update &#123; 10.10.10.11; &#125;;    # 添加从服务器的地址, 两边有空格&#125;;</code></pre><p>重启主DNS</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart named</span></code></pre><h2 id="安装从DNS"><a href="#安装从DNS" class="headerlink" title="安装从DNS"></a>安装从DNS</h2><p>修改主配置文件</p><p>修改区域配置文件</p><pre><code class="hljs abnf">zone <span class="hljs-string">&quot;localhost.localdomain&quot;</span> IN &#123;        type slave<span class="hljs-comment">;</span>        file <span class="hljs-string">&quot;slaves/named.localhost&quot;</span><span class="hljs-comment">;    //数据文件保存于slaves文件夹中</span>        masters &#123; <span class="hljs-number">10.10</span>.<span class="hljs-number">10.12</span><span class="hljs-comment">; &#125;;</span>        // 要删除allow-update &#123; none<span class="hljs-comment">; &#125;;</span>&#125;<span class="hljs-comment">;</span>zone <span class="hljs-string">&quot;1.0.0.127.in-addr.arpa&quot;</span> IN &#123;        type slave<span class="hljs-comment">;</span>        file <span class="hljs-string">&quot;slaves/named.loopback&quot;</span><span class="hljs-comment">;    //数据文件保存于slaves文件夹中</span>        masters &#123; <span class="hljs-number">10.10</span>.<span class="hljs-number">10.12</span><span class="hljs-comment">; &#125;;</span>        // 要删除allow-update &#123; none<span class="hljs-comment">; &#125;;</span>&#125;<span class="hljs-comment">;</span></code></pre><p>重启DNS</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart named</span></code></pre><p>可以在从服务器查看到同步的数据文件</p><pre><code class="hljs gradle">[root@DNS2 ~]# ls <span class="hljs-regexp">/var/</span>named<span class="hljs-regexp">/slaves/</span>named.localhost  named.loopback</code></pre><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>配置测试机</p><pre><code class="hljs yaml">[<span class="hljs-string">root@DNS2</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># vim /etc/resolv.conf</span><span class="hljs-comment"># Generated by NetworkManager</span><span class="hljs-string">search</span> <span class="hljs-string">localdomain</span> <span class="hljs-string">ljh.com</span><span class="hljs-string">nameserver</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span>             <span class="hljs-comment"># 指向从DNS服务器</span></code></pre><p>重启测试机网络服务</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@DNS2</span> ~]<span class="hljs-meta"># systemctl restart network</span></code></pre><p>你还可以用个dig命令直接指定DNS服务器, 这样就不用修改/etc/resolv.conf了</p><pre><code class="hljs yaml">[<span class="hljs-string">root@xserver1</span> <span class="hljs-string">~</span>]<span class="hljs-comment"># dig mail.ljh.com @10.10.10.11   </span><span class="hljs-string">;</span> <span class="hljs-string">&lt;&lt;&gt;&gt;</span> <span class="hljs-string">DiG</span> <span class="hljs-number">9.11</span><span class="hljs-number">.4</span><span class="hljs-string">-P2-RedHat-9.11.4-16.P2.el7_8.6</span> <span class="hljs-string">&lt;&lt;&gt;&gt;</span> <span class="hljs-string">mail.ljh.com</span> <span class="hljs-string">@10.10.10.11</span><span class="hljs-string">;;</span> <span class="hljs-attr">global options:</span> <span class="hljs-string">+cmd</span><span class="hljs-string">;;</span> <span class="hljs-attr">Got answer:</span><span class="hljs-string">;;</span> <span class="hljs-string">-&gt;&gt;HEADER&lt;&lt;-</span> <span class="hljs-attr">opcode:</span> <span class="hljs-string">QUERY,</span> <span class="hljs-attr">status:</span> <span class="hljs-string">NOERROR,</span> <span class="hljs-attr">id:</span> <span class="hljs-number">10054</span><span class="hljs-string">;;</span> <span class="hljs-attr">flags:</span> <span class="hljs-string">qr</span> <span class="hljs-string">aa</span> <span class="hljs-string">rd</span> <span class="hljs-string">ra;</span> <span class="hljs-attr">QUERY:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">ANSWER:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">AUTHORITY:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">ADDITIONAL:</span> <span class="hljs-number">2</span><span class="hljs-string">;;</span> <span class="hljs-attr">OPT PSEUDOSECTION:</span><span class="hljs-string">;</span> <span class="hljs-attr">EDNS: version:</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-string">flags:;</span> <span class="hljs-attr">udp:</span> <span class="hljs-number">4096</span><span class="hljs-string">;;</span> <span class="hljs-attr">QUESTION SECTION:</span><span class="hljs-string">;mail.ljh.com.</span>                  <span class="hljs-string">IN</span>      <span class="hljs-string">A</span><span class="hljs-string">;;</span> <span class="hljs-attr">ANSWER SECTION:</span><span class="hljs-string">mail.ljh.com.</span>           <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">A</span>       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;;</span> <span class="hljs-attr">AUTHORITY SECTION:</span><span class="hljs-string">ljh.com.</span>                <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">NS</span>      <span class="hljs-string">ns.ljh.com.</span><span class="hljs-string">;;</span> <span class="hljs-attr">ADDITIONAL SECTION:</span><span class="hljs-string">ns.ljh.com.</span>             <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">A</span>       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;;</span> <span class="hljs-attr">Query time:</span> <span class="hljs-number">0</span> <span class="hljs-string">msec</span><span class="hljs-string">;;</span> <span class="hljs-attr">SERVER:</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.11</span><span class="hljs-comment">#53(10.10.10.11)</span><span class="hljs-string">;;</span> <span class="hljs-attr">WHEN:</span> <span class="hljs-string">日</span> <span class="hljs-number">8</span><span class="hljs-string">月</span> <span class="hljs-number">02</span> <span class="hljs-number">19</span><span class="hljs-string">:26:05</span> <span class="hljs-string">CST</span> <span class="hljs-number">2020</span><span class="hljs-string">;;</span> <span class="hljs-attr">MSG SIZE  rcvd:</span> <span class="hljs-number">90</span></code></pre><p>主从DNS配置完成🍺</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装 | 配置DHCP服务器</title>
    <link href="/2020/08/01/%E5%AE%89%E8%A3%85%20%20%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2020/08/01/%E5%AE%89%E8%A3%85%20%20%E9%85%8D%E7%BD%AEDHCP%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="安装-配置DHCP服务器"><a href="#安装-配置DHCP服务器" class="headerlink" title="安装 | 配置DHCP服务器"></a>安装 | 配置DHCP服务器</h1><h2 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h2><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>一台服务器</li><li>一台客户机</li><li>配置yum源</li></ul><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>将服务器和客户机放在同一个LAN内(局域网内), 这里两台机器我都使用仅主机&gt;模式</p><blockquote><p><strong>服务器</strong></p></blockquote><p><img src="http://img.ljh666.xyz/img/20200801215242.png"></p><blockquote><p><strong>客户机</strong></p></blockquote><p><img src="http://img.ljh666.xyz/img/20200801221405.png"></p><h2 id="安装DHCP工具"><a href="#安装DHCP工具" class="headerlink" title="安装DHCP工具"></a>安装DHCP工具</h2><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> dhcp</code></pre><h2 id="配置DHCP"><a href="#配置DHCP" class="headerlink" title="配置DHCP"></a>配置DHCP</h2><p>复制模板文件</p><p>挑选其中最细的一个子网模块做修改</p><pre><code class="hljs yaml"><span class="hljs-comment"># A slightly different configuration for an internal subnet.</span><span class="hljs-string">subnet</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.0</span> <span class="hljs-string">netmask</span> <span class="hljs-number">255.255</span><span class="hljs-number">.255</span><span class="hljs-number">.0</span> &#123;  <span class="hljs-string">range</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.200</span><span class="hljs-string">;</span>  <span class="hljs-string">option</span> <span class="hljs-string">domain-name-servers</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;</span>    <span class="hljs-comment"># DNS服务器地址</span>  <span class="hljs-string">option</span> <span class="hljs-string">domain-name</span> <span class="hljs-string">&quot;ljh.com&quot;</span><span class="hljs-string">;</span>                <span class="hljs-comment"># DNS域</span>  <span class="hljs-string">option</span> <span class="hljs-string">routers</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;</span>                <span class="hljs-comment"># 网关</span>  <span class="hljs-string">option</span> <span class="hljs-string">broadcast-address</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.255</span><span class="hljs-string">;</span>    <span class="hljs-comment"># 广播地址(可不写)</span>  <span class="hljs-string">default-lease-time</span> <span class="hljs-number">600</span><span class="hljs-string">;</span>            <span class="hljs-comment"># 默认租约（s）</span>  <span class="hljs-string">max-lease-time</span> <span class="hljs-number">7200</span><span class="hljs-string">;</span>                <span class="hljs-comment"># 最大租约（s）</span>&#125;</code></pre><h2 id="测试DHCP服务器"><a href="#测试DHCP服务器" class="headerlink" title="测试DHCP服务器"></a>测试DHCP服务器</h2><h3 id="启动DHCP-服务名dhcpd"><a href="#启动DHCP-服务名dhcpd" class="headerlink" title="启动DHCP(服务名dhcpd)"></a>启动DHCP(服务名dhcpd)</h3><pre><code class="hljs properties"><span class="hljs-attr">systemctl</span> <span class="hljs-string">enable dhcpd</span><span class="hljs-attr">systemctl</span> <span class="hljs-string">start dhcpd</span><span class="hljs-attr">systemctl</span> <span class="hljs-string">status dhcpd</span></code></pre><h3 id="配置测试机"><a href="#配置测试机" class="headerlink" title="配置测试机"></a>配置测试机</h3><p>复制网卡</p><pre><code class="hljs apache"><span class="hljs-attribute">cp</span> ifcfg-ens<span class="hljs-number">33</span> ifcfg-ens<span class="hljs-number">38</span></code></pre><p>编辑网卡</p><pre><code class="hljs ini"><span class="hljs-section">[root@localhost network-scripts]</span><span class="hljs-comment"># vim ifcfg-ens38</span><span class="hljs-attr">TYPE</span>=Ethernet<span class="hljs-attr">PROXY_METHOD</span>=none<span class="hljs-attr">BROWSER_ONLY</span>=<span class="hljs-literal">no</span><span class="hljs-attr">BOOTPROTO</span>=dhcp                <span class="hljs-comment"># 修改为dhcp模式</span><span class="hljs-attr">DEFROUTE</span>=<span class="hljs-literal">yes</span><span class="hljs-attr">IPV4_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><span class="hljs-attr">IPV6INIT</span>=<span class="hljs-literal">yes</span><span class="hljs-attr">IPV6_AUTOCONF</span>=<span class="hljs-literal">yes</span><span class="hljs-attr">IPV6_DEFROUTE</span>=<span class="hljs-literal">yes</span><span class="hljs-attr">IPV6_FAILURE_FATAL</span>=<span class="hljs-literal">no</span><span class="hljs-attr">IPV6_ADDR_GEN_MODE</span>=stable-privacy<span class="hljs-attr">NAME</span>=ens37                    <span class="hljs-comment"># 要删除复制过来的UUID和ip地址</span><span class="hljs-attr">DEVICE</span>=ens37<span class="hljs-attr">ONBOOT</span>=<span class="hljs-literal">yes</span></code></pre><p> 重启网卡</p><pre><code class="hljs ebnf"><span class="hljs-attribute">systemctl restart network</span></code></pre><p>查看地址获取到的地址</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>xserver1 network-scripts]# ip addr show ens38<span class="hljs-number">16</span>: ens38: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu <span class="hljs-number">1500</span> qdisc pfifo_fast state UP group <span class="hljs-keyword">default</span> qlen <span class="hljs-number">1000</span>    link/ether <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b brd ff:ff:ff:ff:ff:ff    inet <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span>/<span class="hljs-number">24</span> brd <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.255</span> scope global noprefixroute dynamic ens38       valid_lft <span class="hljs-number">348</span>sec preferred_lft <span class="hljs-number">348</span>sec    inet6 fe80::a7ed:a38c:e4e2:<span class="hljs-number">3</span>d3a/<span class="hljs-number">64</span> scope link noprefixroute        valid_lft forever preferred_lft forever</code></pre><p>服务器端日志(dhcp报文从ens33网卡发出到客户机)</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost network-scripts]# tail <span class="hljs-number">-10</span>  /var/log/messages Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">44</span> localhost dhcpd: DHCPREQUEST <span class="hljs-keyword">for</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> <span class="hljs-keyword">from</span> <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">44</span> localhost dhcpd: DHCPACK on <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> to <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">46</span> localhost dhcpd: DHCPREQUEST <span class="hljs-keyword">for</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> <span class="hljs-keyword">from</span> <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">46</span> localhost dhcpd: DHCPACK on <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> to <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">50</span> localhost dhcpd: DHCPREQUEST <span class="hljs-keyword">for</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> <span class="hljs-keyword">from</span> <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33Aug  <span class="hljs-number">2</span> <span class="hljs-number">06</span>:<span class="hljs-number">41</span>:<span class="hljs-number">50</span> localhost dhcpd: DHCPACK on <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.20</span> to <span class="hljs-number">00</span>:<span class="hljs-number">0</span>c:<span class="hljs-number">29</span>:<span class="hljs-number">4</span>a:<span class="hljs-number">64</span>:<span class="hljs-number">9</span>b (xserver1) via ens33</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Centos搭建邮件服务器</title>
    <link href="/2020/08/01/%E7%94%A8Centos%E6%90%AD%E5%BB%BApostfix-dovecot%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8(%E9%9A%BE)/"/>
    <url>/2020/08/01/%E7%94%A8Centos%E6%90%AD%E5%BB%BApostfix-dovecot%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8(%E9%9A%BE)/</url>
    
    <content type="html"><![CDATA[<h1 id="用Centos搭建邮件服务器"><a href="#用Centos搭建邮件服务器" class="headerlink" title="用Centos搭建邮件服务器"></a>用Centos搭建邮件服务器</h1><h2 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h2><blockquote><p>postfix管邮件收发，也就是SMTP服务器<br>dovecot负责邮件管理，上传，下载，删除等。也就是POP3/IMAP服务器<br>amsmtp则是基于web的Postfix 邮件发送服务器的管理工具，可以直接管理Postfix 的虚拟域名和用户(本文未使用    )<br>三者是完全不冲突的不同的东西，配合使用才能形成<strong>完整的邮件系统</strong>！</p></blockquote><h2 id="使用工具"><a href="#使用工具" class="headerlink" title="使用工具"></a>使用工具</h2><ul><li>postfix(发送)</li><li>dovecot(接收,管理)</li><li>telnet(连接邮件服务器, 提供交互界面)</li></ul><h2 id="搭建DNS服务器"><a href="#搭建DNS服务器" class="headerlink" title="搭建DNS服务器"></a>搭建DNS服务器</h2><p>目的:给邮件服务器提供域名系解析服务</p><p>搭建DNS服务器具体教程:  <a href="%5Bhttp://www.ljh666.xyz/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/%5D(http://www.ljh666.xyz/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/)">搭建DNS服务器</a></p><pre><code class="hljs perl">yum -<span class="hljs-keyword">y</span> install <span class="hljs-keyword">bind</span>-<span class="hljs-keyword">chroot</span> <span class="hljs-keyword">bind</span>-utils</code></pre><p>修改DNS配置文件前记得备份</p><pre><code class="hljs gradle">[root@pxe yum.repos.d]# cat <span class="hljs-regexp">/etc/</span>named.conf<span class="hljs-comment">//</span><span class="hljs-comment">// named.conf</span><span class="hljs-comment">//</span><span class="hljs-comment">// Provided by Red Hat bind package to configure the ISC BIND named(8) DNS</span><span class="hljs-comment">// server as a caching only nameserver (as a localhost DNS resolver only).</span><span class="hljs-comment">//</span><span class="hljs-comment">// See /usr/share/doc/bind*/sample/ for example named configuration files.</span><span class="hljs-comment">//</span><span class="hljs-comment">// See the BIND Administrator&#x27;s Reference Manual (ARM) for details about the</span><span class="hljs-comment">// configuration located in /usr/share/doc/bind-&#123;version&#125;/Bv9ARM.html</span><span class="hljs-keyword">options</span> &#123;        listen-on port <span class="hljs-number">53</span> &#123; <span class="hljs-keyword">any</span>; &#125;;        listen-on-v6 port <span class="hljs-number">53</span> &#123; ::<span class="hljs-number">1</span>; &#125;;        directory       <span class="hljs-string">&quot;/var/named&quot;</span>;        <span class="hljs-keyword">dump</span>-<span class="hljs-keyword">file</span>       <span class="hljs-string">&quot;/var/named/data/cache_dump.db&quot;</span>;        statistics-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/var/named/data/named_stats.txt&quot;</span>;        memstatistics-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>;        recursing-<span class="hljs-keyword">file</span>  <span class="hljs-string">&quot;/var/named/data/named.recursing&quot;</span>;        secroots-<span class="hljs-keyword">file</span>   <span class="hljs-string">&quot;/var/named/data/named.secroots&quot;</span>;        allow-query     &#123; <span class="hljs-keyword">any</span>; &#125;;        <span class="hljs-comment">/* </span><span class="hljs-comment">         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.</span><span class="hljs-comment">         - If you are building a RECURSIVE (caching) DNS server, you need to enable </span><span class="hljs-comment">           recursion. </span><span class="hljs-comment">         - If your recursive DNS server has a public IP address, you MUST enable access </span><span class="hljs-comment">           control to limit queries to your legitimate users. Failing to do so will</span><span class="hljs-comment">           cause your server to become part of large scale DNS amplification </span><span class="hljs-comment">           attacks. Implementing BCP38 within your network would greatly</span><span class="hljs-comment">           reduce such attack surface </span><span class="hljs-comment">        */</span>        recursion yes;        dnssec-enable yes;        dnssec-validation yes;        <span class="hljs-comment">/* Path to ISC DLV key */</span>        bindkeys-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/etc/named.root.key&quot;</span>;        managed-keys-directory <span class="hljs-string">&quot;/var/named/dynamic&quot;</span>;        pid-<span class="hljs-keyword">file</span> <span class="hljs-string">&quot;/run/named/named.pid&quot;</span>;        session-keyfile <span class="hljs-string">&quot;/run/named/session.key&quot;</span>;&#125;;logging &#123;        channel default_debug &#123;                <span class="hljs-keyword">file</span> <span class="hljs-string">&quot;data/named.run&quot;</span>;                severity dynamic;        &#125;;&#125;;zone <span class="hljs-string">&quot;.&quot;</span> IN &#123;        type hint;        <span class="hljs-keyword">file</span> <span class="hljs-string">&quot;named.ca&quot;</span>;&#125;;<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/etc/named.rfc1912.zones&quot;</span>;<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;/etc/named.root.key&quot;</span>;</code></pre><pre><code class="hljs awk">[root@pxe yum.repos.d]<span class="hljs-comment"># cat /etc/named.rfc1912.zones</span><span class="hljs-regexp">//</span> named.rfc1912.zones:<span class="hljs-regexp">//</span><span class="hljs-regexp">//</span> Provided by Red Hat caching-nameserver package <span class="hljs-regexp">//</span><span class="hljs-regexp">//</span> ISC BIND named zone configuration <span class="hljs-keyword">for</span> zones recommended by<span class="hljs-regexp">//</span> RFC <span class="hljs-number">1912</span> section <span class="hljs-number">4.1</span> : localhost TLDs and address zones<span class="hljs-regexp">//</span> and http:<span class="hljs-regexp">//</span>www.ietf.org<span class="hljs-regexp">/internet-drafts/</span>draft-ietf-dnsop-default-local-zones-<span class="hljs-number">02</span>.txt<span class="hljs-regexp">//</span> (c)<span class="hljs-number">2007</span> R W Franks<span class="hljs-regexp">//</span> <span class="hljs-regexp">//</span> See <span class="hljs-regexp">/usr/</span>share<span class="hljs-regexp">/doc/</span>bind*<span class="hljs-regexp">/sample/</span> <span class="hljs-keyword">for</span> example named configuration files.<span class="hljs-regexp">//</span>zone <span class="hljs-string">&quot;ljh.com&quot;</span> IN &#123;        type master;        file <span class="hljs-string">&quot;named.localhost&quot;</span>;        allow-update &#123; none; &#125;;&#125;;zone <span class="hljs-string">&quot;10.10.10.in-addr.arpa&quot;</span> IN &#123;        type master;        file <span class="hljs-string">&quot;named.loopback&quot;</span>;        allow-update &#123; none; &#125;;&#125;;</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>pxe yum.repos.d]# cat /var/named/named.localhost  $TTL <span class="hljs-number">1</span>D@       IN SOA  @ mail.qq.com. (                                        <span class="hljs-number">0</span>       ; serial                                        <span class="hljs-number">1</span>D      ; <span class="hljs-built_in">ref</span>resh                                        <span class="hljs-number">1</span>H      ; retry                                        <span class="hljs-number">1</span>W      ; expire                                        <span class="hljs-number">3</span>H )    ; minimum        NS      ns.ljh.com.ns      A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>mail    A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>[<span class="hljs-symbol">root@</span>pxe yum.repos.d]# cat /var/named/named.loopback$TTL <span class="hljs-number">1</span>D@       IN SOA  @ mail.qq.com. (                                        <span class="hljs-number">0</span>       ; serial                                        <span class="hljs-number">1</span>D      ; <span class="hljs-built_in">ref</span>resh                                        <span class="hljs-number">1</span>H      ; retry                                        <span class="hljs-number">1</span>W      ; expire                                        <span class="hljs-number">3</span>H )    ; minimum        NS      ns.ljh.com.ns      A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-number">12</span>      PTR     mail.ljh.com.</code></pre><h3 id="验证DNS搭建结果"><a href="#验证DNS搭建结果" class="headerlink" title="验证DNS搭建结果"></a>验证DNS搭建结果</h3><p>配置测试机</p><pre><code class="hljs yaml">[<span class="hljs-string">root@pxe</span> <span class="hljs-string">yum.repos.d</span>]<span class="hljs-comment"># cat /etc/resolv.conf</span><span class="hljs-comment"># Generated by NetworkManager</span><span class="hljs-string">search</span> <span class="hljs-string">localdomain</span><span class="hljs-string">nameserver</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">nameserver</span> <span class="hljs-number">100.100</span><span class="hljs-number">.100</span><span class="hljs-number">.240</span>    <span class="hljs-comment">#用于连接外网的, 与验证实验无关</span></code></pre><p>验证</p><pre><code class="hljs yaml">[<span class="hljs-string">root@pxe</span> <span class="hljs-string">yum.repos.d</span>]<span class="hljs-comment"># dig -t A mail.ljh.com</span><span class="hljs-string">;</span> <span class="hljs-string">&lt;&lt;&gt;&gt;</span> <span class="hljs-string">DiG</span> <span class="hljs-number">9.11</span><span class="hljs-number">.4</span><span class="hljs-string">-P2-RedHat-9.11.4-16.P2.el7_8.6</span> <span class="hljs-string">&lt;&lt;&gt;&gt;</span> <span class="hljs-string">-t</span> <span class="hljs-string">A</span> <span class="hljs-string">mail.ljh.com</span><span class="hljs-string">;;</span> <span class="hljs-attr">global options:</span> <span class="hljs-string">+cmd</span><span class="hljs-string">;;</span> <span class="hljs-attr">Got answer:</span><span class="hljs-string">;;</span> <span class="hljs-string">-&gt;&gt;HEADER&lt;&lt;-</span> <span class="hljs-attr">opcode:</span> <span class="hljs-string">QUERY,</span> <span class="hljs-attr">status:</span> <span class="hljs-string">NOERROR,</span> <span class="hljs-attr">id:</span> <span class="hljs-number">64759</span><span class="hljs-string">;;</span> <span class="hljs-attr">flags:</span> <span class="hljs-string">qr</span> <span class="hljs-string">aa</span> <span class="hljs-string">rd</span> <span class="hljs-string">ra;</span> <span class="hljs-attr">QUERY:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">ANSWER:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">AUTHORITY:</span> <span class="hljs-number">1</span><span class="hljs-string">,</span> <span class="hljs-attr">ADDITIONAL:</span> <span class="hljs-number">2</span><span class="hljs-string">;;</span> <span class="hljs-attr">OPT PSEUDOSECTION:</span><span class="hljs-string">;</span> <span class="hljs-attr">EDNS: version:</span> <span class="hljs-number">0</span><span class="hljs-string">,</span> <span class="hljs-string">flags:;</span> <span class="hljs-attr">udp:</span> <span class="hljs-number">4096</span><span class="hljs-string">;;</span> <span class="hljs-attr">QUESTION SECTION:</span><span class="hljs-string">;mail.ljh.com.</span>                  <span class="hljs-string">IN</span>      <span class="hljs-string">A</span><span class="hljs-string">;;</span> <span class="hljs-attr">ANSWER SECTION:</span><span class="hljs-string">mail.ljh.com.</span>           <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">A</span>       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;;</span> <span class="hljs-attr">AUTHORITY SECTION:</span><span class="hljs-string">ljh.com.</span>                <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">NS</span>      <span class="hljs-string">ns.ljh.com.</span><span class="hljs-string">;;</span> <span class="hljs-attr">ADDITIONAL SECTION:</span><span class="hljs-string">ns.ljh.com.</span>             <span class="hljs-number">86400</span>   <span class="hljs-string">IN</span>      <span class="hljs-string">A</span>       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-string">;;</span> <span class="hljs-attr">Query time:</span> <span class="hljs-number">0</span> <span class="hljs-string">msec</span><span class="hljs-string">;;</span> <span class="hljs-attr">SERVER:</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-comment">#53(10.10.10.12)</span><span class="hljs-string">;;</span> <span class="hljs-attr">WHEN:</span> <span class="hljs-string">六</span> <span class="hljs-number">8</span><span class="hljs-string">月</span> <span class="hljs-number">01</span> <span class="hljs-number">16</span><span class="hljs-string">:20:34</span> <span class="hljs-string">CST</span> <span class="hljs-number">2020</span><span class="hljs-string">;;</span> <span class="hljs-attr">MSG SIZE  rcvd:</span> <span class="hljs-number">90</span></code></pre><h2 id="搭建邮件服务器"><a href="#搭建邮件服务器" class="headerlink" title="搭建邮件服务器"></a>搭建邮件服务器</h2><h3 id="安装postfix"><a href="#安装postfix" class="headerlink" title="安装postfix"></a>安装postfix</h3><pre><code class="hljs cmake">rpm -e postfix        <span class="hljs-comment"># 卸载系统自带版本</span>yum -y <span class="hljs-keyword">install</span> postfix</code></pre><h3 id="配置postfix的系统用户与用户组"><a href="#配置postfix的系统用户与用户组" class="headerlink" title="配置postfix的系统用户与用户组"></a>配置postfix的系统用户与用户组</h3><p>删除系统已有的postfix用户与postdrop用户组</p><pre><code class="hljs properties"><span class="hljs-attr">userdel</span> <span class="hljs-string">postfix</span><span class="hljs-attr">groupdel</span> <span class="hljs-string">postdrop</span></code></pre><p>新建用户</p><pre><code class="hljs angelscript">groupadd -g <span class="hljs-number">2525</span> postfixuseradd -g <span class="hljs-number">2525</span> -u <span class="hljs-number">2525</span> -M -s /sbin/nologin postfix</code></pre><blockquote><p>-s, –shell SHELL             新账户的登录 shell</p><p>-M, –no-create-home          不创建用户的主目录</p></blockquote><h3 id="配置postfix"><a href="#配置postfix" class="headerlink" title="配置postfix"></a>配置postfix</h3><p>修改内容</p><pre><code class="hljs ini"><span class="hljs-section">[root@mail~]</span><span class="hljs-comment">#vi/etc/postfix/main.cf     </span><span class="hljs-comment">#修改邮局主机名</span><span class="hljs-attr">myhostname</span>=mail.testmail.com         <span class="hljs-comment">#修改邮局域名</span><span class="hljs-attr">mydomain</span>=testmail.com         <span class="hljs-comment">#寄出邮件域名，删除注释</span><span class="hljs-attr">myorigin</span>=<span class="hljs-variable">$mydomain</span>                <span class="hljs-comment">#修改监听所有网卡，删除注释</span><span class="hljs-attr">inet_interfaces</span>=all            <span class="hljs-comment">#修改可接收邮件的主机名和域名，可被中继的域名mydestination=$myhostname,localhost.$mydomain,localhost,$mydomain            #修改可接收邮件的主机名和域名，可被中继的主机</span><span class="hljs-comment">#按实际情况填写</span><span class="hljs-attr">mynetworks</span>=<span class="hljs-number">10.10</span>.<span class="hljs-number">10.0</span>/<span class="hljs-number">24</span>,<span class="hljs-number">127.0</span>.<span class="hljs-number">0.0</span>/<span class="hljs-number">8</span>        <span class="hljs-comment">#取消注释</span><span class="hljs-attr">home_mailbox</span>=Maildir/        <span class="hljs-comment">#指定信任网段类型</span><span class="hljs-attr">mynetworks_style</span>=host            <span class="hljs-comment">#指定允许中转邮件的域名，取消注释</span><span class="hljs-attr">relay_domains</span>=<span class="hljs-variable">$mydestination</span></code></pre><p>修改权限, 设置开机自启</p><pre><code class="hljs swift">[root@mail~]#chown <span class="hljs-keyword">postfix</span>.<span class="hljs-keyword">postfix</span> -<span class="hljs-type">R</span> /<span class="hljs-keyword">var</span>/lib/<span class="hljs-keyword">postfix</span>/[root@mail~]#chown <span class="hljs-keyword">postfix</span>.<span class="hljs-keyword">postfix</span> /<span class="hljs-keyword">var</span>/spool/ -<span class="hljs-type">R</span>[root@mail~]#systemctl enable <span class="hljs-keyword">postfix</span> [root@mail~]#systemctl restart <span class="hljs-keyword">postfix</span></code></pre><h3 id="测试postfix"><a href="#测试postfix" class="headerlink" title="测试postfix"></a>测试postfix</h3><p>添加postfix邮件用户</p><pre><code class="hljs autoit">[root<span class="hljs-symbol">@mail</span>~]<span class="hljs-meta">#useradd cwl</span>[root<span class="hljs-symbol">@mail</span>~]<span class="hljs-meta">#echo<span class="hljs-string">&quot;000&quot;</span>|passwd --stdin cwl</span></code></pre><p>安装telnet工具</p><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> telnet</code></pre><p>使用telnet工具连接到postfix服务器, 发送邮件</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost yum.repos.d]# telnet mail.ljh.com <span class="hljs-number">25</span>Trying <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>...Connected to mail.ljh.com.Escape character <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;^]&#x27;</span>.<span class="hljs-number">220</span> mail.ljh.com ESMTP Postfix            #连接成功</code></pre><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost yum.repos.d]# telnet mail.ljh.com <span class="hljs-number">25</span>Trying <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>...Connected to mail.ljh.com.Escape character <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;^]&#x27;</span>.<span class="hljs-number">220</span> mail.ljh.com ESMTP Postfix    <span class="hljs-comment">//在下面的终端中-输入-命令与内容</span>mail <span class="hljs-keyword">from</span>:<span class="hljs-symbol">root@</span>testmail.com        <span class="hljs-comment">//发件人</span><span class="hljs-number">250</span> <span class="hljs-number">2.1</span><span class="hljs-number">.0</span> Okrcpt to:cwl            <span class="hljs-comment">//收件人</span><span class="hljs-number">250</span> <span class="hljs-number">2.1</span><span class="hljs-number">.5</span> Okdata        <span class="hljs-comment">//填写邮件</span><span class="hljs-number">354</span> End data with &lt;CR&gt; &lt;LF&gt;.&lt;CR&gt;&lt;LF&gt;hello,<span class="hljs-keyword">this</span> <span class="hljs-keyword">is</span> test mail.    <span class="hljs-comment">//输入邮件内容</span>.        <span class="hljs-comment">//以“.”结束输入</span><span class="hljs-number">250</span> <span class="hljs-number">2.0</span><span class="hljs-number">.0</span> Ok:queued as DC5693000085quit            <span class="hljs-comment">//退出</span><span class="hljs-number">221</span> <span class="hljs-number">2.0</span><span class="hljs-number">.0</span> Bye Connection closed by foreign host.</code></pre><p>查看发送状态</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>mail~]#tail/var/log/maillog |grep sent Oct <span class="hljs-number">607</span>:<span class="hljs-number">20</span>:<span class="hljs-number">12</span> localhost postfix/local[<span class="hljs-number">2755</span>]:DC5693000085:to=&lt;<span class="hljs-symbol">cwl@</span>testmail.com&gt;,orig_to=&lt;cwl&gt;,relay=local,delay=<span class="hljs-number">31</span>,delays=<span class="hljs-number">31</span>/<span class="hljs-number">0.01</span>/<span class="hljs-number">0</span>/<span class="hljs-number">0.02</span>,dsn=<span class="hljs-number">2.0</span><span class="hljs-number">.0</span>,status=sent(deliveredtomaildir)</code></pre><h3 id="安装dovecot"><a href="#安装dovecot" class="headerlink" title="安装dovecot"></a>安装dovecot</h3><pre><code class="hljs cmake">yum -y <span class="hljs-keyword">install</span> dovecot</code></pre><h3 id="配置dovecot"><a href="#配置dovecot" class="headerlink" title="配置dovecot"></a>配置dovecot</h3><pre><code class="hljs gradle">[root@mail~]# vi<span class="hljs-regexp">/etc/</span>dovecot/dovecot.conf#如果不使用IPv6，请修改为*listen=*[root@mail~]# vi<span class="hljs-regexp">/etc/</span>dovecot<span class="hljs-regexp">/conf.d/</span><span class="hljs-number">10</span>-auth.conf#<span class="hljs-number">9</span>行:取消注释并修改#是否允许在沒有SSL/TLS下以明码登录disable_plaintext_auth = no#<span class="hljs-number">97</span>行:添加auth_mechanisms = plain login[root@mail~]# vi<span class="hljs-regexp">/etc/</span>dovecot<span class="hljs-regexp">/conf.d/</span><span class="hljs-number">10</span>-mail.conf#<span class="hljs-number">30</span>行:取消注释并添加mail_location = maildir:~/Maildir[root@mail~]# vi<span class="hljs-regexp">/etc/</span>dovecot<span class="hljs-regexp">/conf.d/</span><span class="hljs-number">10</span>-master.conf#<span class="hljs-number">88</span>-<span class="hljs-number">90</span>行:取消注释并添加Postfix smtp验证unix_listener <span class="hljs-regexp">/var/</span>spool<span class="hljs-regexp">/postfix/</span><span class="hljs-keyword">private</span>/auth&#123;    mode=<span class="hljs-number">0666</span>    user=postfix    <span class="hljs-keyword">group</span>=postfix&#125;</code></pre><p>启动dovecot</p><pre><code class="hljs crmsh">systemctl <span class="hljs-literal">start</span> dovecot</code></pre><h3 id="测试dovecot接收邮件"><a href="#测试dovecot接收邮件" class="headerlink" title="测试dovecot接收邮件"></a>测试dovecot接收邮件</h3><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>localhost yum.repos.d]# telnet mail.ljh.com <span class="hljs-number">110</span>Trying <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>...Connected to mail.ljh.com.Escape character <span class="hljs-keyword">is</span> <span class="hljs-string">&#x27;^]&#x27;</span>.+OK Dovecot ready.user cwl        <span class="hljs-comment">//登录</span>+OKpass <span class="hljs-number">000</span>        <span class="hljs-comment">//密码</span>+OK Logged <span class="hljs-keyword">in</span>.List            <span class="hljs-comment">//邮件列表</span>+OK <span class="hljs-number">1</span> messages:<span class="hljs-number">1</span> <span class="hljs-number">390</span>.    retr <span class="hljs-number">1</span>            <span class="hljs-comment">//输入邮件编号来查看邮件</span>+OK <span class="hljs-number">390</span> octetsReturn-Path: &lt;<span class="hljs-symbol">root@</span>ljh.com&gt;X-Original-To: cwlDelivered-To: <span class="hljs-symbol">cwl@</span>ljh.comReceived: <span class="hljs-keyword">from</span> mail.ljh.com (mail.ljh.com [<span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>])        by mail.ljh.com (Postfix) with SMTP id <span class="hljs-number">3404840</span>AC5C9        <span class="hljs-keyword">for</span> &lt;cwl&gt;; Sat,  <span class="hljs-number">1</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">19</span>:<span class="hljs-number">25</span>:<span class="hljs-number">02</span> +<span class="hljs-number">0800</span> (CST)Message-Id: &lt;<span class="hljs-number">20200801112513.3404840</span><span class="hljs-symbol">AC5C9@</span>mail.ljh.com&gt;Date: Sat,  <span class="hljs-number">1</span> Aug <span class="hljs-number">2020</span> <span class="hljs-number">19</span>:<span class="hljs-number">25</span>:<span class="hljs-number">02</span> +<span class="hljs-number">0800</span> (CST)From: <span class="hljs-symbol">root@</span>ljh.comhello,<span class="hljs-keyword">this</span> <span class="hljs-keyword">is</span> a test mail..quit        <span class="hljs-comment">//退出</span>+OK Logging <span class="hljs-keyword">out</span>.Connection closed by foreign host.</code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Nginx 服务器重启与关闭命令</title>
    <link href="/2020/07/31/Nginx%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E5%90%AF%E4%B8%8E%E5%85%B3%E9%97%AD%E5%91%BD%E5%90%8D/"/>
    <url>/2020/07/31/Nginx%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%87%8D%E5%90%AF%E4%B8%8E%E5%85%B3%E9%97%AD%E5%91%BD%E5%90%8D/</url>
    
    <content type="html"><![CDATA[<h1 id="Nginx-服务器重启与关闭命令"><a href="#Nginx-服务器重启与关闭命令" class="headerlink" title="Nginx 服务器重启与关闭命令"></a>Nginx 服务器重启与关闭命令</h1><blockquote><p>关于nginx的使用的记录</p></blockquote><h2 id="重启-重载"><a href="#重启-重载" class="headerlink" title="重启|重载"></a>重启|重载</h2><p>nginx -s reload ：修改配置后重新加载生效</p><p>nginx -s reopen ：重新打开日志文件<br>nginx -t -c /path/to/nginx.conf 测试nginx配置文件是否正确</p><h2 id="关闭nginx："><a href="#关闭nginx：" class="headerlink" title="关闭nginx："></a>关闭nginx：</h2><p>nginx -s stop :快速停止nginx<br>     quit ：完整有序的停止nginx</p><p>其他的停止nginx 方式：</p><p>ps -ef | grep nginx</p><p>kill -QUIT 主进程号   ：从容停止Nginx<br>kill -TERM 主进程号   ：快速停止Nginx<br>pkill -9 nginx     ：强制停止Nginx</p><h2 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx:"></a>启动nginx:</h2><p>nginx -c /path/to/nginx.conf</p><p>平滑重启nginx：<br>kill -HUP 主进程号</p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>搭建DNS服务器</title>
    <link href="/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <url>/2020/07/31/%E6%90%AD%E5%BB%BADNS%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="搭建DNS服务器"><a href="#搭建DNS服务器" class="headerlink" title="搭建DNS服务器"></a>搭建DNS服务器</h1><h2 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h2><blockquote><p>其中bind-chroot和bind-utils是bind的相关包。</p></blockquote><blockquote><p>bind-chroot是bind的一个功能,使bind可以在一个chroot的模式下运行.也就是说,bind运行时的/(根)目录,并不是系统真正的/(根)目录,只是系统中的一个子目录而已.这样做的目的是为了提高安全性.因为在chroot的模式下,bind可以访问的范围仅限于这个子目录的范围里,无法进一步提升,进入到系统的其他目录中。bind的默认启动方式就是chroot方式。</p></blockquote><blockquote><p>rndc 主要是用来控制named进程及其配置文件的，可以用来连接DNS服务器并对配置进行重新载入，其端口号就是953</p></blockquote><h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><ul><li>使用bind-chroot工具搭建dns服务器</li><li>使用bind-utils工具包进行管理(如nslookup命令)</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>关闭防火墙</li><li>配置yum源</li><li>检查端口是否占用</li></ul><h2 id="DNS各配置文件说明"><a href="#DNS各配置文件说明" class="headerlink" title="DNS各配置文件说明"></a>DNS各配置文件说明</h2><p>DNS相关的配置文件位置</p><pre><code class="hljs fortran">[root@pxe yum<span class="hljs-number">.</span>repos<span class="hljs-number">.</span>d]# cat /etc/<span class="hljs-keyword">named</span><span class="hljs-keyword">named</span>/               <span class="hljs-keyword">named</span>-chroot<span class="hljs-number">.</span>files   <span class="hljs-keyword">named</span><span class="hljs-number">.</span>conf           <span class="hljs-keyword">named</span><span class="hljs-number">.</span>iscdlv<span class="hljs-number">.</span>key     <span class="hljs-keyword">named</span><span class="hljs-number">.</span>rfc1912<span class="hljs-number">.</span>zones  <span class="hljs-keyword">named</span><span class="hljs-number">.</span>root<span class="hljs-number">.</span>key</code></pre><p>模板文件位置(一般不用,直接使用主配置文件):/usr/share/doc/bind-9.11.4/named.conf.default或/usr/share/doc/bind-9.11.4/sample/里</p><p>主配置文件：/etc/named.conf（服务器运行参数）*chroot模式下还可以写在/var/named/chroot/etc/named.conf</p><p><img src="http://img.ljh666.xyz/img/20200731204826.png"></p><p>区域配置文件：/etc/named.rfc1912.zones（服务器解析的区域配置，正反向区域定义信息）</p><p><img src="http://img.ljh666.xyz/img/20200731204935.png"></p><p><img src="http://img.ljh666.xyz/img/20200731213647.png"></p><p>数据配置文件：/var/named/xx.xx（主机名和IP地址的对应解析关系，及主从同步信息）</p><p><img src="http://img.ljh666.xyz/img/20200731205001.png"></p><p><img src="http://img.ljh666.xyz/img/20200731214505.png"></p><h2 id="开始安装DNS"><a href="#开始安装DNS" class="headerlink" title="开始安装DNS"></a>开始安装DNS</h2><pre><code class="hljs perl">yum -<span class="hljs-keyword">y</span> install <span class="hljs-keyword">bind</span>-<span class="hljs-keyword">chroot</span> <span class="hljs-keyword">bind</span>-utils</code></pre><p>此命令可以查询已安装的包的内容</p><pre><code class="hljs perl">rpm -ql <span class="hljs-keyword">bind</span>-<span class="hljs-keyword">chroot</span></code></pre><h3 id="修改主配置文件"><a href="#修改主配置文件" class="headerlink" title="修改主配置文件"></a>修改主配置文件</h3><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>named.conf</code></pre><pre><code class="hljs routeros">12 options &#123; 13         listen-on<span class="hljs-built_in"> port </span>53 &#123; any; &#125;; #修改为any 14         listen-on-v6<span class="hljs-built_in"> port </span>53 &#123; ::1; &#125;; 15         directory       <span class="hljs-string">&quot;/var/named&quot;</span>; 16         dump-file       <span class="hljs-string">&quot;/var/named/data/cache_dump.db&quot;</span>; 17         statistics-file <span class="hljs-string">&quot;/var/named/data/named_stats.txt&quot;</span>; 18         memstatistics-file <span class="hljs-string">&quot;/var/named/data/named_mem_stats.txt&quot;</span>; 19         recursing-file  <span class="hljs-string">&quot;/var/named/data/named.recursing&quot;</span>; 20         secroots-file   <span class="hljs-string">&quot;/var/named/data/named.secroots&quot;</span>; 21         allow-query     &#123; any; &#125;;  #修改为any 22</code></pre><p>*如果配置的是chroot的主配置文件,记得给权限(本文配置不需要)</p><pre><code class="hljs awk">chownnamed<span class="hljs-regexp">/var/</span>named<span class="hljs-regexp">/chroot/</span>etc/named.conf</code></pre><h3 id="配置区域文件"><a href="#配置区域文件" class="headerlink" title="配置区域文件"></a>配置区域文件</h3><p>先备份区域配置的模板文件</p><pre><code class="hljs stylus">cp -<span class="hljs-selector-tag">p</span> /etc/named<span class="hljs-selector-class">.rfc1912</span><span class="hljs-selector-class">.zones</span> /etc/named<span class="hljs-selector-class">.rfc1912</span><span class="hljs-selector-class">.zones</span><span class="hljs-selector-class">.bak</span>        #-p参数可以保存文件原来的属性</code></pre><p>删除其他区域,只留<strong>正向</strong>和<strong>反向</strong>的各一个模板</p><p>配置如下</p><pre><code class="hljs routeros">zone <span class="hljs-string">&quot;ljh.com&quot;</span> <span class="hljs-keyword">IN</span> &#123;       <span class="hljs-built_in"> type </span>master;        file <span class="hljs-string">&quot;named.localhost&quot;</span>;        allow-update &#123; none; &#125;;&#125;;zone <span class="hljs-string">&quot;10.10.10.in-addr.arpa&quot;</span> <span class="hljs-keyword">IN</span> &#123;     #表示10.10.10.0网段的反向解析区域       <span class="hljs-built_in"> type </span>master;        file <span class="hljs-string">&quot;named.loopback&quot;</span>;        allow-update &#123; none; &#125;;&#125;;</code></pre><h3 id="配置数据文件"><a href="#配置数据文件" class="headerlink" title="配置数据文件"></a>配置数据文件</h3><p>同样也是要备份好模板文件</p><pre><code class="hljs stylus">cp -<span class="hljs-selector-tag">p</span> named<span class="hljs-selector-class">.localhost</span> named<span class="hljs-selector-class">.localhost</span>.bakcp -<span class="hljs-selector-tag">p</span> named<span class="hljs-selector-class">.loopback</span> named<span class="hljs-selector-class">.loopback</span>.bak</code></pre><p>正向解析数据文件</p><pre><code class="hljs angelscript">$TTL <span class="hljs-number">1</span>D@       IN SOA  ljh.com. mail.qq.com. ( #前面为域, 后面为管理员邮箱(两个都要写上), 不要忘记域名后面的点                                        <span class="hljs-number">0</span>       ; serial                                        <span class="hljs-number">1</span>D      ; <span class="hljs-built_in">ref</span>resh                                        <span class="hljs-number">1</span>H      ; retry                                        <span class="hljs-number">1</span>W      ; expire                                        <span class="hljs-number">3</span>H )    ; minimum        NS      ns1.ljh.com.        #表示有该域有两个域名服务器, 其中一个不在该域内        NS      ns1.ljh.net.ns1     A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>www     A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>        AAAA    ::<span class="hljs-number">1</span></code></pre><p>反向解析数据文件</p><pre><code class="hljs angelscript">@       IN SOA  ljh.com. mail.qq.com. (                                        <span class="hljs-number">0</span>       ; serial                                        <span class="hljs-number">1</span>D      ; <span class="hljs-built_in">ref</span>resh                                        <span class="hljs-number">1</span>H      ; retry                                        <span class="hljs-number">1</span>W      ; expire                                        <span class="hljs-number">3</span>H )    ; minimum        NS      ns1.ljh.com.    # 同样也要写上域名服务器ns1     A       <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>        AAAA    ::<span class="hljs-number">1</span><span class="hljs-number">12</span>      PTR     www.ljh.com.    # 三条指针记录<span class="hljs-number">12</span>      PTR     ljh.com.<span class="hljs-number">20</span>      PTR     bbs.ljh.com.</code></pre><p>启动DNS服务器</p><pre><code class="hljs angelscript">[<span class="hljs-symbol">root@</span>pxe named]# systemctl start named[<span class="hljs-symbol">root@</span>pxe named]# netstat -antp | grep <span class="hljs-number">53</span>tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">953</span>           <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*               LISTEN      <span class="hljs-number">16444</span>/named         tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">100.100</span><span class="hljs-number">.100</span><span class="hljs-number">.111</span>:<span class="hljs-number">53</span>      <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*               LISTEN      <span class="hljs-number">16444</span>/named         tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>:<span class="hljs-number">53</span>          <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*               LISTEN      <span class="hljs-number">16444</span>/named         tcp        <span class="hljs-number">0</span>      <span class="hljs-number">0</span> <span class="hljs-number">127.0</span><span class="hljs-number">.0</span><span class="hljs-number">.1</span>:<span class="hljs-number">53</span>            <span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>:*               LISTEN      <span class="hljs-number">16444</span>/named         tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> ::<span class="hljs-number">1</span>:<span class="hljs-number">953</span>                 :::*                    LISTEN      <span class="hljs-number">16444</span>/named         tcp6       <span class="hljs-number">0</span>      <span class="hljs-number">0</span> ::<span class="hljs-number">1</span>:<span class="hljs-number">53</span>                  :::*                    LISTEN      <span class="hljs-number">16444</span>/named</code></pre><p>*<strong>注意</strong> 数据文件写域名的时候不要忘记域名后面的点</p><p>*可以使用bind基本命令重载主配置文件和区域解析库文件</p><pre><code class="hljs css"><span class="hljs-selector-attr">[root@masternamed]</span><span class="hljs-selector-id">#rndc</span> <span class="hljs-selector-tag">reload</span><span class="hljs-selector-attr">[root@masternamed]</span><span class="hljs-selector-id">#rndc</span> <span class="hljs-selector-tag">reload</span> <span class="hljs-selector-tag">ljh</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-attr">[root@masternamed]</span><span class="hljs-selector-id">#rndc</span> <span class="hljs-selector-tag">notify</span> <span class="hljs-selector-tag">ljh</span><span class="hljs-selector-class">.com</span><span class="hljs-selector-attr">[root@masternamed]</span><span class="hljs-selector-id">#rndc</span> <span class="hljs-selector-tag">reconfig</span></code></pre><h2 id="测试DNS服务器"><a href="#测试DNS服务器" class="headerlink" title="测试DNS服务器"></a>测试DNS服务器</h2><h3 id="测试机配置"><a href="#测试机配置" class="headerlink" title="测试机配置"></a>测试机配置</h3><pre><code class="hljs awk">vim <span class="hljs-regexp">/etc/</span>resolv.conf</code></pre><pre><code class="hljs yaml"><span class="hljs-comment"># Generated by NetworkManager</span><span class="hljs-string">search</span> <span class="hljs-string">localdomain</span><span class="hljs-string">nameserver</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span>    <span class="hljs-comment">#修改为DNS服务器的地址</span></code></pre><h3 id="正反向验证"><a href="#正反向验证" class="headerlink" title="正反向验证"></a>正反向验证</h3><pre><code class="hljs yaml">[<span class="hljs-string">root@pxe</span> <span class="hljs-string">named</span>]<span class="hljs-comment"># nslookup www.ljh.com</span><span class="hljs-attr">Server:</span>         <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-attr">Address:</span>        <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-comment">#53</span><span class="hljs-attr">Name:</span>   <span class="hljs-string">www.ljh.com</span><span class="hljs-attr">Address:</span> <span class="hljs-number">10.10</span><span class="hljs-number">.10</span><span class="hljs-number">.12</span><span class="hljs-attr">Name:</span>   <span class="hljs-string">www.ljh.com</span><span class="hljs-attr">Address:</span> <span class="hljs-string">::1</span>[<span class="hljs-string">root@pxe</span> <span class="hljs-string">named</span>]<span class="hljs-comment"># nslookup 10.10.10.12</span><span class="hljs-number">12.10</span><span class="hljs-number">.10</span><span class="hljs-number">.10</span><span class="hljs-string">.in-addr.arpa</span>        <span class="hljs-string">name</span> <span class="hljs-string">=</span> <span class="hljs-string">ljh.com.</span><span class="hljs-number">12.10</span><span class="hljs-number">.10</span><span class="hljs-number">.10</span><span class="hljs-string">.in-addr.arpa</span>        <span class="hljs-string">name</span> <span class="hljs-string">=</span> <span class="hljs-string">www.ljh.com.</span></code></pre><p>干杯~🍺</p><h2 id="写在最后"><a href="#写在最后" class="headerlink" title="写在最后"></a>写在最后</h2><p><a href="https://www.cnblogs.com/cobbliu/archive/2013/03/19/2970311.html">对数据文件配置的详解</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安装samba的注意事项</title>
    <link href="/2020/07/31/%E5%AE%89%E8%A3%85samba%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
    <url>/2020/07/31/%E5%AE%89%E8%A3%85samba%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
    
    <content type="html"><![CDATA[<h2 id="安装samba的注意事项"><a href="#安装samba的注意事项" class="headerlink" title="安装samba的注意事项"></a>安装samba的注意事项</h2><p>组成Samba运行的有两个服务，一个是SMB，另一个是NMB；SMB是Samba 的核心启动服务，主要负责建立 Linux Samba服务器与Samba客户机之间的对话， 验证用户身份并提供对文件和打印系统的访问，只有SMB服务启动，才能实现文件的共享，监听139 TCP端口；而NMB服务是负责解析用的，类似与DNS实现的功能，NMB可以把Linux系统共享的工作组名称与其IP对应起来，如果NMB服务没有启动，就只能通过IP来访问共享文件，监听137和138 UDP端口。</p><p>安装命令</p><pre><code class="hljs sql">yum <span class="hljs-keyword">install</span> samba samba-<span class="hljs-keyword">client</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器制作RAID磁盘阵列与管理</title>
    <link href="/2020/07/31/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%B6%E4%BD%9CRAID%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97%E5%B9%B6%E7%AE%A1%E7%90%86/"/>
    <url>/2020/07/31/%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%88%B6%E4%BD%9CRAID%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97%E5%B9%B6%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<h1 id="服务器制作RAID磁盘阵列与管理"><a href="#服务器制作RAID磁盘阵列与管理" class="headerlink" title="服务器制作RAID磁盘阵列与管理"></a>服务器制作RAID磁盘阵列与管理</h1><h2 id="知识扫盲"><a href="#知识扫盲" class="headerlink" title="知识扫盲"></a>知识扫盲</h2><blockquote><p>Linux系统上的/proc目录是一种文件系统，即proc文件系统。与其它常见的文件系统不同的是，/proc是一种伪文件系统（也即虚拟文件系统），存储的是当前内核运行状态的一系列特殊文件，用户可以通过这些文件查看有关系统硬件及当前正在运行进程的信息，甚至可以通过更改其中某些文件来改变内核的运行状态。</p></blockquote><blockquote><p>base源：解决rpm依赖性关系<br>epel源：Extra Packages for Enterprise Linux的缩写，包含许多基源没有软件，仍然保留base源的好处</p></blockquote><blockquote><p>当系统中不存在配置文件/etc/mdadm.conf、/etc/mdadm/mdadm.conf时，系统启动时，md驱动会自动查找分区为FD格式的磁盘。所以一般会使用fdisk工具将hd磁盘和sd磁盘分区，再设置为FD的磁盘分区。因此假如直接使用/dev/sda、/dev/sdb创建RAID，系统重启后，不会重组该RAID。</p></blockquote><h2 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h2><h3 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h3><p>添加4块20G硬盘</p><h3 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h3><p>配置阿里base源与epel源</p><p>下载mdadm工具</p><h3 id="校验"><a href="#校验" class="headerlink" title="校验"></a>校验</h3><pre><code class="hljs ebnf"><span class="hljs-attribute">lsblk</span></code></pre><h2 id="配置Raid-0阵列"><a href="#配置Raid-0阵列" class="headerlink" title="配置Raid 0阵列"></a>配置Raid 0阵列</h2><h3 id="创建阵列"><a href="#创建阵列" class="headerlink" title="创建阵列"></a>创建阵列</h3><p>命令解析：</p><ul><li><p>-C v：创建设备，并显示信息。</p></li><li><p>-l 0：RAID的等级为RAID0。</p></li><li><p>-n 2：使用两块硬盘创建RAID。</p></li></ul><pre><code class="hljs awk">mdadm -C -v <span class="hljs-regexp">/dev/m</span>d0 -l <span class="hljs-number">0</span> -n <span class="hljs-number">2</span> <span class="hljs-regexp">/dev/</span>sdb <span class="hljs-regexp">/dev/</span>sdc</code></pre><pre><code class="hljs awk">cat <span class="hljs-regexp">/proc/m</span>dstatmdadm -Dsmdadm -D <span class="hljs-regexp">/dev/m</span>d0mdadm -Ds&gt;&gt;<span class="hljs-regexp">/etc/m</span>dadm.conf  <span class="hljs-comment">#系统重启后需要读取的Raid配置文件来加载Raid阵列</span>mkfs.xfs <span class="hljs-regexp">/dev/m</span>d0mkdir /raid0mount <span class="hljs-regexp">/dev/m</span>d0 /raid0df -Th /raid0                <span class="hljs-comment"># 参数T显示文件系统格式</span>blkid <span class="hljs-regexp">/dev/m</span>d0echo <span class="hljs-string">&quot;UUID=8eafdcb6-d46a-430a-8004-d58a68dc0751/raid0 xfs defaults 0 0&quot;</span>&gt;&gt;<span class="hljs-regexp">/etc/</span>fstab</code></pre><h3 id="删除阵列"><a href="#删除阵列" class="headerlink" title="删除阵列"></a>删除阵列</h3><pre><code class="hljs apache"><span class="hljs-attribute">umount</span> /raid<span class="hljs-number">0</span><span class="hljs-attribute">mdadm</span> -S /dev/md<span class="hljs-number">0</span><span class="hljs-attribute">rm</span> -rf  /etc/mdadm.conf<span class="hljs-attribute">rm</span> -rf /raid<span class="hljs-number">0</span><span class="hljs-attribute">mdadm</span> --zero-superblock /dev/sdb<span class="hljs-attribute">mdadm</span> --zero-superblock /dev/sdc<span class="hljs-attribute">vim</span> /etc/fstab<span class="hljs-attribute">UUID</span>=<span class="hljs-number">8</span>eafdcb<span class="hljs-number">6</span>-d<span class="hljs-number">46</span>a-<span class="hljs-number">430</span>a-<span class="hljs-number">8004</span>-d<span class="hljs-number">58</span>a<span class="hljs-number">68</span>dc<span class="hljs-number">0751</span>/raid<span class="hljs-number">0</span> xfs defaults <span class="hljs-number">0</span> <span class="hljs-number">0</span> #删除此行</code></pre><h2 id="配置Raid-5阵列"><a href="#配置Raid-5阵列" class="headerlink" title="配置Raid 5阵列"></a>配置Raid 5阵列</h2><h3 id="创建阵列-1"><a href="#创建阵列-1" class="headerlink" title="创建阵列"></a>创建阵列</h3><ul><li>–spare-devices=1 设置Raid 5中备有磁盘数目为1</li></ul><pre><code class="hljs awk">mdadm -Cv <span class="hljs-regexp">/dev/m</span>d5 -l <span class="hljs-number">5</span> -n <span class="hljs-number">3</span> <span class="hljs-regexp">/dev/</span>sdb <span class="hljs-regexp">/dev/</span>sdc <span class="hljs-regexp">/dev/</span>sdd --spare-devices=<span class="hljs-number">1</span> <span class="hljs-regexp">/dev/</span>sde</code></pre><pre><code class="hljs awk">mdadm -D <span class="hljs-regexp">/dev/m</span>d5mdadm -Ds&gt;&gt;<span class="hljs-regexp">/etc/m</span>dadm.conf  <span class="hljs-comment">#系统重启后需要读取的Raid配置文件来加载Raid阵列</span></code></pre><p>模拟故障</p><pre><code class="hljs awk">mdadm -f <span class="hljs-regexp">/dev/m</span>d5 <span class="hljs-regexp">/dev/</span>sdb        <span class="hljs-comment"># 强制制造故障</span>mdadm -D <span class="hljs-regexp">/dev/m</span>d5mdadm -r <span class="hljs-regexp">/dev/m</span>d5 <span class="hljs-regexp">/dev/</span>sdb        <span class="hljs-comment"># 移除故障的硬盘</span>mdadm --add <span class="hljs-regexp">/dev/m</span>d5 <span class="hljs-regexp">/dev/</span>sdb    <span class="hljs-comment"># 添加新的硬盘</span>mdadm -D <span class="hljs-regexp">/dev/m</span>d5</code></pre><pre><code class="hljs awk">mkfs.xfs <span class="hljs-regexp">/dev/m</span>d5mount <span class="hljs-regexp">/dev/m</span>d5 /mntdf -h</code></pre><h3 id="删除阵列-1"><a href="#删除阵列-1" class="headerlink" title="删除阵列"></a>删除阵列</h3><pre><code class="hljs awk">umount <span class="hljs-regexp">/dev/m</span>d5df -hmdadm -S <span class="hljs-regexp">/dev/m</span>d5rm -rf  <span class="hljs-regexp">/etc/m</span>dadm.confrm -rf /raid5mdadm -zero-superblock <span class="hljs-regexp">/dev/</span>sdbmdadm -zero-superblock <span class="hljs-regexp">/dev/</span>sdcmdadm -zero-superblock <span class="hljs-regexp">/dev/</span>sdemdadm -zero-superblock <span class="hljs-regexp">/dev/</span>sddvim <span class="hljs-regexp">/etc/</span>fstabUUID=<span class="hljs-number">8</span>eafdcb6-d46a-<span class="hljs-number">430</span>a-<span class="hljs-number">8004</span>-d58a68dc0751/raid0 xfs defaults <span class="hljs-number">0</span> <span class="hljs-number">0</span> <span class="hljs-comment">#删除此行</span></code></pre>]]></content>
    
    
    
    <tags>
      
      <tag>云计算中级</tag>
      
      <tag>Linux</tag>
      
      <tag>Centos</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>图床测试</title>
    <link href="/2020/07/31/%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE/"/>
    <url>/2020/07/31/%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="图床测试"><a href="#图床测试" class="headerlink" title="图床测试"></a>图床测试</h1><p><img src="http://img.ljh666.xyz/img/vino-li-DpaDxjOq2c4-unsplash.jpg" alt="test"></p>]]></content>
    
    
    
    <tags>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Centos上安装HEXO的详细教程</title>
    <link href="/2020/07/30/%E5%9C%A8Centos%E4%B8%8A%E5%AE%89%E8%A3%85HEXO%E7%9A%84%E6%95%99%E7%A8%8B/"/>
    <url>/2020/07/30/%E5%9C%A8Centos%E4%B8%8A%E5%AE%89%E8%A3%85HEXO%E7%9A%84%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="在Centos上安装HEXO的超详细教程-小白也能用"><a href="#在Centos上安装HEXO的超详细教程-小白也能用" class="headerlink" title="在Centos上安装HEXO的超详细教程 小白也能用"></a>在Centos上安装HEXO的超详细教程 小白也能用</h1><h2 id="Hexo介绍"><a href="#Hexo介绍" class="headerlink" title="Hexo介绍"></a>Hexo介绍</h2><p>Hexo 是台湾国人开发, 具有Node.js带来的超快生成速度, 几秒内就可以完成百个页面的渲染, 同时支持Markdown文件, 适合写技术Blog</p><h2 id="安装前提"><a href="#安装前提" class="headerlink" title="安装前提"></a>安装前提</h2><ol><li>Node.js(建议12.0及以上)</li><li>Git</li><li>配置好yum的centos7服务器</li></ol><h3 id="安装Git-确保配置好了yum源"><a href="#安装Git-确保配置好了yum源" class="headerlink" title="安装Git(确保配置好了yum源)"></a>安装Git(确保配置好了yum源)</h3><p>使用yum安装<strong>git-core</strong> 会有点慢</p><pre><code class="hljs shell">yum -y install git-core</code></pre><p>顺带安装可能用到的工具</p><pre><code class="hljs shell">yum -y install gcc gcc-c++ curl wget vim</code></pre><p>为什么要首先要安装 git？ 因为 Hexo 开源且基于 Node.js 环境，所以大量主题和设置需要通过 git 完成</p><h3 id="Git的clone下载过慢"><a href="#Git的clone下载过慢" class="headerlink" title="Git的clone下载过慢"></a>Git的clone下载过慢</h3><p>后面一下操作需要用到clone命令, 可以通过修改/etc/hosts文件来提高一点下载速度(也只有几十kb😩), 目前测试有效</p><pre><code class="hljs shell"><span class="hljs-meta">#</span><span class="bash"> Github</span>204.232.175.78 http://documentcloud.github.com207.97.227.239 http://github.com204.232.175.94 http://gist.github.com107.21.116.220 http://help.github.com207.97.227.252 http://nodeload.github.com199.27.76.130 http://raw.github.com107.22.3.110 http://status.github.com204.232.175.78 http://training.github.com207.97.227.243 http://www.github.com207.97.227.243 https://www.github.com</code></pre><h3 id="安装Node-js-必装"><a href="#安装Node-js-必装" class="headerlink" title="安装Node.js(必装)"></a>安装Node.js(必装)</h3><h4 id="安装前的知识补充"><a href="#安装前的知识补充" class="headerlink" title="安装前的知识补充"></a>安装前的知识补充</h4><p>Node.js就是JavaScript的运行环境, 类似于java的运行环境jdk</p><p>nvm是Node.js的版本控制工具</p><p>npm是Node.js的包管理工具(你也可以使用开源的cnpm工具)</p><p>附: 淘宝的Node.js下载库地址(本文不需要用到)</p><pre><code class="hljs shell">https://npm.taobao.org/mirrors/node/</code></pre><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><p>这里我使用nvm来安装node.js</p><p>第一步,下载nvm控制器</p><pre><code class="hljs shell">git clone https://github.com/cnpm/nvm.git  # 克隆nvm库到本地cd nvm   # 进入nvm目录sh ./install.sh  # 安装nvmsource $HOME/nvm/nvm.sh   # 加载nvm的运行环境, 如果不加载,后面的命令就无法使用,后面会教你怎么样不用每次都加载一遍</code></pre><p>第二部, 用nvm下载node.js</p><pre><code class="hljs shell">nvm ls-remote    # 查看可用版本的命令nvm install v12.0.0   #安装 12.0.0版本的node.jsnvm use v12.0.0     #选择使用刚才安装的版本</code></pre><h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>npm是随同NodeJS一起安装的, 我们可以直接使用</p><pre><code class="hljs shell">npm install -g hexo --save  # 安装hexo模块</code></pre><p>–save、-S参数意思是把模块的版本信息保存到dependencies（生产环境依赖）中，即你的package.json文件的dependencies字段中</p><p>-g 全局安装</p><p>本地安装</p><ol><li>将安装包放在 ./node_modules 下（运行 npm 命令时所在的目录），如果没有 node_modules 目录，会在当前执行 npm 命令的目录下生成 node_modules 目录。</li><li>可以通过 require() 来引入本地安装的包。</li></ol><p>全局安装</p><ol><li>将安装包放在 /usr/local 下或者你 node 的安装目录。</li><li>可以直接在命令行里使用。</li></ol><p>部署hexo</p><pre><code class="hljs shell">mkdir /home/wwwroot    # 创建用来存储hexo生成的网站的文件夹hexo init /home/wwwroot  # 初始化文件夹</code></pre><p>配置hexo</p><pre><code class="hljs shell">cd /home/wwwrootls</code></pre><p>可以看到hexo产生的文件</p><pre><code class="hljs shell">[root@localhost wwwroot]# ls_config.yml   package.json       scaffolds  themesnode_modules  package-lock.json  source</code></pre><p>几个重要文件:</p><ul><li>_config.yml配置文件</li><li>themes主题文件夹</li><li>source存放网站素材的地方</li></ul><pre><code class="hljs shell">vim _config.yml  #编辑配置文件</code></pre><p>至于配置文件中每个配置项目的意思可以参考官方文档<a href="https://hexo.io/zh-cn/docs/configuration">https://hexo.io/zh-cn/docs/configuration</a></p><blockquote><p><strong>网站项</strong></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th></tr></thead><tbody><tr><td align="left"><code>title</code></td><td align="left">网站标题</td></tr><tr><td align="left"><code>subtitle</code></td><td align="left">网站副标题</td></tr><tr><td align="left"><code>description</code></td><td align="left">网站描述</td></tr><tr><td align="left"><code>keywords</code></td><td align="left">网站的关键词。支援多个关键词。</td></tr><tr><td align="left"><code>author</code></td><td align="left">您的名字</td></tr><tr><td align="left"><code>language</code></td><td align="left">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的<strong>主题的文档</strong>自行设置，常见的有 <code>zh-Hans</code>和 <code>zh-CN</code>。</td></tr><tr><td align="left"><code>timezone</code></td><td align="left">网站时区。Hexo 默认使用您电脑的时区。请参考 <a href="https://en.wikipedia.org/wiki/List_of_tz_database_time_zones">时区列表</a> 进行设置，如 <code>America/New_York</code>, <code>Japan</code>, 和 <code>UTC</code> 。一般的，对于中国大陆地区可以使用 <code>Asia/Shanghai</code>。</td></tr></tbody></table><blockquote><p><strong>网址项</strong></p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>url</code></td><td align="left">网址</td><td align="left"></td></tr><tr><td align="left"><code>root</code></td><td align="left">网站根目录</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">文章的 <a href="https://hexo.io/zh-cn/docs/permalinks">永久链接</a> 格式</td><td align="left"><code>:year/:month/:day/:title/</code></td></tr><tr><td align="left"><code>permalink_defaults</code></td><td align="left">永久链接中各部分的默认值</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls</code></td><td align="left">改写 <a href="https://hexo.io/zh-cn/docs/variables"><code>permalink</code></a> 的值来美化 URL</td><td align="left"></td></tr><tr><td align="left"><code>pretty_urls.trailing_index</code></td><td align="left">是否在永久链接中保留尾部的 <code>index.html</code>，设置为 <code>false</code> 时去除</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>pretty_urls.trailing_html</code></td><td align="left">是否在永久链接中保留尾部的 <code>.html</code>, 设置为 <code>false</code> 时去除 (<em>对尾部的 <code>index.html</code>无效</em>)</td><td align="left"><code>true</code></td></tr></tbody></table><h2 id="修改hexo主题"><a href="#修改hexo主题" class="headerlink" title="修改hexo主题"></a>修改hexo主题</h2><blockquote><p>这里用fluid主题举例子</p></blockquote><p>fluid主题的git地址:<a href="https://github.com/fluid-dev/hexo-theme-fluid">https://github.com/fluid-dev/hexo-theme-fluid</a></p><p>下载主题(网络原因,这个时间可能会有点长⌛)</p><pre><code class="hljs shell">cd /home/wwwroot/themes            # 进入主题目录git clone https://github.com/fluid-dev/hexo-theme-fluid fluid                                                               #  克隆主题库并且改名为fluidls                              # 查看下载的主题</code></pre><p>引用主题</p><pre><code class="hljs shell">vim /home/wwwroot/_config.xml    #修改默认主题为fluid</code></pre><pre><code class="hljs shell"> 85 updated_option: &#x27;mtime&#x27; 86  87 # Pagination 88 ## Set per_page to 0 to disable pagination 89 per_page: 10 90 pagination_dir: page 91  92 # Include / Exclude file(s) 93 ## include:/exclude: options only apply to the &#x27;source/&#x27; folder 94 include: 95 exclude: 96 ignore: 97  98 # Extensions 99 ## Plugins: https://hexo.io/plugins/100 ## Themes: https://hexo.io/themes/101 theme: fluid    #修改为我们克隆的主题的文件夹名字102 103 # Deployment104 ## Docs: https://hexo.io/docs/deployment.html105 deploy:106   type: &#x27;&#x27;</code></pre><p>按一下esc,在输入:后,输入wq,回车,即可保存并退出</p><h2 id="启动Hexo"><a href="#启动Hexo" class="headerlink" title="启动Hexo"></a>启动Hexo</h2><pre><code class="hljs shell">hexo new &quot;This is a test page&quot; # 新建一个网页页面,会在/home/wwwroot/source/_posts/中生成对应md文件, 你可以自己在其中书写内容hexo g      #使用hexo生成网页hexo c      #清除hexo的配置(常用在修改主题,网站配置后, 修改网页内容一般不用)</code></pre><p>我通常的通过上传md文件, 再用hexo g命令重新生成页面来实现文章的上传</p><p>我们来看一下hexo new “This is a test page”生成的md文件内容</p><pre><code class="hljs shell">[root@localhost themes]# cat /home/wwwroot/source/_posts/test.md---title: testdate: 2020-07-30 18:52:31tags:---</code></pre><p>所以, 我们只要在写md的时候加入上面的头部格式就可以了</p><h2 id="使用nginx发布Hexo生成的网页"><a href="#使用nginx发布Hexo生成的网页" class="headerlink" title="使用nginx发布Hexo生成的网页"></a>使用nginx发布Hexo生成的网页</h2><p>前面我们已经使用Hexo生成了静态网页</p><p>现在我们需要将它发布到网上,  这里我使用的是nginx服务器, 你也可以使用apache服务器</p><pre><code class="hljs shell">yum -y install nginx</code></pre><p>然后我们修改nginx服务器的网站根目录为/home/wwwroot/public</p><pre><code class="hljs shell">vim /etc/nginx/nginx.conf    #不同版本的nignx主配置文件位置可能不同</code></pre><pre><code class="hljs shell">31     default_type        application/octet-stream;32 33     # Load modular configuration files from the /etc/nginx/conf.d directory.34     # See http://nginx.org/en/docs/ngx_core_module.html#include35     # for more information.36     include /etc/nginx/conf.d/*.conf;37 38     server &#123;39         listen       80 default_server;40         listen       [::]:80 default_server;41         server_name  _;42         root         /home/wwwroot/public/;   #修改这里43 44         # Load configuration files for the default server block.45         include /etc/nginx/default.d/*.conf;46 47         location / &#123;48         &#125;49 50         error_page 404 /404.html;51             location = /40x.html &#123;52         &#125;53</code></pre><p>按一下esc,在输入:后,输入wq,回车,即可保存并退出</p><p><strong>下面是重点内容:</strong></p><p>要想nginx被外网访问需要关闭firewalld防火墙, 关闭selinux(有些服务器厂商一般默认关闭), 如果你购买的是阿里云这些服务器, 需要设置阿里云自己的防火墙, 开放其中的80端口, 否则无法被访问到</p><p>关闭firewalld并清空防火墙规则</p><pre><code class="hljs shell">systemctl stop firewalldsystemctl disable firewalldiptables -Fiptables -Xiptables -Z</code></pre><p>关闭selinux</p><pre><code class="hljs shell">setenforce 0</code></pre><p>永久关闭要修改文件</p><pre><code class="hljs shell">vim /etc/sysconfig/selinux</code></pre><pre><code class="hljs shell"> 1  2 # This file controls the state of SELinux on the system. 3 # SELINUX= can take one of these three values: 4 #     enforcing - SELinux security policy is enforced. 5 #     permissive - SELinux prints warnings instead of enforcing. 6 #     disabled - No SELinux policy is loaded. 7 SELINUX=disabled   #修改为disabled,重启有效 8 # SELINUXTYPE= can take one of three values: 9 #     targeted - Targeted processes are protected,10 #     minimum - Modification of targeted policy. Only selected processes are protected. 11 #     mls - Multi Level Security protection.12 SELINUXTYPE=targeted13 14</code></pre><p>好了,现在启动nginx</p><pre><code class="hljs shell">systemctl start nginx</code></pre><p>通过ip地址或者域名就可以访问到你的Blog网站啦</p><p><img src="https://i.loli.net/2020/07/30/Q4yT96aFzpYwrRs.png" alt="hexo安装成功"></p><h2 id="至此-Hexo已经安装完成-享受Hexo吧"><a href="#至此-Hexo已经安装完成-享受Hexo吧" class="headerlink" title="至此, Hexo已经安装完成,享受Hexo吧"></a>至此, Hexo已经安装完成,享受Hexo吧</h2>]]></content>
    
    
    
    <tags>
      
      <tag>Centos</tag>
      
      <tag>Blog</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ASCCII表</title>
    <link href="/2020/07/29/ASCCII%E8%A1%A8/"/>
    <url>/2020/07/29/ASCCII%E8%A1%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="ASCCII表"><a href="#ASCCII表" class="headerlink" title="ASCCII表"></a>ASCCII表</h1><hr><h2 id="经常要用到-这里直接截取下来了好对照使用"><a href="#经常要用到-这里直接截取下来了好对照使用" class="headerlink" title="经常要用到, 这里直接截取下来了好对照使用"></a>经常要用到, 这里直接截取下来了好对照使用</h2><p><img src="https://i.loli.net/2020/07/30/KDtyOGlWVN1a9Ac.png" alt="ASCCII码表"></p>]]></content>
    
    
    
    <tags>
      
      <tag>CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>今天学校广场晒太阳</title>
    <link href="/2020/01/07/%E4%BB%8A%E5%A4%A9%E5%B9%BF%E5%9C%BA%E6%99%92%E5%A4%AA%E9%98%B3/"/>
    <url>/2020/01/07/%E4%BB%8A%E5%A4%A9%E5%B9%BF%E5%9C%BA%E6%99%92%E5%A4%AA%E9%98%B3/</url>
    
    <content type="html"><![CDATA[<h1 id="今天学校广场晒太阳"><a href="#今天学校广场晒太阳" class="headerlink" title="今天学校广场晒太阳"></a>今天学校广场晒太阳</h1><p>闲来无趣。</p><p>山气日夕佳,飞鸟相与还。</p><p><img src="https://i.loli.net/2021/02/25/TeY8c2uFJjayxEs.png"></p><p><img src="https://i.loli.net/2021/02/25/XUiJemI46yLvlpq.png"></p><p><img src="https://i.loli.net/2021/02/25/b4Bp2EAmPgdfaes.png"></p><p>夕阳连积水,边色满秋空。</p><p><img src="C:\Users\SX\AppData\Roaming\Typora\typora-user-images\image-20210225130329465.png" alt="image-20210225130329465"></p><p>走了，吃饭去</p><p><img src="https://i.loli.net/2021/02/25/GFsPYKpjkHCyATr.png"></p>]]></content>
    
    
    <categories>
      
      <category>个人</category>
      
    </categories>
    
    
    <tags>
      
      <tag>个人</tag>
      
      <tag>生活</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
